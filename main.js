(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{UI:()=>Ms,Ji:()=>ys,mL:()=>ps,Eh:()=>ks,jO:()=>gs,Lz:()=>Ps,sZ:()=>_s,PM:()=>xs});const t=(e,t)=>{const n=new Uint32Array(t);gs.queue.writeBuffer(e,0,n.buffer,0,t.length*Uint32Array.BYTES_PER_ELEMENT)},n=(e,n)=>{const r=new Uint32Array(e),s=gs.createBuffer({size:r.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:n});return t(s,e),s},r=(e,t)=>{if(t instanceof Float32Array)gs.queue.writeBuffer(e,0,t.buffer,0,t.length*Float32Array.BYTES_PER_ELEMENT);else{const n=new Float32Array(t);gs.queue.writeBuffer(e,0,n.buffer,0,t.length*Float32Array.BYTES_PER_ELEMENT)}},s=(e,t,n)=>{const s=new Float32Array(t),i=e.createBuffer({size:s.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:n});return r(i,t),i};let i=1e-6,a=Float32Array;function o(e=0,t=0){const n=new a(2);return void 0!==e&&(n[0]=e,void 0!==t&&(n[1]=t)),n}let c=Float32Array;function u(e,t,n){const r=new c(3);return void 0!==e&&(r[0]=e,void 0!==t&&(r[1]=t,void 0!==n&&(r[2]=n))),r}const l=o;function h(e,t,n){return(n=n||new a(2))[0]=e[0]-t[0],n[1]=e[1]-t[1],n}const f=h;function d(e,t,n){return(n=n||new a(2))[0]=e[0]*t,n[1]=e[1]*t,n}const m=d;function p(e,t){return(t=t||new a(2))[0]=1/e[0],t[1]=1/e[1],t}const g=p;function _(e,t){return e[0]*t[0]+e[1]*t[1]}function y(e){const t=e[0],n=e[1];return Math.sqrt(t*t+n*n)}const v=y;function x(e){const t=e[0],n=e[1];return t*t+n*n}const w=x;function b(e,t){const n=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(n*n+r*r)}const k=b;function T(e,t){const n=e[0]-t[0],r=e[1]-t[1];return n*n+r*r}const S=T;function M(e,t){return(t=t||new a(2))[0]=e[0],t[1]=e[1],t}const A=M;function P(e,t,n){return(n=n||new a(2))[0]=e[0]*t[0],n[1]=e[1]*t[1],n}const E=P;function z(e,t,n){return(n=n||new a(2))[0]=e[0]/t[0],n[1]=e[1]/t[1],n}const U=z;var I=Object.freeze({__proto__:null,create:o,setDefaultType:function(e){const t=a;return a=e,t},fromValues:l,set:function(e,t,n){return(n=n||new a(2))[0]=e,n[1]=t,n},ceil:function(e,t){return(t=t||new a(2))[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t},floor:function(e,t){return(t=t||new a(2))[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t},round:function(e,t){return(t=t||new a(2))[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t},clamp:function(e,t=0,n=1,r){return(r=r||new a(2))[0]=Math.min(n,Math.max(t,e[0])),r[1]=Math.min(n,Math.max(t,e[1])),r},add:function(e,t,n){return(n=n||new a(2))[0]=e[0]+t[0],n[1]=e[1]+t[1],n},addScaled:function(e,t,n,r){return(r=r||new a(2))[0]=e[0]+t[0]*n,r[1]=e[1]+t[1]*n,r},angle:function(e,t){const n=e[0],r=e[1],s=e[0],i=e[1],a=Math.sqrt(n*n+r*r)*Math.sqrt(s*s+i*i),o=a&&_(e,t)/a;return Math.acos(o)},subtract:h,sub:f,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<i&&Math.abs(e[1]-t[1])<i},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]},lerp:function(e,t,n,r){return(r=r||new a(2))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r},lerpV:function(e,t,n,r){return(r=r||new a(2))[0]=e[0]+n[0]*(t[0]-e[0]),r[1]=e[1]+n[1]*(t[1]-e[1]),r},max:function(e,t,n){return(n=n||new a(2))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n},min:function(e,t,n){return(n=n||new a(2))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n},mulScalar:d,scale:m,divScalar:function(e,t,n){return(n=n||new a(2))[0]=e[0]/t,n[1]=e[1]/t,n},inverse:p,invert:g,cross:function(e,t,n){n=n||new c(3);const r=e[0]*t[1]-e[1]*t[0];return n[0]=0,n[1]=0,n[2]=r,n},dot:_,length:y,len:v,lengthSq:x,lenSq:w,distance:b,dist:k,distanceSq:T,distSq:S,normalize:function(e,t){t=t||new a(2);const n=e[0],r=e[1],s=Math.sqrt(n*n+r*r);return s>1e-5?(t[0]=n/s,t[1]=r/s):(t[0]=0,t[1]=0),t},negate:function(e,t){return(t=t||new a(2))[0]=-e[0],t[1]=-e[1],t},copy:M,clone:A,multiply:P,mul:E,divide:z,div:U,random:function(e=1,t){t=t||new a(2);const n=2*Math.random()*Math.PI;return t[0]=Math.cos(n)*e,t[1]=Math.sin(n)*e,t},zero:function(e){return(e=e||new a(2))[0]=0,e[1]=0,e},transformMat4:function(e,t,n){n=n||new a(2);const r=e[0],s=e[1];return n[0]=r*t[0]+s*t[4]+t[12],n[1]=r*t[1]+s*t[5]+t[13],n},transformMat3:function(e,t,n){n=n||new a(2);const r=e[0],s=e[1];return n[0]=t[0]*r+t[4]*s+t[8],n[1]=t[1]*r+t[5]*s+t[9],n}});Float32Array;new Map([[Float32Array,()=>new Float32Array(12)],[Float64Array,()=>new Float64Array(12)],[Array,()=>new Array(12).fill(0)]]).get(Float32Array);const C=u;function O(e,t,n){return(n=n||new c(3))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n}const R=O;function B(e,t,n){return(n=n||new c(3))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n}const D=B;function N(e,t){return(t=t||new c(3))[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t}const V=N;function G(e,t,n){n=n||new c(3);const r=e[2]*t[0]-e[0]*t[2],s=e[0]*t[1]-e[1]*t[0];return n[0]=e[1]*t[2]-e[2]*t[1],n[1]=r,n[2]=s,n}function j(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function q(e){const t=e[0],n=e[1],r=e[2];return Math.sqrt(t*t+n*n+r*r)}const L=q;function F(e){const t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r}const Y=F;function H(e,t){const n=e[0]-t[0],r=e[1]-t[1],s=e[2]-t[2];return Math.sqrt(n*n+r*r+s*s)}const $=H;function W(e,t){const n=e[0]-t[0],r=e[1]-t[1],s=e[2]-t[2];return n*n+r*r+s*s}const X=W;function Z(e,t){t=t||new c(3);const n=e[0],r=e[1],s=e[2],i=Math.sqrt(n*n+r*r+s*s);return i>1e-5?(t[0]=n/i,t[1]=r/i,t[2]=s/i):(t[0]=0,t[1]=0,t[2]=0),t}function Q(e,t){return(t=t||new c(3))[0]=e[0],t[1]=e[1],t[2]=e[2],t}const K=Q;function J(e,t,n){return(n=n||new c(3))[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n}const ee=J;function te(e,t,n){return(n=n||new c(3))[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n}const ne=te;var re=Object.freeze({__proto__:null,create:u,setDefaultType:function(e){const t=c;return c=e,t},fromValues:C,set:function(e,t,n,r){return(r=r||new c(3))[0]=e,r[1]=t,r[2]=n,r},ceil:function(e,t){return(t=t||new c(3))[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t},floor:function(e,t){return(t=t||new c(3))[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t},round:function(e,t){return(t=t||new c(3))[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t},clamp:function(e,t=0,n=1,r){return(r=r||new c(3))[0]=Math.min(n,Math.max(t,e[0])),r[1]=Math.min(n,Math.max(t,e[1])),r[2]=Math.min(n,Math.max(t,e[2])),r},add:function(e,t,n){return(n=n||new c(3))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n},addScaled:function(e,t,n,r){return(r=r||new c(3))[0]=e[0]+t[0]*n,r[1]=e[1]+t[1]*n,r[2]=e[2]+t[2]*n,r},angle:function(e,t){const n=e[0],r=e[1],s=e[2],i=e[0],a=e[1],o=e[2],c=Math.sqrt(n*n+r*r+s*s)*Math.sqrt(i*i+a*a+o*o),u=c&&j(e,t)/c;return Math.acos(u)},subtract:O,sub:R,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<i&&Math.abs(e[1]-t[1])<i&&Math.abs(e[2]-t[2])<i},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},lerp:function(e,t,n,r){return(r=r||new c(3))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r[2]=e[2]+n*(t[2]-e[2]),r},lerpV:function(e,t,n,r){return(r=r||new c(3))[0]=e[0]+n[0]*(t[0]-e[0]),r[1]=e[1]+n[1]*(t[1]-e[1]),r[2]=e[2]+n[2]*(t[2]-e[2]),r},max:function(e,t,n){return(n=n||new c(3))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n[2]=Math.max(e[2],t[2]),n},min:function(e,t,n){return(n=n||new c(3))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n[2]=Math.min(e[2],t[2]),n},mulScalar:B,scale:D,divScalar:function(e,t,n){return(n=n||new c(3))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n},inverse:N,invert:V,cross:G,dot:j,length:q,len:L,lengthSq:F,lenSq:Y,distance:H,dist:$,distanceSq:W,distSq:X,normalize:Z,negate:function(e,t){return(t=t||new c(3))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},copy:Q,clone:K,multiply:J,mul:ee,divide:te,div:ne,random:function(e=1,t){t=t||new c(3);const n=2*Math.random()*Math.PI,r=2*Math.random()-1,s=Math.sqrt(1-r*r)*e;return t[0]=Math.cos(n)*s,t[1]=Math.sin(n)*s,t[2]=r*e,t},zero:function(e){return(e=e||new c(3))[0]=0,e[1]=0,e[2]=0,e},transformMat4:function(e,t,n){n=n||new c(3);const r=e[0],s=e[1],i=e[2],a=t[3]*r+t[7]*s+t[11]*i+t[15]||1;return n[0]=(t[0]*r+t[4]*s+t[8]*i+t[12])/a,n[1]=(t[1]*r+t[5]*s+t[9]*i+t[13])/a,n[2]=(t[2]*r+t[6]*s+t[10]*i+t[14])/a,n},transformMat4Upper3x3:function(e,t,n){n=n||new c(3);const r=e[0],s=e[1],i=e[2];return n[0]=r*t[0]+s*t[4]+i*t[8],n[1]=r*t[1]+s*t[5]+i*t[9],n[2]=r*t[2]+s*t[6]+i*t[10],n},transformMat3:function(e,t,n){n=n||new c(3);const r=e[0],s=e[1],i=e[2];return n[0]=r*t[0]+s*t[4]+i*t[8],n[1]=r*t[1]+s*t[5]+i*t[9],n[2]=r*t[2]+s*t[6]+i*t[10],n},transformQuat:function(e,t,n){n=n||new c(3);const r=t[0],s=t[1],i=t[2],a=2*t[3],o=e[0],u=e[1],l=e[2],h=s*l-i*u,f=i*o-r*l,d=r*u-s*o;return n[0]=o+h*a+2*(s*d-i*f),n[1]=u+f*a+2*(i*h-r*d),n[2]=l+d*a+2*(r*f-s*h),n},getTranslation:function(e,t){return(t=t||new c(3))[0]=e[12],t[1]=e[13],t[2]=e[14],t},getAxis:function(e,t,n){const r=4*t;return(n=n||new c(3))[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},getScaling:function(e,t){t=t||new c(3);const n=e[0],r=e[1],s=e[2],i=e[4],a=e[5],o=e[6],u=e[8],l=e[9],h=e[10];return t[0]=Math.sqrt(n*n+r*r+s*s),t[1]=Math.sqrt(i*i+a*a+o*o),t[2]=Math.sqrt(u*u+l*l+h*h),t}});let se=Float32Array;function ie(e,t){return(t=t||new se(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}const ae=ie;function oe(e){return(e=e||new se(16))[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ce(e,t){t=t||new se(16);const n=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],c=e[6],u=e[7],l=e[8],h=e[9],f=e[10],d=e[11],m=e[12],p=e[13],g=e[14],_=e[15],y=f*_,v=g*d,x=c*_,w=g*u,b=c*d,k=f*u,T=s*_,S=g*i,M=s*d,A=f*i,P=s*u,E=c*i,z=l*p,U=m*h,I=a*p,C=m*o,O=a*h,R=l*o,B=n*p,D=m*r,N=n*h,V=l*r,G=n*o,j=a*r,q=y*o+w*h+b*p-(v*o+x*h+k*p),L=v*r+T*h+A*p-(y*r+S*h+M*p),F=x*r+S*o+P*p-(w*r+T*o+E*p),Y=k*r+M*o+E*h-(b*r+A*o+P*h),H=1/(n*q+a*L+l*F+m*Y);return t[0]=H*q,t[1]=H*L,t[2]=H*F,t[3]=H*Y,t[4]=H*(v*a+x*l+k*m-(y*a+w*l+b*m)),t[5]=H*(y*n+S*l+M*m-(v*n+T*l+A*m)),t[6]=H*(w*n+T*a+E*m-(x*n+S*a+P*m)),t[7]=H*(b*n+A*a+P*l-(k*n+M*a+E*l)),t[8]=H*(z*u+C*d+O*_-(U*u+I*d+R*_)),t[9]=H*(U*i+B*d+V*_-(z*i+D*d+N*_)),t[10]=H*(I*i+D*u+G*_-(C*i+B*u+j*_)),t[11]=H*(R*i+N*u+j*d-(O*i+V*u+G*d)),t[12]=H*(I*f+R*g+U*c-(O*g+z*c+C*f)),t[13]=H*(N*g+z*s+D*f-(B*f+V*g+U*s)),t[14]=H*(B*c+j*g+C*s-(G*g+I*s+D*c)),t[15]=H*(G*f+O*s+V*c-(N*c+j*f+R*s)),t}const ue=ce;function le(e,t,n){n=n||new se(16);const r=e[0],s=e[1],i=e[2],a=e[3],o=e[4],c=e[5],u=e[6],l=e[7],h=e[8],f=e[9],d=e[10],m=e[11],p=e[12],g=e[13],_=e[14],y=e[15],v=t[0],x=t[1],w=t[2],b=t[3],k=t[4],T=t[5],S=t[6],M=t[7],A=t[8],P=t[9],E=t[10],z=t[11],U=t[12],I=t[13],C=t[14],O=t[15];return n[0]=r*v+o*x+h*w+p*b,n[1]=s*v+c*x+f*w+g*b,n[2]=i*v+u*x+d*w+_*b,n[3]=a*v+l*x+m*w+y*b,n[4]=r*k+o*T+h*S+p*M,n[5]=s*k+c*T+f*S+g*M,n[6]=i*k+u*T+d*S+_*M,n[7]=a*k+l*T+m*S+y*M,n[8]=r*A+o*P+h*E+p*z,n[9]=s*A+c*P+f*E+g*z,n[10]=i*A+u*P+d*E+_*z,n[11]=a*A+l*P+m*E+y*z,n[12]=r*U+o*I+h*C+p*O,n[13]=s*U+c*I+f*C+g*O,n[14]=i*U+u*I+d*C+_*O,n[15]=a*U+l*I+m*C+y*O,n}const he=le;let fe,de,me;function pe(e,t,n){n=n||new se(16);let r=e[0],s=e[1],i=e[2];const a=Math.sqrt(r*r+s*s+i*i);r/=a,s/=a,i/=a;const o=r*r,c=s*s,u=i*i,l=Math.cos(t),h=Math.sin(t),f=1-l;return n[0]=o+(1-o)*l,n[1]=r*s*f+i*h,n[2]=r*i*f-s*h,n[3]=0,n[4]=r*s*f-i*h,n[5]=c+(1-c)*l,n[6]=s*i*f+r*h,n[7]=0,n[8]=r*i*f+s*h,n[9]=s*i*f-r*h,n[10]=u+(1-u)*l,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}const ge=pe;function _e(e,t,n,r){r=r||new se(16);let s=t[0],i=t[1],a=t[2];const o=Math.sqrt(s*s+i*i+a*a);s/=o,i/=o,a/=o;const c=s*s,u=i*i,l=a*a,h=Math.cos(n),f=Math.sin(n),d=1-h,m=c+(1-c)*h,p=s*i*d+a*f,g=s*a*d-i*f,_=s*i*d-a*f,y=u+(1-u)*h,v=i*a*d+s*f,x=s*a*d+i*f,w=i*a*d-s*f,b=l+(1-l)*h,k=e[0],T=e[1],S=e[2],M=e[3],A=e[4],P=e[5],E=e[6],z=e[7],U=e[8],I=e[9],C=e[10],O=e[11];return r[0]=m*k+p*A+g*U,r[1]=m*T+p*P+g*I,r[2]=m*S+p*E+g*C,r[3]=m*M+p*z+g*O,r[4]=_*k+y*A+v*U,r[5]=_*T+y*P+v*I,r[6]=_*S+y*E+v*C,r[7]=_*M+y*z+v*O,r[8]=x*k+w*A+b*U,r[9]=x*T+w*P+b*I,r[10]=x*S+w*E+b*C,r[11]=x*M+w*z+b*O,e!==r&&(r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r}const ye=_e;var ve=Object.freeze({__proto__:null,setDefaultType:function(e){const t=se;return se=e,t},create:function(e,t,n,r,s,i,a,o,c,u,l,h,f,d,m,p){const g=new se(16);return void 0!==e&&(g[0]=e,void 0!==t&&(g[1]=t,void 0!==n&&(g[2]=n,void 0!==r&&(g[3]=r,void 0!==s&&(g[4]=s,void 0!==i&&(g[5]=i,void 0!==a&&(g[6]=a,void 0!==o&&(g[7]=o,void 0!==c&&(g[8]=c,void 0!==u&&(g[9]=u,void 0!==l&&(g[10]=l,void 0!==h&&(g[11]=h,void 0!==f&&(g[12]=f,void 0!==d&&(g[13]=d,void 0!==m&&(g[14]=m,void 0!==p&&(g[15]=p)))))))))))))))),g},set:function(e,t,n,r,s,i,a,o,c,u,l,h,f,d,m,p,g){return(g=g||new se(16))[0]=e,g[1]=t,g[2]=n,g[3]=r,g[4]=s,g[5]=i,g[6]=a,g[7]=o,g[8]=c,g[9]=u,g[10]=l,g[11]=h,g[12]=f,g[13]=d,g[14]=m,g[15]=p,g},fromMat3:function(e,t){return(t=t||new se(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=0,t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=0,t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromQuat:function(e,t){t=t||new se(16);const n=e[0],r=e[1],s=e[2],i=e[3],a=n+n,o=r+r,c=s+s,u=n*a,l=r*a,h=r*o,f=s*a,d=s*o,m=s*c,p=i*a,g=i*o,_=i*c;return t[0]=1-h-m,t[1]=l+_,t[2]=f-g,t[3]=0,t[4]=l-_,t[5]=1-u-m,t[6]=d+p,t[7]=0,t[8]=f+g,t[9]=d-p,t[10]=1-u-h,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},negate:function(e,t){return(t=t||new se(16))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},copy:ie,clone:ae,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<i&&Math.abs(e[1]-t[1])<i&&Math.abs(e[2]-t[2])<i&&Math.abs(e[3]-t[3])<i&&Math.abs(e[4]-t[4])<i&&Math.abs(e[5]-t[5])<i&&Math.abs(e[6]-t[6])<i&&Math.abs(e[7]-t[7])<i&&Math.abs(e[8]-t[8])<i&&Math.abs(e[9]-t[9])<i&&Math.abs(e[10]-t[10])<i&&Math.abs(e[11]-t[11])<i&&Math.abs(e[12]-t[12])<i&&Math.abs(e[13]-t[13])<i&&Math.abs(e[14]-t[14])<i&&Math.abs(e[15]-t[15])<i},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},identity:oe,transpose:function(e,t){if((t=t||new se(16))===e){let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,t}const n=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],c=e[6],u=e[7],l=e[8],h=e[9],f=e[10],d=e[11],m=e[12],p=e[13],g=e[14],_=e[15];return t[0]=n,t[1]=a,t[2]=l,t[3]=m,t[4]=r,t[5]=o,t[6]=h,t[7]=p,t[8]=s,t[9]=c,t[10]=f,t[11]=g,t[12]=i,t[13]=u,t[14]=d,t[15]=_,t},inverse:ce,determinant:function(e){const t=e[0],n=e[1],r=e[2],s=e[3],i=e[4],a=e[5],o=e[6],c=e[7],u=e[8],l=e[9],h=e[10],f=e[11],d=e[12],m=e[13],p=e[14],g=e[15],_=h*g,y=p*f,v=o*g,x=p*c,w=o*f,b=h*c,k=r*g,T=p*s,S=r*f,M=h*s,A=r*c,P=o*s;return t*(_*a+x*l+w*m-(y*a+v*l+b*m))+i*(y*n+k*l+M*m-(_*n+T*l+S*m))+u*(v*n+T*a+A*m-(x*n+k*a+P*m))+d*(b*n+S*a+P*l-(w*n+M*a+A*l))},invert:ue,multiply:le,mul:he,setTranslation:function(e,t,n){return e!==(n=n||oe())&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11]),n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n},getTranslation:function(e,t){return(t=t||u())[0]=e[12],t[1]=e[13],t[2]=e[14],t},getAxis:function(e,t,n){const r=4*t;return(n=n||u())[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},setAxis:function(e,t,n,r){r!==e&&(r=ie(e,r));const s=4*n;return r[s+0]=t[0],r[s+1]=t[1],r[s+2]=t[2],r},getScaling:function(e,t){t=t||u();const n=e[0],r=e[1],s=e[2],i=e[4],a=e[5],o=e[6],c=e[8],l=e[9],h=e[10];return t[0]=Math.sqrt(n*n+r*r+s*s),t[1]=Math.sqrt(i*i+a*a+o*o),t[2]=Math.sqrt(c*c+l*l+h*h),t},perspective:function(e,t,n,r,s){s=s||new se(16);const i=Math.tan(.5*Math.PI-.5*e);if(s[0]=i/t,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=i,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[11]=-1,s[12]=0,s[13]=0,s[15]=0,r===1/0)s[10]=-1,s[14]=-n;else{const e=1/(n-r);s[10]=r*e,s[14]=r*n*e}return s},ortho:function(e,t,n,r,s,i,a){return(a=a||new se(16))[0]=2/(t-e),a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/(r-n),a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1/(s-i),a[11]=0,a[12]=(t+e)/(e-t),a[13]=(r+n)/(n-r),a[14]=s/(s-i),a[15]=1,a},frustum:function(e,t,n,r,s,i,a){const o=t-e,c=r-n,u=s-i;return(a=a||new se(16))[0]=2*s/o,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2*s/c,a[6]=0,a[7]=0,a[8]=(e+t)/o,a[9]=(r+n)/c,a[10]=i/u,a[11]=-1,a[12]=0,a[13]=0,a[14]=s*i/u,a[15]=0,a},aim:function(e,t,n,r){return r=r||new se(16),fe=fe||u(),de=de||u(),me=me||u(),Z(O(t,e,me),me),Z(G(n,me,fe),fe),Z(G(me,fe,de),de),r[0]=fe[0],r[1]=fe[1],r[2]=fe[2],r[3]=0,r[4]=de[0],r[5]=de[1],r[6]=de[2],r[7]=0,r[8]=me[0],r[9]=me[1],r[10]=me[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},cameraAim:function(e,t,n,r){return r=r||new se(16),fe=fe||u(),de=de||u(),me=me||u(),Z(O(e,t,me),me),Z(G(n,me,fe),fe),Z(G(me,fe,de),de),r[0]=fe[0],r[1]=fe[1],r[2]=fe[2],r[3]=0,r[4]=de[0],r[5]=de[1],r[6]=de[2],r[7]=0,r[8]=me[0],r[9]=me[1],r[10]=me[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},lookAt:function(e,t,n,r){return r=r||new se(16),fe=fe||u(),de=de||u(),me=me||u(),Z(O(e,t,me),me),Z(G(n,me,fe),fe),Z(G(me,fe,de),de),r[0]=fe[0],r[1]=de[0],r[2]=me[0],r[3]=0,r[4]=fe[1],r[5]=de[1],r[6]=me[1],r[7]=0,r[8]=fe[2],r[9]=de[2],r[10]=me[2],r[11]=0,r[12]=-(fe[0]*e[0]+fe[1]*e[1]+fe[2]*e[2]),r[13]=-(de[0]*e[0]+de[1]*e[1]+de[2]*e[2]),r[14]=-(me[0]*e[0]+me[1]*e[1]+me[2]*e[2]),r[15]=1,r},translation:function(e,t){return(t=t||new se(16))[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t},translate:function(e,t,n){n=n||new se(16);const r=t[0],s=t[1],i=t[2],a=e[0],o=e[1],c=e[2],u=e[3],l=e[4],h=e[5],f=e[6],d=e[7],m=e[8],p=e[9],g=e[10],_=e[11],y=e[12],v=e[13],x=e[14],w=e[15];return e!==n&&(n[0]=a,n[1]=o,n[2]=c,n[3]=u,n[4]=l,n[5]=h,n[6]=f,n[7]=d,n[8]=m,n[9]=p,n[10]=g,n[11]=_),n[12]=a*r+l*s+m*i+y,n[13]=o*r+h*s+p*i+v,n[14]=c*r+f*s+g*i+x,n[15]=u*r+d*s+_*i+w,n},rotationX:function(e,t){t=t||new se(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=r,t[7]=0,t[8]=0,t[9]=-r,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateX:function(e,t,n){n=n||new se(16);const r=e[4],s=e[5],i=e[6],a=e[7],o=e[8],c=e[9],u=e[10],l=e[11],h=Math.cos(t),f=Math.sin(t);return n[4]=h*r+f*o,n[5]=h*s+f*c,n[6]=h*i+f*u,n[7]=h*a+f*l,n[8]=h*o-f*r,n[9]=h*c-f*s,n[10]=h*u-f*i,n[11]=h*l-f*a,e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationY:function(e,t){t=t||new se(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=0,t[2]=-r,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=r,t[9]=0,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateY:function(e,t,n){n=n||new se(16);const r=e[0],s=e[1],i=e[2],a=e[3],o=e[8],c=e[9],u=e[10],l=e[11],h=Math.cos(t),f=Math.sin(t);return n[0]=h*r-f*o,n[1]=h*s-f*c,n[2]=h*i-f*u,n[3]=h*a-f*l,n[8]=h*o+f*r,n[9]=h*c+f*s,n[10]=h*u+f*i,n[11]=h*l+f*a,e!==n&&(n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationZ:function(e,t){t=t||new se(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=r,t[2]=0,t[3]=0,t[4]=-r,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateZ:function(e,t,n){n=n||new se(16);const r=e[0],s=e[1],i=e[2],a=e[3],o=e[4],c=e[5],u=e[6],l=e[7],h=Math.cos(t),f=Math.sin(t);return n[0]=h*r+f*o,n[1]=h*s+f*c,n[2]=h*i+f*u,n[3]=h*a+f*l,n[4]=h*o-f*r,n[5]=h*c-f*s,n[6]=h*u-f*i,n[7]=h*l-f*a,e!==n&&(n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},axisRotation:pe,rotation:ge,axisRotate:_e,rotate:ye,scaling:function(e,t){return(t=t||new se(16))[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},scale:function(e,t,n){n=n||new se(16);const r=t[0],s=t[1],i=t[2];return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=r*e[3],n[4]=s*e[4],n[5]=s*e[5],n[6]=s*e[6],n[7]=s*e[7],n[8]=i*e[8],n[9]=i*e[9],n[10]=i*e[10],n[11]=i*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},uniformScaling:function(e,t){return(t=t||new se(16))[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},uniformScale:function(e,t,n){return(n=n||new se(16))[0]=t*e[0],n[1]=t*e[1],n[2]=t*e[2],n[3]=t*e[3],n[4]=t*e[4],n[5]=t*e[5],n[6]=t*e[6],n[7]=t*e[7],n[8]=t*e[8],n[9]=t*e[9],n[10]=t*e[10],n[11]=t*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n}});let xe=Float32Array;function we(e,t,n,r){const s=new xe(4);return void 0!==e&&(s[0]=e,void 0!==t&&(s[1]=t,void 0!==n&&(s[2]=n,void 0!==r&&(s[3]=r)))),s}const be=we;function ke(e,t,n){n=n||new xe(4);const r=.5*t,s=Math.sin(r);return n[0]=s*e[0],n[1]=s*e[1],n[2]=s*e[2],n[3]=Math.cos(r),n}function Te(e,t,n){n=n||new xe(4);const r=e[0],s=e[1],i=e[2],a=e[3],o=t[0],c=t[1],u=t[2],l=t[3];return n[0]=r*l+a*o+s*u-i*c,n[1]=s*l+a*c+i*o-r*u,n[2]=i*l+a*u+r*c-s*o,n[3]=a*l-r*o-s*c-i*u,n}const Se=Te;function Me(e,t,n,r){r=r||new xe(4);const s=e[0],a=e[1],o=e[2],c=e[3];let u,l,h=t[0],f=t[1],d=t[2],m=t[3],p=s*h+a*f+o*d+c*m;if(p<0&&(p=-p,h=-h,f=-f,d=-d,m=-m),1-p>i){const e=Math.acos(p),t=Math.sin(e);u=Math.sin((1-n)*e)/t,l=Math.sin(n*e)/t}else u=1-n,l=n;return r[0]=u*s+l*h,r[1]=u*a+l*f,r[2]=u*o+l*d,r[3]=u*c+l*m,r}function Ae(e,t){return(t=t||new xe(4))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}const Pe=Ae;function Ee(e,t,n){return(n=n||new xe(4))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n}const ze=Ee;function Ue(e,t,n){return(n=n||new xe(4))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n}const Ie=Ue;function Ce(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function Oe(e){const t=e[0],n=e[1],r=e[2],s=e[3];return Math.sqrt(t*t+n*n+r*r+s*s)}const Re=Oe;function Be(e){const t=e[0],n=e[1],r=e[2],s=e[3];return t*t+n*n+r*r+s*s}const De=Be;function Ne(e,t){t=t||new xe(4);const n=e[0],r=e[1],s=e[2],i=e[3],a=Math.sqrt(n*n+r*r+s*s+i*i);return a>1e-5?(t[0]=n/a,t[1]=r/a,t[2]=s/a,t[3]=i/a):(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}let Ve,Ge,je,qe,Le;var Fe=Object.freeze({__proto__:null,create:we,setDefaultType:function(e){const t=xe;return xe=e,t},fromValues:be,set:function(e,t,n,r,s){return(s=s||new xe(4))[0]=e,s[1]=t,s[2]=n,s[3]=r,s},fromAxisAngle:ke,toAxisAngle:function(e,t){t=t||u(4);const n=2*Math.acos(e[3]),r=Math.sin(.5*n);return r>i?(t[0]=e[0]/r,t[1]=e[1]/r,t[2]=e[2]/r):(t[0]=1,t[1]=0,t[2]=0),{angle:n,axis:t}},angle:function(e,t){const n=Ce(e,t);return Math.acos(2*n*n-1)},multiply:Te,mul:Se,rotateX:function(e,t,n){n=n||new xe(4);const r=.5*t,s=e[0],i=e[1],a=e[2],o=e[3],c=Math.sin(r),u=Math.cos(r);return n[0]=s*u+o*c,n[1]=i*u+a*c,n[2]=a*u-i*c,n[3]=o*u-s*c,n},rotateY:function(e,t,n){n=n||new xe(4);const r=.5*t,s=e[0],i=e[1],a=e[2],o=e[3],c=Math.sin(r),u=Math.cos(r);return n[0]=s*u-a*c,n[1]=i*u+o*c,n[2]=a*u+s*c,n[3]=o*u-i*c,n},rotateZ:function(e,t,n){n=n||new xe(4);const r=.5*t,s=e[0],i=e[1],a=e[2],o=e[3],c=Math.sin(r),u=Math.cos(r);return n[0]=s*u+i*c,n[1]=i*u-s*c,n[2]=a*u+o*c,n[3]=o*u-a*c,n},slerp:Me,inverse:function(e,t){t=t||new xe(4);const n=e[0],r=e[1],s=e[2],i=e[3],a=n*n+r*r+s*s+i*i,o=a?1/a:0;return t[0]=-n*o,t[1]=-r*o,t[2]=-s*o,t[3]=i*o,t},conjugate:function(e,t){return(t=t||new xe(4))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},fromMat:function(e,t){t=t||new xe(4);const n=e[0]+e[5]+e[10];if(n>0){const r=Math.sqrt(n+1);t[3]=.5*r;const s=.5/r;t[0]=(e[6]-e[9])*s,t[1]=(e[8]-e[2])*s,t[2]=(e[1]-e[4])*s}else{let n=0;e[5]>e[0]&&(n=1),e[10]>e[4*n+n]&&(n=2);const r=(n+1)%3,s=(n+2)%3,i=Math.sqrt(e[4*n+n]-e[4*r+r]-e[4*s+s]+1);t[n]=.5*i;const a=.5/i;t[3]=(e[4*r+s]-e[4*s+r])*a,t[r]=(e[4*r+n]+e[4*n+r])*a,t[s]=(e[4*s+n]+e[4*n+s])*a}return t},fromEuler:function(e,t,n,r,s){s=s||new xe(4);const i=.5*e,a=.5*t,o=.5*n,c=Math.sin(i),u=Math.cos(i),l=Math.sin(a),h=Math.cos(a),f=Math.sin(o),d=Math.cos(o);switch(r){case"xyz":s[0]=c*h*d+u*l*f,s[1]=u*l*d-c*h*f,s[2]=u*h*f+c*l*d,s[3]=u*h*d-c*l*f;break;case"xzy":s[0]=c*h*d-u*l*f,s[1]=u*l*d-c*h*f,s[2]=u*h*f+c*l*d,s[3]=u*h*d+c*l*f;break;case"yxz":s[0]=c*h*d+u*l*f,s[1]=u*l*d-c*h*f,s[2]=u*h*f-c*l*d,s[3]=u*h*d+c*l*f;break;case"yzx":s[0]=c*h*d+u*l*f,s[1]=u*l*d+c*h*f,s[2]=u*h*f-c*l*d,s[3]=u*h*d-c*l*f;break;case"zxy":s[0]=c*h*d-u*l*f,s[1]=u*l*d+c*h*f,s[2]=u*h*f+c*l*d,s[3]=u*h*d-c*l*f;break;case"zyx":s[0]=c*h*d-u*l*f,s[1]=u*l*d+c*h*f,s[2]=u*h*f-c*l*d,s[3]=u*h*d+c*l*f;break;default:throw new Error(`Unknown rotation order: ${r}`)}return s},copy:Ae,clone:Pe,add:function(e,t,n){return(n=n||new xe(4))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},subtract:Ee,sub:ze,mulScalar:Ue,scale:Ie,divScalar:function(e,t,n){return(n=n||new xe(4))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n[3]=e[3]/t,n},dot:Ce,lerp:function(e,t,n,r){return(r=r||new xe(4))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r[2]=e[2]+n*(t[2]-e[2]),r[3]=e[3]+n*(t[3]-e[3]),r},length:Oe,len:Re,lengthSq:Be,lenSq:De,normalize:Ne,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<i&&Math.abs(e[1]-t[1])<i&&Math.abs(e[2]-t[2])<i&&Math.abs(e[3]-t[3])<i},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},identity:function(e){return(e=e||new xe(4))[0]=0,e[1]=0,e[2]=0,e[3]=1,e},rotationTo:function(e,t,n){n=n||new xe(4),Ve=Ve||u(),Ge=Ge||u(1,0,0),je=je||u(0,1,0);const r=j(e,t);return r<-.999999?(G(Ge,e,Ve),L(Ve)<1e-6&&G(je,e,Ve),Z(Ve,Ve),ke(Ve,Math.PI,n),n):r>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(G(e,t,Ve),n[0]=Ve[0],n[1]=Ve[1],n[2]=Ve[2],n[3]=1+r,Ne(n,n))},sqlerp:function(e,t,n,r,s,i){return i=i||new xe(4),qe=qe||new xe(4),Le=Le||new xe(4),Me(e,r,s,qe),Me(t,n,s,Le),Me(qe,Le,2*s*(1-s),i),i}});Float32Array;const Ye={duration:.3,delay:0,endDelay:0,repeat:0,easing:"ease"},He=e=>1e3*e,$e=e=>e/1e3,We=()=>{},Xe=e=>e;function Ze(e,t=!0){if(e&&"finished"!==e.playState)try{e.stop?e.stop():(t&&e.commitStyles(),e.cancel())}catch(e){}}const Qe=e=>e(),Ke=(e,t,n=Ye.duration)=>new Proxy({animations:e.map(Qe).filter(Boolean),duration:n,options:t},Je),Je={get:(e,t)=>{const n=e.animations[0];switch(t){case"duration":return e.duration;case"currentTime":return $e((null==n?void 0:n[t])||0);case"playbackRate":case"playState":return null==n?void 0:n[t];case"finished":return e.finished||(e.finished=Promise.all(e.animations.map(et)).catch(We)),e.finished;case"stop":return()=>{e.animations.forEach((e=>Ze(e)))};case"forEachNative":return t=>{e.animations.forEach((n=>t(n,e)))};default:return void 0===(null==n?void 0:n[t])?void 0:()=>e.animations.forEach((e=>e[t]()))}},set:(e,t,n)=>{switch(t){case"currentTime":n=He(n);case"playbackRate":for(let r=0;r<e.animations.length;r++)e.animations[r][t]=n;return!0}return!1}},et=e=>e.finished,tt=e=>"object"==typeof e&&Boolean(e.createAnimation),nt=e=>"number"==typeof e,rt=e=>Array.isArray(e)&&!nt(e[0]),st=(e,t,n)=>-n*e+n*t+e,it=(e,t,n)=>t-e==0?1:(n-e)/(t-e);function at(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const s=it(0,t,r);e.push(st(n,1,s))}}const ot=(e,t,n)=>Math.min(Math.max(n,e),t);const ct=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e,ut=1e-7,lt=12;function ht(e,t,n,r){if(e===t&&n===r)return Xe;return s=>0===s||1===s?s:ct(function(e,t,n,r,s){let i,a,o=0;do{a=t+(n-t)/2,i=ct(a,r,s)-e,i>0?n=a:t=a}while(Math.abs(i)>ut&&++o<lt);return a}(s,0,1,e,n),t,r)}const ft=e=>"function"==typeof e,dt=e=>Array.isArray(e)&&nt(e[0]),mt={ease:ht(.25,.1,.25,1),"ease-in":ht(.42,0,1,1),"ease-in-out":ht(.42,0,.58,1),"ease-out":ht(0,0,.58,1)},pt=/\((.*?)\)/;function gt(e){if(ft(e))return e;if(dt(e))return ht(...e);if(mt[e])return mt[e];if(e.startsWith("steps")){const t=pt.exec(e);if(t){const e=t[1].split(",");return((e,t="end")=>n=>{const r=(n="end"===t?Math.min(n,.999):Math.max(n,.001))*e,s="end"===t?Math.floor(r):Math.ceil(r);return ot(0,1,s/e)})(parseFloat(e[0]),e[1].trim())}}return Xe}class _t{constructor(e,t=[0,1],{easing:n,duration:r=Ye.duration,delay:s=Ye.delay,endDelay:i=Ye.endDelay,repeat:a=Ye.repeat,offset:o,direction:c="normal",autoplay:u=!0}={}){if(this.startTime=null,this.rate=1,this.t=0,this.cancelTimestamp=null,this.easing=Xe,this.duration=0,this.totalDuration=0,this.repeat=0,this.playState="idle",this.finished=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),n=n||Ye.easing,tt(n)){const e=n.createAnimation(t);n=e.easing,t=e.keyframes||t,r=e.duration||r}this.repeat=a,this.easing=rt(n)?Xe:gt(n),this.updateDuration(r);const l=function(e,t=function(e){const t=[0];return at(t,e-1),t}(e.length),n=Xe){const r=e.length,s=r-t.length;return s>0&&at(t,s),s=>{let i=0;for(;i<r-2&&!(s<t[i+1]);i++);let a=ot(0,1,it(t[i],t[i+1],s));const o=function(e,t){return rt(e)?e[((e,t,n)=>{const r=t-e;return((n-e)%r+r)%r+e})(0,e.length,t)]:e}(n,i);return a=o(a),st(e[i],e[i+1],a)}}(t,o,rt(n)?n.map(gt):Xe);this.tick=t=>{var n;let r=0;r=void 0!==this.pauseTime?this.pauseTime:(t-this.startTime)*this.rate,this.t=r,r/=1e3,r=Math.max(r-s,0),"finished"===this.playState&&void 0===this.pauseTime&&(r=this.totalDuration);const a=r/this.duration;let o=Math.floor(a),u=a%1;!u&&a>=1&&(u=1),1===u&&o--;const h=o%2;("reverse"===c||"alternate"===c&&h||"alternate-reverse"===c&&!h)&&(u=1-u);const f=r>=this.totalDuration?1:Math.min(u,1),d=l(this.easing(f));e(d),void 0===this.pauseTime&&("finished"===this.playState||r>=this.totalDuration+i)?(this.playState="finished",null===(n=this.resolve)||void 0===n||n.call(this,d)):"idle"!==this.playState&&(this.frameRequestId=requestAnimationFrame(this.tick))},u&&this.play()}play(){const e=performance.now();this.playState="running",void 0!==this.pauseTime?this.startTime=e-this.pauseTime:this.startTime||(this.startTime=e),this.cancelTimestamp=this.startTime,this.pauseTime=void 0,this.frameRequestId=requestAnimationFrame(this.tick)}pause(){this.playState="paused",this.pauseTime=this.t}finish(){this.playState="finished",this.tick(0)}stop(){var e;this.playState="idle",void 0!==this.frameRequestId&&cancelAnimationFrame(this.frameRequestId),null===(e=this.reject)||void 0===e||e.call(this,!1)}cancel(){this.stop(),this.tick(this.cancelTimestamp)}reverse(){this.rate*=-1}commitStyles(){}updateDuration(e){this.duration=e,this.totalDuration=e*(this.repeat+1)}get currentTime(){return this.t}set currentTime(e){void 0!==this.pauseTime||0===this.rate?this.pauseTime=e:this.startTime=performance.now()-e/this.rate}get playbackRate(){return this.rate}set playbackRate(e){this.rate=e}}class yt{setAnimation(e){this.animation=e,null==e||e.finished.then((()=>this.clearAnimation())).catch((()=>{}))}clearAnimation(){this.animation=this.generator=void 0}}const vt=new WeakMap;function xt(e){return vt.has(e)||vt.set(e,{transforms:[],values:new Map}),vt.get(e)}const wt=["","X","Y","Z"],bt={x:"translateX",y:"translateY",z:"translateZ"},kt={syntax:"<angle>",initialValue:"0deg",toDefaultUnit:e=>e+"deg"},Tt={translate:{syntax:"<length-percentage>",initialValue:"0px",toDefaultUnit:e=>e+"px"},rotate:kt,scale:{syntax:"<number>",initialValue:1,toDefaultUnit:Xe},skew:kt},St=new Map,Mt=e=>`--motion-${e}`,At=["x","y","z"];["translate","scale","rotate","skew"].forEach((e=>{wt.forEach((t=>{At.push(e+t),St.set(Mt(e+t),Tt[e])}))}));const Pt=(e,t)=>At.indexOf(e)-At.indexOf(t),Et=new Set(At),zt=e=>Et.has(e),Ut=e=>e.sort(Pt).reduce(It,"").trim(),It=(e,t)=>`${e} ${t}(var(${Mt(t)}))`,Ct=e=>e.startsWith("--"),Ot=new Set,Rt=(e,t)=>document.createElement("div").animate(e,t),Bt={cssRegisterProperty:()=>"undefined"!=typeof CSS&&Object.hasOwnProperty.call(CSS,"registerProperty"),waapi:()=>Object.hasOwnProperty.call(Element.prototype,"animate"),partialKeyframes:()=>{try{Rt({opacity:[1]})}catch(e){return!1}return!0},finished:()=>Boolean(Rt({opacity:[0,1]},{duration:.001}).finished),linearEasing:()=>{try{Rt({opacity:0},{easing:"linear(0, 1)"})}catch(e){return!1}return!0}},Dt={},Nt={};for(const e in Bt)Nt[e]=()=>(void 0===Dt[e]&&(Dt[e]=Bt[e]()),Dt[e]);const Vt=(e,t)=>ft(e)?Nt.linearEasing()?`linear(${((e,t)=>{let n="";const r=Math.round(t/.015);for(let t=0;t<r;t++)n+=e(it(0,r-1,t))+", ";return n.substring(0,n.length-2)})(e,t)})`:Ye.easing:dt(e)?Gt(e):e,Gt=([e,t,n,r])=>`cubic-bezier(${e}, ${t}, ${n}, ${r})`;function jt(e){return bt[e]&&(e=bt[e]),zt(e)?Mt(e):e}const qt=(e,t)=>{t=jt(t);let n=Ct(t)?e.style.getPropertyValue(t):getComputedStyle(e)[t];if(!n&&0!==n){const e=St.get(t);e&&(n=e.initialValue)}return n},Lt=(e,t,n)=>{t=jt(t),Ct(t)?e.style.setProperty(t,n):e.style[t]=n},Ft=e=>"string"==typeof e;function Yt(e,t){var n;let r=(null==t?void 0:t.toDefaultUnit)||Xe;const s=e[e.length-1];if(Ft(s)){const e=(null===(n=s.match(/(-?[\d.]+)([a-z%]*)/))||void 0===n?void 0:n[2])||"";e&&(r=t=>t+e)}return r}function Ht(e,t,n,r={},s){const i=window.__MOTION_DEV_TOOLS_RECORD,a=!1!==r.record&&i;let o,{duration:c=Ye.duration,delay:u=Ye.delay,endDelay:l=Ye.endDelay,repeat:h=Ye.repeat,easing:f=Ye.easing,persist:d=!1,direction:m,offset:p,allowWebkitAcceleration:g=!1,autoplay:_=!0}=r;const y=xt(e),v=zt(t);let x=Nt.waapi();v&&((e,t)=>{bt[t]&&(t=bt[t]);const{transforms:n}=xt(e);var r,s;s=t,-1===(r=n).indexOf(s)&&r.push(s),e.style.transform=Ut(n)})(e,t);const w=jt(t),b=function(e,t){return e.has(t)||e.set(t,new yt),e.get(t)}(y.values,w),k=St.get(w);return Ze(b.animation,!(tt(f)&&b.generator)&&!1!==r.record),()=>{const y=()=>{var t,n;return null!==(n=null!==(t=qt(e,w))&&void 0!==t?t:null==k?void 0:k.initialValue)&&void 0!==n?n:0};let T=function(e,t){for(let n=0;n<e.length;n++)null===e[n]&&(e[n]=n?e[n-1]:t());return e}((e=>Array.isArray(e)?e:[e])(n),y);const S=Yt(T,k);if(tt(f)){const e=f.createAnimation(T,"opacity"!==t,y,w,b);f=e.easing,T=e.keyframes||T,c=e.duration||c}if(Ct(w)&&(Nt.cssRegisterProperty()?function(e){if(!Ot.has(e)){Ot.add(e);try{const{syntax:t,initialValue:n}=St.has(e)?St.get(e):{};CSS.registerProperty({name:e,inherits:!1,syntax:t,initialValue:n})}catch(e){}}}(w):x=!1),v&&!Nt.linearEasing()&&(ft(f)||rt(f)&&f.some(ft))&&(x=!1),x){k&&(T=T.map((e=>nt(e)?k.toDefaultUnit(e):e))),1!==T.length||Nt.partialKeyframes()&&!a||T.unshift(y());const t={delay:He(u),duration:He(c),endDelay:He(l),easing:rt(f)?void 0:Vt(f,c),direction:m,iterations:h+1,fill:"both"};o=e.animate({[w]:T,offset:p,easing:rt(f)?f.map((e=>Vt(e,c))):void 0},t),o.finished||(o.finished=new Promise(((e,t)=>{o.onfinish=e,o.oncancel=t})));const n=T[T.length-1];o.finished.then((()=>{d||(Lt(e,w,n),o.cancel())})).catch(We),g||(o.playbackRate=1.000001)}else if(s&&v)T=T.map((e=>"string"==typeof e?parseFloat(e):e)),1===T.length&&T.unshift(parseFloat(y())),o=new s((t=>{Lt(e,w,S?S(t):t)}),T,Object.assign(Object.assign({},r),{duration:c,easing:f}));else{const t=T[T.length-1];Lt(e,w,k&&nt(t)?k.toDefaultUnit(t):t)}return a&&i(e,t,T,{duration:c,delay:u,easing:f,repeat:h,offset:p},"motion-one"),b.setAnimation(o),o&&!_&&o.pause(),o}}const $t=(e,t)=>e[t]?Object.assign(Object.assign({},e),e[t]):Object.assign({},e);function Wt(e,t,n){return ft(e)?e(t,n):e}const Xt=(Zt=_t,function(e,t,n={}){const r=(e=function(e,t){return"string"==typeof e?e=document.querySelectorAll(e):e instanceof Element&&(e=[e]),Array.from(e||[])}(e)).length;Boolean(r),Boolean(t);const s=[];for(let i=0;i<r;i++){const a=e[i];for(const e in t){const o=$t(n,e);o.delay=Wt(o.delay,i,r);const c=Ht(a,e,t[e],o,Zt);s.push(c)}}return Ke(s,n,n.duration)});var Zt;function Qt(e,t={}){return Ke([()=>{const n=new _t(e,[0,1],t);return n.finished.catch((()=>{})),n}],t,t.duration)}function Kt(e,t,n){return(ft(e)?Qt:Xt)(e,t,n)}function Jt(e,t,n){const r=Math.max(t-5,0);return s=n-e(r),(i=t-r)?s*(1e3/i):0;var s,i}function en(e){return nt(e)&&!isNaN(e)}function tn(e){return Ft(e)?parseFloat(e):e}const nn=function(e){const t=new WeakMap;return(e={})=>{const n=new Map,r=(t=0,r=100,s=0,i=!1)=>{const a=`${t}-${r}-${s}-${i}`;return n.has(a)||n.set(a,(({from:e=0,velocity:t=0,power:n=.8,decay:r=.325,bounceDamping:s,bounceStiffness:i,changeTarget:a,min:o,max:c,restDistance:u=.5,restSpeed:l})=>{r=He(r);const h={hasReachedTarget:!1,done:!1,current:e,target:e},f=e=>void 0===o?c:void 0===c||Math.abs(o-e)<Math.abs(c-e)?o:c;let d=n*t;const m=e+d,p=void 0===a?m:a(m);h.target=p,p!==m&&(d=p-e);const g=e=>-d*Math.exp(-e/r),_=e=>p+g(e),y=e=>{const t=g(e),n=_(e);h.done=Math.abs(t)<=u,h.current=h.done?p:n};let v,x;const w=e=>{var t;t=h.current,(void 0!==o&&t<o||void 0!==c&&t>c)&&(v=e,x=(({stiffness:e=100,damping:t=10,mass:n=1,from:r=0,to:s=1,velocity:i=0,restSpeed:a,restDistance:o}={})=>{i=i?$e(i):0;const c={done:!1,hasReachedTarget:!1,current:r,target:s},u=s-r,l=Math.sqrt(e/n)/1e3,h=((e=100,t=10,n=1)=>t/(2*Math.sqrt(e*n)))(e,t,n),f=Math.abs(u)<5;let d;if(a||(a=f?.01:2),o||(o=f?.005:.5),h<1){const e=l*Math.sqrt(1-h*h);d=t=>s-Math.exp(-h*l*t)*((h*l*u-i)/e*Math.sin(e*t)+u*Math.cos(e*t))}else d=e=>s-Math.exp(-l*e)*(u+(l*u-i)*e);return e=>{c.current=d(e);const t=0===e?i:Jt(d,e,c.current),n=Math.abs(t)<=a,u=Math.abs(s-c.current)<=o;var l,h,f;return c.done=n&&u,c.hasReachedTarget=(l=r,h=s,f=c.current,l<h&&f>=h||l>h&&f<=h),c}})({from:h.current,to:f(h.current),velocity:Jt(_,e,h.current),damping:s,stiffness:i,restDistance:u,restSpeed:l}))};return w(0),e=>{let t=!1;return x||void 0!==v||(t=!0,y(e),w(e)),void 0!==v&&e>v?(h.hasReachedTarget=!0,x(e-v)):(h.hasReachedTarget=!1,!t&&y(e),h)}})(Object.assign({from:t,to:r,velocity:s},e))),n.get(a)},s=(e,n)=>(t.has(e)||t.set(e,function(e,t=Xe){let n,r=10,s=e(0);const i=[t(s.current)];for(;!s.done&&r<1e4;)s=e(r),i.push(t(s.done?s.target:s.current)),void 0===n&&s.hasReachedTarget&&(n=r),r+=10;const a=r-10;return 1===i.length&&i.push(s.current),{keyframes:i,duration:a/1e3,overshootDuration:(null!=n?n:a)/1e3}}(e,n)),t.get(e));return{createAnimation:(e,t=!0,n,i,a)=>{let o,c,u,l=0,h=Xe;const f=e.length;if(t)if(h=Yt(e,i?St.get(jt(i)):void 0),u=tn(e[f-1]),f>1&&null!==e[0])c=tn(e[0]);else{const e=null==a?void 0:a.generator;if(e){const{animation:t,generatorStartTime:n}=a,r=(null==t?void 0:t.startTime)||n||0,s=(null==t?void 0:t.currentTime)||performance.now()-r,i=e(s).current;c=i,l=Jt((t=>e(t).current),s,i)}else n&&(c=tn(n()))}if(en(c)&&en(u)){const e=r(c,u,l,null==i?void 0:i.includes("scale"));o=Object.assign(Object.assign({},s(e,h)),{easing:"linear"}),a&&(a.generator=e,a.generatorStartTime=performance.now())}return o||(o={easing:"ease",duration:s(r(0,100)).overshootDuration}),o}}}}();class rn{position;targetPosition;rotation;targetRotation;scale;targetScale;constructor(e){this.position=e.position,this.rotation=e.rotation,this.targetPosition=this.position,this.targetRotation=this.rotation,this.scale=re.create(1,1,1),this.targetScale=this.scale}update(){Kt((e=>{this.position=re.lerp(this.position,this.targetPosition,e)}),{easing:nn({velocity:2e-4*ks})}),Kt((e=>{this.rotation=Fe.slerp(this.rotation,this.targetRotation,e)}),{easing:nn({velocity:2e-4*ks})}),Kt((e=>{this.scale=re.lerp(this.scale,this.targetScale,e)}),{easing:nn({velocity:2e-4*ks})})}}const sn=new class{pressed={w:!1,a:!1,s:!1,d:!1,q:!1,e:!1," ":!1,shift:!1};constructor(){window.addEventListener("keydown",(e=>{const t=e.key.toLowerCase();this.pressed[t]=!0})),window.addEventListener("keyup",(e=>{const t=e.key.toLowerCase();this.pressed[t]=!1})),window.addEventListener("blur",(()=>{Object.keys(this.pressed).forEach((e=>{this.pressed[e]=!1}))}))}},an=async e=>{const t=e.createShaderModule({code:"@group(0) @binding(0) var mySampler : sampler;\n@group(0) @binding(1) var myTexture : texture_2d<f32>;\n//@group(0) @binding(2) var debugTexture : texture_2d<f32>;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n}\n\n@vertex\nfn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n  const pos = array(\n    vec2( 1.0,  1.0),\n    vec2( 1.0, -1.0),\n    vec2(-1.0, -1.0),\n    vec2( 1.0,  1.0),\n    vec2(-1.0, -1.0),\n    vec2(-1.0,  1.0),\n  );\n\n  const uv = array(\n    vec2(1.0, 0.0),\n    vec2(1.0, 1.0),\n    vec2(0.0, 1.0),\n    vec2(1.0, 0.0),\n    vec2(0.0, 1.0),\n    vec2(0.0, 0.0),\n  );\n\n  var output : VertexOutput;\n  output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n  output.fragUV = uv[VertexIndex];\n  return output;\n}\n\nfn get_debug_colour(index : i32) -> vec4<f32> {\n  let colours = array(\n    vec4<f32>(1.0, 0.0, 0.0, 1.0),\n    vec4<f32>(0.0, 1.0, 0.0, 1.0),\n    vec4<f32>(0.0, 0.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 0.0, 1.0),\n    vec4<f32>(1.0, 0.0, 1.0, 1.0),\n    vec4<f32>(0.0, 1.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 1.0, 1.0),\n    vec4<f32>(0.0, 0.0, 0.0, 1.0),\n  );\n  return colours[index % 8];\n}\n\n@fragment\nfn fragment_main(@location(0) fragUV : vec2<f32>) -> @location(0) vec4<f32> {\n    let pixel = fragUV * vec2<f32>(textureDimensions(myTexture));\n    var colour = textureLoad(myTexture, vec2<u32>(pixel),0);\n    return abs(colour);\n}\n"}),n=e.createRenderPipeline({layout:"auto",vertex:{module:t,entryPoint:"vertex_main"},fragment:{module:t,entryPoint:"fragment_main",targets:[{format:navigator.gpu.getPreferredCanvasFormat()}]}});return{render:t=>{const r=t.commandEncoder.beginRenderPass({timestampWrites:t.timestampWrites,colorAttachments:[{view:_s.getCurrentTexture().createView(),loadOp:"clear",clearValue:[.3,.3,.3,1],storeOp:"store"}]}),s=e.createBindGroup({layout:n.getBindGroupLayout(0),entries:[{binding:1,resource:t.outputTextures.finalTexture.createView()}]});return r.setPipeline(n),r.setBindGroup(0,s),r.draw(6),r.end(),[t.commandEncoder.finish()]},label:"fullscreen quad"}},on=e=>e&&"number"==typeof e.length&&e.buffer instanceof ArrayBuffer&&"number"==typeof e.byteLength,cn={i32:{numElements:1,align:4,size:4,type:"i32",View:Int32Array},u32:{numElements:1,align:4,size:4,type:"u32",View:Uint32Array},f32:{numElements:1,align:4,size:4,type:"f32",View:Float32Array},f16:{numElements:1,align:2,size:2,type:"u16",View:Uint16Array},vec2f:{numElements:2,align:8,size:8,type:"f32",View:Float32Array},vec2i:{numElements:2,align:8,size:8,type:"i32",View:Int32Array},vec2u:{numElements:2,align:8,size:8,type:"u32",View:Uint32Array},vec2h:{numElements:2,align:4,size:4,type:"u16",View:Uint16Array},vec3i:{numElements:3,align:16,size:12,type:"i32",View:Int32Array},vec3u:{numElements:3,align:16,size:12,type:"u32",View:Uint32Array},vec3f:{numElements:3,align:16,size:12,type:"f32",View:Float32Array},vec3h:{numElements:3,align:8,size:6,type:"u16",View:Uint16Array},vec4i:{numElements:4,align:16,size:16,type:"i32",View:Int32Array},vec4u:{numElements:4,align:16,size:16,type:"u32",View:Uint32Array},vec4f:{numElements:4,align:16,size:16,type:"f32",View:Float32Array},vec4h:{numElements:4,align:8,size:8,type:"u16",View:Uint16Array},mat2x2f:{numElements:4,align:8,size:16,type:"f32",View:Float32Array},mat2x2h:{numElements:4,align:4,size:8,type:"u16",View:Uint16Array},mat3x2f:{numElements:6,align:8,size:24,type:"f32",View:Float32Array},mat3x2h:{numElements:6,align:4,size:12,type:"u16",View:Uint16Array},mat4x2f:{numElements:8,align:8,size:32,type:"f32",View:Float32Array},mat4x2h:{numElements:8,align:4,size:16,type:"u16",View:Uint16Array},mat2x3f:{numElements:8,align:16,size:32,pad:[3,1],type:"f32",View:Float32Array},mat2x3h:{numElements:8,align:8,size:16,pad:[3,1],type:"u16",View:Uint16Array},mat3x3f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x3h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x3f:{numElements:16,align:16,size:64,pad:[3,1],type:"f32",View:Float32Array},mat4x3h:{numElements:16,align:8,size:32,pad:[3,1],type:"u16",View:Uint16Array},mat2x4f:{numElements:8,align:16,size:32,type:"f32",View:Float32Array},mat2x4h:{numElements:8,align:8,size:16,type:"u16",View:Uint16Array},mat3x4f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x4h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x4f:{numElements:16,align:16,size:64,type:"f32",View:Float32Array},mat4x4h:{numElements:16,align:8,size:32,type:"u16",View:Uint16Array},bool:{numElements:0,align:1,size:0,type:"bool",View:Uint32Array}},un={...cn,"atomic<i32>":cn.i32,"atomic<u32>":cn.u32,"vec2<i32>":cn.vec2i,"vec2<u32>":cn.vec2u,"vec2<f32>":cn.vec2f,"vec2<f16>":cn.vec2h,"vec3<i32>":cn.vec3i,"vec3<u32>":cn.vec3u,"vec3<f32>":cn.vec3f,"vec3<f16>":cn.vec3h,"vec4<i32>":cn.vec4i,"vec4<u32>":cn.vec4u,"vec4<f32>":cn.vec4f,"vec4<f16>":cn.vec4h,"mat2x2<f32>":cn.mat2x2f,"mat2x2<f16>":cn.mat2x2h,"mat3x2<f32>":cn.mat3x2f,"mat3x2<f16>":cn.mat3x2h,"mat4x2<f32>":cn.mat4x2f,"mat4x2<f16>":cn.mat4x2h,"mat2x3<f32>":cn.mat2x3f,"mat2x3<f16>":cn.mat2x3h,"mat3x3<f32>":cn.mat3x3f,"mat3x3<f16>":cn.mat3x3h,"mat4x3<f32>":cn.mat4x3f,"mat4x3<f16>":cn.mat4x3h,"mat2x4<f32>":cn.mat2x4f,"mat2x4<f16>":cn.mat2x4h,"mat3x4<f32>":cn.mat3x4f,"mat3x4<f16>":cn.mat3x4h,"mat4x4<f32>":cn.mat4x4f,"mat4x4<f16>":cn.mat4x4h},ln=(hn=un,Object.keys(hn));var hn,fn,dn,mn,pn,gn;!function(e=[],t){const n=new Set;for(const r of ln){const s=un[r];n.has(s)||(n.add(s),s.flatten=e.includes(r)?t:!t)}}(),new WeakMap;class _n{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class yn{constructor(){}get isAstNode(){return!0}get astNodeType(){return""}evaluate(e){throw new Error("Cannot evaluate node")}evaluateString(e){return this.evaluate(e).toString()}search(e){}searchBlock(e,t){if(e){t(vn.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(xn.instance)}}}class vn extends yn{}vn.instance=new vn;class xn extends yn{}xn.instance=new xn;class wn extends yn{constructor(){super()}}class bn extends wn{constructor(e,t,n,r){super(),this.name=e,this.args=t,this.returnType=n,this.body=r}get astNodeType(){return"function"}search(e){this.searchBlock(this.body,e)}}class kn extends wn{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}search(e){this.expression.search(e)}}class Tn extends wn{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class Sn extends wn{constructor(e){super(),this.body=e}get astNodeType(){return"continuing"}search(e){this.searchBlock(this.body,e)}}class Mn extends wn{constructor(e,t,n,r){super(),this.init=e,this.condition=t,this.increment=n,this.body=r}get astNodeType(){return"for"}search(e){var t,n,r;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(r=this.increment)||void 0===r||r.search(e),this.searchBlock(this.body,e)}}class An extends wn{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"var"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class Pn extends wn{constructor(e,t,n){super(),this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class En extends wn{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"let"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class zn extends wn{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"const"}evaluate(e){return this.value.evaluate(e)}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}!function(e){e.increment="++",e.decrement="--"}(fn||(fn={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}}(fn||(fn={}));class Un extends wn{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}search(e){this.variable.search(e)}}!function(e){e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="}(dn||(dn={})),function(e){e.parse=function(e){const t=e;if("parse"==t)throw new Error("Invalid value for AssignOperator");return t}}(dn||(dn={}));class In extends wn{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}search(e){this.value.search(e)}}class Cn extends wn{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}}class On extends wn{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class Rn extends wn{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"body"}}class Bn extends wn{constructor(e,t,n,r){super(),this.condition=e,this.body=t,this.elseif=n,this.else=r}get astNodeType(){return"if"}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class Dn extends wn{constructor(e){super(),this.value=e}get astNodeType(){return"return"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class Nn extends wn{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class Vn extends wn{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class Gn extends wn{constructor(){super()}get astNodeType(){return"discard"}}class jn extends wn{constructor(){super()}get astNodeType(){return"break"}}class qn extends wn{constructor(){super()}get astNodeType(){return"continue"}}class Ln extends wn{constructor(e){super(),this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}}class Fn extends Ln{constructor(e,t){super(e),this.members=t}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}}class Yn extends Ln{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}}class Hn extends Ln{constructor(e,t,n,r){super(e),this.storage=t,this.type=n,this.access=r}get astNodeType(){return"pointer"}}class $n extends Ln{constructor(e,t,n,r){super(e),this.attributes=t,this.format=n,this.count=r}get astNodeType(){return"array"}get isArray(){return!0}}class Wn extends Ln{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class Xn extends yn{constructor(){super()}}class Zn extends Xn{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}evaluateString(){return this.value}}class Qn extends Xn{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}}class Kn extends Xn{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"callExpr"}evaluate(e){switch(this.name){case"abs":return Math.abs(this.args[0].evaluate(e));case"acos":return Math.acos(this.args[0].evaluate(e));case"acosh":return Math.acosh(this.args[0].evaluate(e));case"asin":return Math.asin(this.args[0].evaluate(e));case"asinh":return Math.asinh(this.args[0].evaluate(e));case"atan":return Math.atan(this.args[0].evaluate(e));case"atan2":return Math.atan2(this.args[0].evaluate(e),this.args[1].evaluate(e));case"atanh":return Math.atanh(this.args[0].evaluate(e));case"ceil":return Math.ceil(this.args[0].evaluate(e));case"clamp":return Math.min(Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e)),this.args[2].evaluate(e));case"cos":return Math.cos(this.args[0].evaluate(e));case"degrees":return 180*this.args[0].evaluate(e)/Math.PI;case"distance":return Math.sqrt(Math.pow(this.args[0].evaluate(e)-this.args[1].evaluate(e),2));case"dot":case"exp":return Math.exp(this.args[0].evaluate(e));case"exp2":return Math.pow(2,this.args[0].evaluate(e));case"floor":return Math.floor(this.args[0].evaluate(e));case"fma":return this.args[0].evaluate(e)*this.args[1].evaluate(e)+this.args[2].evaluate(e);case"fract":case"modf":return this.args[0].evaluate(e)-Math.floor(this.args[0].evaluate(e));case"inverseSqrt":return 1/Math.sqrt(this.args[0].evaluate(e));case"log":return Math.log(this.args[0].evaluate(e));case"log2":return Math.log2(this.args[0].evaluate(e));case"max":return Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e));case"min":return Math.min(this.args[0].evaluate(e),this.args[1].evaluate(e));case"mix":return this.args[0].evaluate(e)*(1-this.args[2].evaluate(e))+this.args[1].evaluate(e)*this.args[2].evaluate(e);case"pow":return Math.pow(this.args[0].evaluate(e),this.args[1].evaluate(e));case"radians":return this.args[0].evaluate(e)*Math.PI/180;case"round":return Math.round(this.args[0].evaluate(e));case"sign":return Math.sign(this.args[0].evaluate(e));case"sin":return Math.sin(this.args[0].evaluate(e));case"sinh":return Math.sinh(this.args[0].evaluate(e));case"saturate":return Math.min(Math.max(this.args[0].evaluate(e),0),1);case"smoothstep":return this.args[0].evaluate(e)*this.args[0].evaluate(e)*(3-2*this.args[0].evaluate(e));case"sqrt":return Math.sqrt(this.args[0].evaluate(e));case"step":return this.args[0].evaluate(e)<this.args[1].evaluate(e)?0:1;case"tan":return Math.tan(this.args[0].evaluate(e));case"tanh":return Math.tanh(this.args[0].evaluate(e));case"trunc":return Math.trunc(this.args[0].evaluate(e));default:throw new Error("Non const function: "+this.name)}}search(e){for(const t of this.args)t.search(e);e(this)}}class Jn extends Xn{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}search(e){e(this)}}class er extends Xn{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}evaluate(e){var t,n;if(this.initializer instanceof Qn){const r=null===(t=this.postfix)||void 0===t?void 0:t.evaluateString(e),s=null===(n=this.initializer.type)||void 0===n?void 0:n.name,i=e.structs.get(s),a=null==i?void 0:i.getMemberIndex(r);if(-1!=a)return this.initializer.args[a].evaluate(e);console.log(a)}return this.initializer.evaluate(e)}search(e){this.initializer.search(e)}}class tr extends Xn{constructor(e){super(),this.value=e}get astNodeType(){return"literalExpr"}evaluate(){return this.value}}class nr extends Xn{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}search(e){this.value.search(e)}}class rr extends Xn{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"typecastExpr"}evaluate(e){return this.args[0].evaluate(e)}search(e){this.searchBlock(this.args,e)}}class sr extends Xn{constructor(e){super(),this.contents=e}get astNodeType(){return"groupExpr"}evaluate(e){return this.contents[0].evaluate(e)}search(e){this.searchBlock(this.contents,e)}}class ir extends Xn{constructor(){super()}}class ar extends ir{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}evaluate(e){switch(this.operator){case"+":return this.right.evaluate(e);case"-":return-this.right.evaluate(e);case"!":return this.right.evaluate(e)?0:1;case"~":return~this.right.evaluate(e);default:throw new Error("Unknown unary operator: "+this.operator)}}search(e){this.right.search(e)}}class or extends ir{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}evaluate(e){switch(this.operator){case"+":return this.left.evaluate(e)+this.right.evaluate(e);case"-":return this.left.evaluate(e)-this.right.evaluate(e);case"*":return this.left.evaluate(e)*this.right.evaluate(e);case"/":return this.left.evaluate(e)/this.right.evaluate(e);case"%":return this.left.evaluate(e)%this.right.evaluate(e);case"==":return this.left.evaluate(e)==this.right.evaluate(e)?1:0;case"!=":return this.left.evaluate(e)!=this.right.evaluate(e)?1:0;case"<":return this.left.evaluate(e)<this.right.evaluate(e)?1:0;case">":return this.left.evaluate(e)>this.right.evaluate(e)?1:0;case"<=":return this.left.evaluate(e)<=this.right.evaluate(e)?1:0;case">=":return this.left.evaluate(e)>=this.right.evaluate(e)?1:0;case"&&":return this.left.evaluate(e)&&this.right.evaluate(e)?1:0;case"||":return this.left.evaluate(e)||this.right.evaluate(e)?1:0;default:throw new Error(`Unknown operator ${this.operator}`)}}search(e){this.left.search(e),this.right.search(e)}}class cr extends yn{constructor(){super()}}class ur extends cr{constructor(e,t){super(),this.selector=e,this.body=t}get astNodeType(){return"case"}search(e){this.searchBlock(this.body,e)}}class lr extends cr{constructor(e){super(),this.body=e}get astNodeType(){return"default"}search(e){this.searchBlock(this.body,e)}}class hr extends yn{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class fr extends yn{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class dr extends yn{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class mr extends yn{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}!function(e){e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"}(pn||(pn={}));class pr{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class gr{}mn=gr,gr.none=new pr("",pn.reserved,""),gr.eof=new pr("EOF",pn.token,""),gr.reserved={asm:new pr("asm",pn.reserved,"asm"),bf16:new pr("bf16",pn.reserved,"bf16"),do:new pr("do",pn.reserved,"do"),enum:new pr("enum",pn.reserved,"enum"),f16:new pr("f16",pn.reserved,"f16"),f64:new pr("f64",pn.reserved,"f64"),handle:new pr("handle",pn.reserved,"handle"),i8:new pr("i8",pn.reserved,"i8"),i16:new pr("i16",pn.reserved,"i16"),i64:new pr("i64",pn.reserved,"i64"),mat:new pr("mat",pn.reserved,"mat"),premerge:new pr("premerge",pn.reserved,"premerge"),regardless:new pr("regardless",pn.reserved,"regardless"),typedef:new pr("typedef",pn.reserved,"typedef"),u8:new pr("u8",pn.reserved,"u8"),u16:new pr("u16",pn.reserved,"u16"),u64:new pr("u64",pn.reserved,"u64"),unless:new pr("unless",pn.reserved,"unless"),using:new pr("using",pn.reserved,"using"),vec:new pr("vec",pn.reserved,"vec"),void:new pr("void",pn.reserved,"void")},gr.keywords={array:new pr("array",pn.keyword,"array"),atomic:new pr("atomic",pn.keyword,"atomic"),bool:new pr("bool",pn.keyword,"bool"),f32:new pr("f32",pn.keyword,"f32"),i32:new pr("i32",pn.keyword,"i32"),mat2x2:new pr("mat2x2",pn.keyword,"mat2x2"),mat2x3:new pr("mat2x3",pn.keyword,"mat2x3"),mat2x4:new pr("mat2x4",pn.keyword,"mat2x4"),mat3x2:new pr("mat3x2",pn.keyword,"mat3x2"),mat3x3:new pr("mat3x3",pn.keyword,"mat3x3"),mat3x4:new pr("mat3x4",pn.keyword,"mat3x4"),mat4x2:new pr("mat4x2",pn.keyword,"mat4x2"),mat4x3:new pr("mat4x3",pn.keyword,"mat4x3"),mat4x4:new pr("mat4x4",pn.keyword,"mat4x4"),ptr:new pr("ptr",pn.keyword,"ptr"),sampler:new pr("sampler",pn.keyword,"sampler"),sampler_comparison:new pr("sampler_comparison",pn.keyword,"sampler_comparison"),struct:new pr("struct",pn.keyword,"struct"),texture_1d:new pr("texture_1d",pn.keyword,"texture_1d"),texture_2d:new pr("texture_2d",pn.keyword,"texture_2d"),texture_2d_array:new pr("texture_2d_array",pn.keyword,"texture_2d_array"),texture_3d:new pr("texture_3d",pn.keyword,"texture_3d"),texture_cube:new pr("texture_cube",pn.keyword,"texture_cube"),texture_cube_array:new pr("texture_cube_array",pn.keyword,"texture_cube_array"),texture_multisampled_2d:new pr("texture_multisampled_2d",pn.keyword,"texture_multisampled_2d"),texture_storage_1d:new pr("texture_storage_1d",pn.keyword,"texture_storage_1d"),texture_storage_2d:new pr("texture_storage_2d",pn.keyword,"texture_storage_2d"),texture_storage_2d_array:new pr("texture_storage_2d_array",pn.keyword,"texture_storage_2d_array"),texture_storage_3d:new pr("texture_storage_3d",pn.keyword,"texture_storage_3d"),texture_depth_2d:new pr("texture_depth_2d",pn.keyword,"texture_depth_2d"),texture_depth_2d_array:new pr("texture_depth_2d_array",pn.keyword,"texture_depth_2d_array"),texture_depth_cube:new pr("texture_depth_cube",pn.keyword,"texture_depth_cube"),texture_depth_cube_array:new pr("texture_depth_cube_array",pn.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new pr("texture_depth_multisampled_2d",pn.keyword,"texture_depth_multisampled_2d"),texture_external:new pr("texture_external",pn.keyword,"texture_external"),u32:new pr("u32",pn.keyword,"u32"),vec2:new pr("vec2",pn.keyword,"vec2"),vec3:new pr("vec3",pn.keyword,"vec3"),vec4:new pr("vec4",pn.keyword,"vec4"),bitcast:new pr("bitcast",pn.keyword,"bitcast"),block:new pr("block",pn.keyword,"block"),break:new pr("break",pn.keyword,"break"),case:new pr("case",pn.keyword,"case"),continue:new pr("continue",pn.keyword,"continue"),continuing:new pr("continuing",pn.keyword,"continuing"),default:new pr("default",pn.keyword,"default"),discard:new pr("discard",pn.keyword,"discard"),else:new pr("else",pn.keyword,"else"),enable:new pr("enable",pn.keyword,"enable"),fallthrough:new pr("fallthrough",pn.keyword,"fallthrough"),false:new pr("false",pn.keyword,"false"),fn:new pr("fn",pn.keyword,"fn"),for:new pr("for",pn.keyword,"for"),function:new pr("function",pn.keyword,"function"),if:new pr("if",pn.keyword,"if"),let:new pr("let",pn.keyword,"let"),const:new pr("const",pn.keyword,"const"),loop:new pr("loop",pn.keyword,"loop"),while:new pr("while",pn.keyword,"while"),private:new pr("private",pn.keyword,"private"),read:new pr("read",pn.keyword,"read"),read_write:new pr("read_write",pn.keyword,"read_write"),return:new pr("return",pn.keyword,"return"),storage:new pr("storage",pn.keyword,"storage"),switch:new pr("switch",pn.keyword,"switch"),true:new pr("true",pn.keyword,"true"),alias:new pr("alias",pn.keyword,"alias"),type:new pr("type",pn.keyword,"type"),uniform:new pr("uniform",pn.keyword,"uniform"),var:new pr("var",pn.keyword,"var"),override:new pr("override",pn.keyword,"override"),workgroup:new pr("workgroup",pn.keyword,"workgroup"),write:new pr("write",pn.keyword,"write"),r8unorm:new pr("r8unorm",pn.keyword,"r8unorm"),r8snorm:new pr("r8snorm",pn.keyword,"r8snorm"),r8uint:new pr("r8uint",pn.keyword,"r8uint"),r8sint:new pr("r8sint",pn.keyword,"r8sint"),r16uint:new pr("r16uint",pn.keyword,"r16uint"),r16sint:new pr("r16sint",pn.keyword,"r16sint"),r16float:new pr("r16float",pn.keyword,"r16float"),rg8unorm:new pr("rg8unorm",pn.keyword,"rg8unorm"),rg8snorm:new pr("rg8snorm",pn.keyword,"rg8snorm"),rg8uint:new pr("rg8uint",pn.keyword,"rg8uint"),rg8sint:new pr("rg8sint",pn.keyword,"rg8sint"),r32uint:new pr("r32uint",pn.keyword,"r32uint"),r32sint:new pr("r32sint",pn.keyword,"r32sint"),r32float:new pr("r32float",pn.keyword,"r32float"),rg16uint:new pr("rg16uint",pn.keyword,"rg16uint"),rg16sint:new pr("rg16sint",pn.keyword,"rg16sint"),rg16float:new pr("rg16float",pn.keyword,"rg16float"),rgba8unorm:new pr("rgba8unorm",pn.keyword,"rgba8unorm"),rgba8unorm_srgb:new pr("rgba8unorm_srgb",pn.keyword,"rgba8unorm_srgb"),rgba8snorm:new pr("rgba8snorm",pn.keyword,"rgba8snorm"),rgba8uint:new pr("rgba8uint",pn.keyword,"rgba8uint"),rgba8sint:new pr("rgba8sint",pn.keyword,"rgba8sint"),bgra8unorm:new pr("bgra8unorm",pn.keyword,"bgra8unorm"),bgra8unorm_srgb:new pr("bgra8unorm_srgb",pn.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new pr("rgb10a2unorm",pn.keyword,"rgb10a2unorm"),rg11b10float:new pr("rg11b10float",pn.keyword,"rg11b10float"),rg32uint:new pr("rg32uint",pn.keyword,"rg32uint"),rg32sint:new pr("rg32sint",pn.keyword,"rg32sint"),rg32float:new pr("rg32float",pn.keyword,"rg32float"),rgba16uint:new pr("rgba16uint",pn.keyword,"rgba16uint"),rgba16sint:new pr("rgba16sint",pn.keyword,"rgba16sint"),rgba16float:new pr("rgba16float",pn.keyword,"rgba16float"),rgba32uint:new pr("rgba32uint",pn.keyword,"rgba32uint"),rgba32sint:new pr("rgba32sint",pn.keyword,"rgba32sint"),rgba32float:new pr("rgba32float",pn.keyword,"rgba32float"),static_assert:new pr("static_assert",pn.keyword,"static_assert")},gr.tokens={decimal_float_literal:new pr("decimal_float_literal",pn.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)|([0-9]+f)/),hex_float_literal:new pr("hex_float_literal",pn.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/),int_literal:new pr("int_literal",pn.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new pr("uint_literal",pn.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),ident:new pr("ident",pn.token,/[a-zA-Z][0-9a-zA-Z_]*/),and:new pr("and",pn.token,"&"),and_and:new pr("and_and",pn.token,"&&"),arrow:new pr("arrow ",pn.token,"->"),attr:new pr("attr",pn.token,"@"),attr_left:new pr("attr_left",pn.token,"[["),attr_right:new pr("attr_right",pn.token,"]]"),forward_slash:new pr("forward_slash",pn.token,"/"),bang:new pr("bang",pn.token,"!"),bracket_left:new pr("bracket_left",pn.token,"["),bracket_right:new pr("bracket_right",pn.token,"]"),brace_left:new pr("brace_left",pn.token,"{"),brace_right:new pr("brace_right",pn.token,"}"),colon:new pr("colon",pn.token,":"),comma:new pr("comma",pn.token,","),equal:new pr("equal",pn.token,"="),equal_equal:new pr("equal_equal",pn.token,"=="),not_equal:new pr("not_equal",pn.token,"!="),greater_than:new pr("greater_than",pn.token,">"),greater_than_equal:new pr("greater_than_equal",pn.token,">="),shift_right:new pr("shift_right",pn.token,">>"),less_than:new pr("less_than",pn.token,"<"),less_than_equal:new pr("less_than_equal",pn.token,"<="),shift_left:new pr("shift_left",pn.token,"<<"),modulo:new pr("modulo",pn.token,"%"),minus:new pr("minus",pn.token,"-"),minus_minus:new pr("minus_minus",pn.token,"--"),period:new pr("period",pn.token,"."),plus:new pr("plus",pn.token,"+"),plus_plus:new pr("plus_plus",pn.token,"++"),or:new pr("or",pn.token,"|"),or_or:new pr("or_or",pn.token,"||"),paren_left:new pr("paren_left",pn.token,"("),paren_right:new pr("paren_right",pn.token,")"),semicolon:new pr("semicolon",pn.token,";"),star:new pr("star",pn.token,"*"),tilde:new pr("tilde",pn.token,"~"),underscore:new pr("underscore",pn.token,"_"),xor:new pr("xor",pn.token,"^"),plus_equal:new pr("plus_equal",pn.token,"+="),minus_equal:new pr("minus_equal",pn.token,"-="),times_equal:new pr("times_equal",pn.token,"*="),division_equal:new pr("division_equal",pn.token,"/="),modulo_equal:new pr("modulo_equal",pn.token,"%="),and_equal:new pr("and_equal",pn.token,"&="),or_equal:new pr("or_equal",pn.token,"|="),xor_equal:new pr("xor_equal",pn.token,"^="),shift_right_equal:new pr("shift_right_equal",pn.token,">>="),shift_left_equal:new pr("shift_left_equal",pn.token,"<<=")},gr.storage_class=[mn.keywords.function,mn.keywords.private,mn.keywords.workgroup,mn.keywords.uniform,mn.keywords.storage],gr.access_mode=[mn.keywords.read,mn.keywords.write,mn.keywords.read_write],gr.sampler_type=[mn.keywords.sampler,mn.keywords.sampler_comparison],gr.sampled_texture_type=[mn.keywords.texture_1d,mn.keywords.texture_2d,mn.keywords.texture_2d_array,mn.keywords.texture_3d,mn.keywords.texture_cube,mn.keywords.texture_cube_array],gr.multisampled_texture_type=[mn.keywords.texture_multisampled_2d],gr.storage_texture_type=[mn.keywords.texture_storage_1d,mn.keywords.texture_storage_2d,mn.keywords.texture_storage_2d_array,mn.keywords.texture_storage_3d],gr.depth_texture_type=[mn.keywords.texture_depth_2d,mn.keywords.texture_depth_2d_array,mn.keywords.texture_depth_cube,mn.keywords.texture_depth_cube_array,mn.keywords.texture_depth_multisampled_2d],gr.texture_external_type=[mn.keywords.texture_external],gr.any_texture_type=[...mn.sampled_texture_type,...mn.multisampled_texture_type,...mn.storage_texture_type,...mn.depth_texture_type,...mn.texture_external_type],gr.texel_format=[mn.keywords.r8unorm,mn.keywords.r8snorm,mn.keywords.r8uint,mn.keywords.r8sint,mn.keywords.r16uint,mn.keywords.r16sint,mn.keywords.r16float,mn.keywords.rg8unorm,mn.keywords.rg8snorm,mn.keywords.rg8uint,mn.keywords.rg8sint,mn.keywords.r32uint,mn.keywords.r32sint,mn.keywords.r32float,mn.keywords.rg16uint,mn.keywords.rg16sint,mn.keywords.rg16float,mn.keywords.rgba8unorm,mn.keywords.rgba8unorm_srgb,mn.keywords.rgba8snorm,mn.keywords.rgba8uint,mn.keywords.rgba8sint,mn.keywords.bgra8unorm,mn.keywords.bgra8unorm_srgb,mn.keywords.rgb10a2unorm,mn.keywords.rg11b10float,mn.keywords.rg32uint,mn.keywords.rg32sint,mn.keywords.rg32float,mn.keywords.rgba16uint,mn.keywords.rgba16sint,mn.keywords.rgba16float,mn.keywords.rgba32uint,mn.keywords.rgba32sint,mn.keywords.rgba32float],gr.const_literal=[mn.tokens.int_literal,mn.tokens.uint_literal,mn.tokens.decimal_float_literal,mn.tokens.hex_float_literal,mn.keywords.true,mn.keywords.false],gr.literal_or_ident=[mn.tokens.ident,mn.tokens.int_literal,mn.tokens.uint_literal,mn.tokens.decimal_float_literal,mn.tokens.hex_float_literal],gr.element_count_expression=[mn.tokens.int_literal,mn.tokens.uint_literal,mn.tokens.ident],gr.template_types=[mn.keywords.vec2,mn.keywords.vec3,mn.keywords.vec4,mn.keywords.mat2x2,mn.keywords.mat2x3,mn.keywords.mat2x4,mn.keywords.mat3x2,mn.keywords.mat3x3,mn.keywords.mat3x4,mn.keywords.mat4x2,mn.keywords.mat4x3,mn.keywords.mat4x4,mn.keywords.atomic,mn.keywords.bitcast,...mn.any_texture_type],gr.attribute_name=[mn.tokens.ident,mn.keywords.block],gr.assignment_operators=[mn.tokens.equal,mn.tokens.plus_equal,mn.tokens.minus_equal,mn.tokens.times_equal,mn.tokens.division_equal,mn.tokens.modulo_equal,mn.tokens.and_equal,mn.tokens.or_equal,mn.tokens.xor_equal,mn.tokens.shift_right_equal,mn.tokens.shift_left_equal],gr.increment_operators=[mn.tokens.plus_plus,mn.tokens.minus_minus];class _r{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}isTemplateType(){return-1!=gr.template_types.indexOf(this.type)}isArrayType(){return this.type==gr.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class yr{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new _r(gr.eof,"",this._line)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}let t=gr.none;for(;;){let n=this._findType(e);const r=this._peekAhead();if(">"==e&&(">"==r||"="==r)){let e=!1,t=this._tokens.length-1;for(let n=0;n<5&&t>=0;++n,--t)if(this._tokens[t].type===gr.tokens.less_than){t>0&&this._tokens[t-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(n),!0}if(n===gr.none){let r=e,s=0;const i=2;for(let e=0;e<i;++e)if(r+=this._peekAhead(e),n=this._findType(r),n!==gr.none){s=e;break}if(n===gr.none)return t!==gr.none&&(this._current--,this._addToken(t),!0);e=r,this._current+=s+1}if(t=n,this._isAtEnd())break;e+=this._advance()}return t!==gr.none&&(this._addToken(t),!0)}_findType(e){for(const t in gr.keywords){const n=gr.keywords[t];if(this._match(e,n.rule))return n}for(const t in gr.tokens){const n=gr.tokens[t];if(this._match(e,n.rule))return n}return gr.none}_match(e,t){if("string"==typeof t){if(t==e)return!0}else{const n=t.exec(e);if(n&&0==n.index&&n[0]==e)return!0}return!1}_isAtEnd(){return this._current>=this._source.length}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new _r(e,t,this._line))}}class vr{constructor(){this._tokens=[],this._current=0,this._context=new _n}parse(e){this._initialize(e);let t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}return t}_initialize(e){if(e)if("string"==typeof e){const t=new yr(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_error(e,t){return console.error(e,t),{token:e,message:t,toString:function(){return`${t}`}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==gr.eof}_match(e){if(e instanceof pr)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),t)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){let n=t.type;return-1!=e.indexOf(n)}return t.type==e}_advance(){return this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(gr.tokens.semicolon)&&!this._isAtEnd(););if(this._match(gr.keywords.alias)){const e=this._type_alias();return this._consume(gr.tokens.semicolon,"Expected ';'"),e}if(this._match(gr.keywords.enable)){const e=this._enable_directive();return this._consume(gr.tokens.semicolon,"Expected ';'"),e}const e=this._attribute();if(this._check(gr.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),t}if(this._check(gr.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),t}return null}_function_decl(){if(!this._match(gr.keywords.fn))return null;const e=this._consume(gr.tokens.ident,"Expected function name.").toString();this._consume(gr.tokens.paren_left,"Expected '(' for function arguments.");const t=[];if(!this._check(gr.tokens.paren_right))do{if(this._check(gr.tokens.paren_right))break;const e=this._attribute(),n=this._consume(gr.tokens.ident,"Expected argument name.").toString();this._consume(gr.tokens.colon,"Expected ':' for argument type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r,t.push(new hr(n,s,e)))}while(this._match(gr.tokens.comma));this._consume(gr.tokens.paren_right,"Expected ')' after function arguments.");let n=null;if(this._match(gr.tokens.arrow)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}const r=this._compound_statement();return new bn(e,t,n,r)}_compound_statement(){const e=[];for(this._consume(gr.tokens.brace_left,"Expected '{' for block.");!this._check(gr.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(gr.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(gr.tokens.semicolon)&&!this._isAtEnd(););if(this._check(gr.keywords.if))return this._if_statement();if(this._check(gr.keywords.switch))return this._switch_statement();if(this._check(gr.keywords.loop))return this._loop_statement();if(this._check(gr.keywords.for))return this._for_statement();if(this._check(gr.keywords.while))return this._while_statement();if(this._check(gr.keywords.continuing))return this._continuing_statement();if(this._check(gr.keywords.static_assert))return this._static_assert_statement();if(this._check(gr.tokens.brace_left))return this._compound_statement();let e=null;return e=this._check(gr.keywords.return)?this._return_statement():this._check([gr.keywords.var,gr.keywords.let,gr.keywords.const])?this._variable_statement():this._match(gr.keywords.discard)?new Gn:this._match(gr.keywords.break)?new jn:this._match(gr.keywords.continue)?new qn:this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=e&&this._consume(gr.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(gr.keywords.static_assert))return null;let e=this._optional_paren_expression();return new kn(e)}_while_statement(){if(!this._match(gr.keywords.while))return null;let e=this._optional_paren_expression();const t=this._compound_statement();return new Tn(e,t)}_continuing_statement(){if(!this._match(gr.keywords.continuing))return null;const e=this._compound_statement();return new Sn(e)}_for_statement(){if(!this._match(gr.keywords.for))return null;this._consume(gr.tokens.paren_left,"Expected '('.");const e=this._check(gr.tokens.semicolon)?null:this._for_init();this._consume(gr.tokens.semicolon,"Expected ';'.");const t=this._check(gr.tokens.semicolon)?null:this._short_circuit_or_expression();this._consume(gr.tokens.semicolon,"Expected ';'.");const n=this._check(gr.tokens.paren_right)?null:this._for_increment();this._consume(gr.tokens.paren_right,"Expected ')'.");const r=this._compound_statement();return new Mn(e,t,n,r)}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(gr.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(gr.tokens.equal)&&(t=this._short_circuit_or_expression()),new An(e.name,e.type,e.storage,e.access,t)}if(this._match(gr.keywords.let)){const e=this._consume(gr.tokens.ident,"Expected name for let.").toString();let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(gr.tokens.equal,"Expected '=' for let.");const n=this._short_circuit_or_expression();return new En(e,t,null,null,n)}if(this._match(gr.keywords.const)){const e=this._consume(gr.tokens.ident,"Expected name for const.").toString();let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(gr.tokens.equal,"Expected '=' for const.");const n=this._short_circuit_or_expression();return new zn(e,t,null,null,n)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(gr.increment_operators))return this._current=e,null;const n=this._consume(gr.increment_operators,"Expected increment operator");return new Un(n.type===gr.tokens.plus_plus?fn.increment:fn.decrement,t)}_assignment_statement(){let e=null;if(this._check(gr.tokens.brace_right))return null;let t=this._match(gr.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(gr.assignment_operators,"Expected assignment operator."),r=this._short_circuit_or_expression();return new In(dn.parse(n.lexeme),e,r)}_func_call_statement(){if(!this._check(gr.tokens.ident))return null;const e=this._current,t=this._consume(gr.tokens.ident,"Expected function name."),n=this._argument_expression_list();return null===n?(this._current=e,null):new Cn(t.lexeme,n)}_loop_statement(){if(!this._match(gr.keywords.loop))return null;this._consume(gr.tokens.brace_left,"Expected '{' for loop.");const e=[];let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.push(n);else e.push(t);t=this._statement()}let n=null;return this._match(gr.keywords.continuing)&&(n=this._compound_statement()),this._consume(gr.tokens.brace_right,"Expected '}' for loop."),new On(e,n)}_switch_statement(){if(!this._match(gr.keywords.switch))return null;const e=this._optional_paren_expression();this._consume(gr.tokens.brace_left,"Expected '{' for switch.");const t=this._switch_body();if(null==t||0==t.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(gr.tokens.brace_right,"Expected '}' for switch."),new Rn(e,t)}_switch_body(){const e=[];if(this._match(gr.keywords.case)){const t=this._case_selectors();this._match(gr.tokens.colon),this._consume(gr.tokens.brace_left,"Exected '{' for switch case.");const n=this._case_body();this._consume(gr.tokens.brace_right,"Exected '}' for switch case."),e.push(new ur(t,n))}if(this._match(gr.keywords.default)){this._match(gr.tokens.colon),this._consume(gr.tokens.brace_left,"Exected '{' for switch default.");const t=this._case_body();this._consume(gr.tokens.brace_right,"Exected '}' for switch default."),e.push(new lr(t))}if(this._check([gr.keywords.default,gr.keywords.case])){const t=this._switch_body();e.push(t[0])}return e}_case_selectors(){var e,t,n,r;const s=[null!==(t=null===(e=this._shift_expression())||void 0===e?void 0:e.evaluate(this._context).toString())&&void 0!==t?t:""];for(;this._match(gr.tokens.comma);)s.push(null!==(r=null===(n=this._shift_expression())||void 0===n?void 0:n.evaluate(this._context).toString())&&void 0!==r?r:"");return s}_case_body(){if(this._match(gr.keywords.fallthrough))return this._consume(gr.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(gr.keywords.if))return null;const e=this._optional_paren_expression(),t=this._compound_statement();let n=[];this._match_elseif()&&(n=this._elseif_statement(n));let r=null;return this._match(gr.keywords.else)&&(r=this._compound_statement()),new Bn(e,t,n,r)}_match_elseif(){return this._tokens[this._current].type===gr.keywords.else&&this._tokens[this._current+1].type===gr.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(new fr(t,n)),this._match_elseif()&&this._elseif_statement(e),e}_return_statement(){if(!this._match(gr.keywords.return))return null;const e=this._short_circuit_or_expression();return new Dn(e)}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(gr.tokens.or_or);)e=new or(this._previous().toString(),e,this._short_circuit_and_expr());return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(gr.tokens.and_and);)e=new or(this._previous().toString(),e,this._inclusive_or_expression());return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(gr.tokens.or);)e=new or(this._previous().toString(),e,this._exclusive_or_expression());return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(gr.tokens.xor);)e=new or(this._previous().toString(),e,this._and_expression());return e}_and_expression(){let e=this._equality_expression();for(;this._match(gr.tokens.and);)e=new or(this._previous().toString(),e,this._equality_expression());return e}_equality_expression(){const e=this._relational_expression();return this._match([gr.tokens.equal_equal,gr.tokens.not_equal])?new or(this._previous().toString(),e,this._relational_expression()):e}_relational_expression(){let e=this._shift_expression();for(;this._match([gr.tokens.less_than,gr.tokens.greater_than,gr.tokens.less_than_equal,gr.tokens.greater_than_equal]);)e=new or(this._previous().toString(),e,this._shift_expression());return e}_shift_expression(){let e=this._additive_expression();for(;this._match([gr.tokens.shift_left,gr.tokens.shift_right]);)e=new or(this._previous().toString(),e,this._additive_expression());return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([gr.tokens.plus,gr.tokens.minus]);)e=new or(this._previous().toString(),e,this._multiplicative_expression());return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([gr.tokens.star,gr.tokens.forward_slash,gr.tokens.modulo]);)e=new or(this._previous().toString(),e,this._unary_expression());return e}_unary_expression(){return this._match([gr.tokens.minus,gr.tokens.bang,gr.tokens.tilde,gr.tokens.star,gr.tokens.and])?new ar(this._previous().toString(),this._unary_expression()):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(gr.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(gr.tokens.bracket_right,"Expected ']'.");const t=this._postfix_expression();return t&&(e.postfix=t),e}if(this._match(gr.tokens.period)){const e=this._consume(gr.tokens.ident,"Expected member name."),t=this._postfix_expression(),n=new Zn(e.lexeme);return t&&(n.postfix=t),n}return null}_getStruct(e){return this._context.aliases.has(e)?this._context.aliases.get(e).type:this._context.structs.has(e)?this._context.structs.get(e):null}_primary_expression(){if(this._match(gr.tokens.ident)){const e=this._previous().toString();if(this._check(gr.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getStruct(e);return null!=n?new Qn(n,t):new Kn(e,t)}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return new er(e,t.value)}return new Jn(e)}if(this._match(gr.const_literal))return new tr(parseFloat(this._previous().toString()));if(this._check(gr.tokens.paren_left))return this._paren_expression();if(this._match(gr.keywords.bitcast)){this._consume(gr.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(gr.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return new nr(e,t)}const e=this._type_decl(),t=this._argument_expression_list();return new rr(e,t)}_argument_expression_list(){if(!this._match(gr.tokens.paren_left))return null;const e=[];do{if(this._check(gr.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(gr.tokens.comma));return this._consume(gr.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(gr.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(gr.tokens.paren_right),new sr([e])}_paren_expression(){this._consume(gr.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(gr.tokens.paren_right,"Expected ')'."),new sr([e])}_struct_decl(){if(!this._match(gr.keywords.struct))return null;const e=this._consume(gr.tokens.ident,"Expected name for struct.").toString();this._consume(gr.tokens.brace_left,"Expected '{' for struct body.");const t=[];for(;!this._check(gr.tokens.brace_right);){const e=this._attribute(),n=this._consume(gr.tokens.ident,"Expected variable name.").toString();this._consume(gr.tokens.colon,"Expected ':' for struct member type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r),this._check(gr.tokens.brace_right)?this._match(gr.tokens.comma):this._consume(gr.tokens.comma,"Expected ',' for struct member."),t.push(new dr(n,s,e))}this._consume(gr.tokens.brace_right,"Expected '}' after struct body.");const n=new Fn(e,t);return this._context.structs.set(e,n),n}_global_variable_decl(){const e=this._variable_decl();return e&&this._match(gr.tokens.equal)&&(e.value=this._const_expression()),e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(gr.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){if(!this._match(gr.keywords.const))return null;const e=this._consume(gr.tokens.ident,"Expected variable name");let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;if(this._match(gr.tokens.equal)){const e=this._short_circuit_or_expression();if(e instanceof Qn)n=e;else if(e instanceof er&&e.initializer instanceof Qn)n=e.initializer;else try{const t=e.evaluate(this._context);n=new tr(t)}catch(t){n=e}}const r=new zn(e.toString(),t,"","",n);return this._context.constants.set(r.name,r),r}_global_let_decl(){if(!this._match(gr.keywords.let))return null;const e=this._consume(gr.tokens.ident,"Expected variable name");let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;return this._match(gr.tokens.equal)&&(n=this._const_expression()),new En(e.toString(),t,"","",n)}_const_expression(){if(this._match(gr.const_literal))return new Zn(this._previous().toString());const e=this._type_decl();this._consume(gr.tokens.paren_left,"Expected '('.");let t=[];for(;!this._check(gr.tokens.paren_right)&&(t.push(this._const_expression()),this._check(gr.tokens.comma));)this._advance();return this._consume(gr.tokens.paren_right,"Expected ')'."),new Qn(e,t)}_variable_decl(){if(!this._match(gr.keywords.var))return null;let e="",t="";this._match(gr.tokens.less_than)&&(e=this._consume(gr.storage_class,"Expected storage_class.").toString(),this._match(gr.tokens.comma)&&(t=this._consume(gr.access_mode,"Expected access_mode.").toString()),this._consume(gr.tokens.greater_than,"Expected '>'."));const n=this._consume(gr.tokens.ident,"Expected variable name");let r=null;if(this._match(gr.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}return new An(n.toString(),r,e,t,null)}_override_decl(){if(!this._match(gr.keywords.override))return null;const e=this._consume(gr.tokens.ident,"Expected variable name");let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return new Pn(e.toString(),t,null)}_enable_directive(){const e=this._consume(gr.tokens.ident,"identity expected.");return new Nn(e.toString())}_type_alias(){const e=this._consume(gr.tokens.ident,"identity expected.");this._consume(gr.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=new Vn(e.toString(),t);return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([gr.tokens.ident,...gr.texel_format,gr.keywords.bool,gr.keywords.f32,gr.keywords.i32,gr.keywords.u32])){const e=this._advance(),t=e.toString();return this._context.structs.has(t)?this._context.structs.get(t):this._context.aliases.has(t)?this._context.aliases.get(t).type:new Ln(e.toString())}let e=this._texture_sampler_types();if(e)return e;if(this._check(gr.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(gr.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(gr.tokens.comma)&&(n=this._consume(gr.access_mode,"Expected access_mode for pointer").toString()),this._consume(gr.tokens.greater_than,"Expected '>' for type.")),new Yn(e,t,n)}if(this._match(gr.keywords.ptr)){let e=this._previous().toString();this._consume(gr.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(gr.storage_class,"Expected storage_class for pointer");this._consume(gr.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let r=null;return this._match(gr.tokens.comma)&&(r=this._consume(gr.access_mode,"Expected access_mode for pointer").toString()),this._consume(gr.tokens.greater_than,"Expected '>' for pointer."),new Hn(e,t.toString(),n,r)}const t=this._attribute();if(this._match(gr.keywords.array)){let e=null,n=-1;const r=this._previous();if(this._match(gr.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t="";this._match(gr.tokens.comma)&&(t=this._shift_expression().evaluate(this._context).toString()),this._consume(gr.tokens.greater_than,"Expected '>' for array."),n=t?parseInt(t):0}return new $n(r.toString(),t,e,n)}return null}_texture_sampler_types(){if(this._match(gr.sampler_type))return new Wn(this._previous().toString(),null,null);if(this._match(gr.depth_texture_type))return new Wn(this._previous().toString(),null,null);if(this._match(gr.sampled_texture_type)||this._match(gr.multisampled_texture_type)){const e=this._previous();this._consume(gr.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(gr.tokens.greater_than,"Expected '>' for sampler type."),new Wn(e.toString(),t,null)}if(this._match(gr.storage_texture_type)){const e=this._previous();this._consume(gr.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(gr.texel_format,"Invalid texel format.").toString();this._consume(gr.tokens.comma,"Expected ',' after texel format.");const n=this._consume(gr.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(gr.tokens.greater_than,"Expected '>' for sampler type."),new Wn(e.toString(),t,n)}return null}_attribute(){let e=[];for(;this._match(gr.tokens.attr);){const t=this._consume(gr.attribute_name,"Expected attribute name"),n=new mr(t.toString(),null);if(this._match(gr.tokens.paren_left)){if(n.value=this._consume(gr.literal_or_ident,"Expected attribute value").toString(),this._check(gr.tokens.comma)){this._advance();do{const e=this._consume(gr.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(gr.tokens.comma))}this._consume(gr.tokens.paren_right,"Expected ')'")}e.push(n)}for(;this._match(gr.tokens.attr_left);){if(!this._check(gr.tokens.attr_right))do{const t=this._consume(gr.attribute_name,"Expected attribute name"),n=new mr(t.toString(),null);if(this._match(gr.tokens.paren_left)){if(n.value=[this._consume(gr.literal_or_ident,"Expected attribute value").toString()],this._check(gr.tokens.comma)){this._advance();do{const e=this._consume(gr.literal_or_ident,"Expected attribute value").toString();n.value.push(e)}while(this._match(gr.tokens.comma))}this._consume(gr.tokens.paren_right,"Expected ')'")}e.push(n)}while(this._match(gr.tokens.comma));this._consume(gr.tokens.attr_right,"Expected ']]' after attribute declarations")}return 0==e.length?null:e}}class xr{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class wr{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class br extends xr{constructor(e,t){super(e,t),this.members=[],this.align=0}get isStruct(){return!0}}class kr extends xr{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class Tr extends xr{constructor(e,t,n,r){super(e,n),this.format=t,this.access=r}get isTemplate(){return!0}}!function(e){e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"}(gn||(gn={}));class Sr{constructor(e,t,n,r,s,i,a){this.name=e,this.type=t,this.group=n,this.binding=r,this.attributes=s,this.resourceType=i,this.access=a}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class Mr{constructor(e,t){this.name=e,this.type=t}}class Ar{constructor(e,t){this.align=e,this.size=t}}class Pr{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r,this.interpolation=null}}class Er{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r}}class zr{constructor(e,t=null){this.stage=null,this.inputs=[],this.outputs=[],this.resources=[],this.name=e,this.stage=t}}class Ur{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class Ir{constructor(e,t,n,r){this.name=e,this.type=t,this.attributes=n,this.id=r}}class Cr{constructor(e){this.resources=null,this.node=e}}class Or{constructor(e){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new Ur,this._types=new Map,this._functions=new Map,e&&this.update(e)}_isStorageTexture(e){return"texture_storage_1d"==e.name||"texture_storage_2d"==e.name||"texture_storage_2d_array"==e.name||"texture_storage_3d"==e.name}update(e){const t=(new vr).parse(e);for(const e of t)e instanceof bn&&this._functions.set(e.name,new Cr(e));for(const e of t)if(e instanceof Fn){const t=this._getTypeInfo(e,null);t instanceof br&&this.structs.push(t)}else if(e instanceof Vn)this.aliases.push(this._getAliasInfo(e));else if(e instanceof Pn){const t=e,n=this._getAttributeNum(t.attributes,"id",0),r=null!=t.type?this._getTypeInfo(t.type,t.attributes):null;this.overrides.push(new Ir(t.name,r,t.attributes,n))}else if(this._isUniformVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=new Sr(t.name,s,n,r,t.attributes,gn.Uniform,t.access);this.uniforms.push(i)}else if(this._isStorageVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=this._isStorageTexture(s),a=new Sr(t.name,s,n,r,t.attributes,i?gn.StorageTexture:gn.Storage,t.access);this.storage.push(a)}else if(this._isTextureVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=this._isStorageTexture(s),a=new Sr(t.name,s,n,r,t.attributes,i?gn.StorageTexture:gn.Texture,t.access);i?this.storage.push(a):this.textures.push(a)}else if(this._isSamplerVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=new Sr(t.name,s,n,r,t.attributes,gn.Sampler,t.access);this.samplers.push(i)}else if(e instanceof bn){const t=this._getAttribute(e,"vertex"),n=this._getAttribute(e,"fragment"),r=this._getAttribute(e,"compute"),s=t||n||r;if(s){const t=new zr(e.name,null==s?void 0:s.name);t.inputs=this._getInputs(e.args),t.outputs=this._getOutputs(e.returnType),t.resources=this._findResources(e),this.entry[s.name].push(t)}}}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_findResources(e){const t=[],n=this,r=[];return e.search((e=>{if(e instanceof vn)r.push({});else if(e instanceof xn)r.pop();else if(e instanceof An){if(r.length>0){const t=e;r[r.length-1][t.name]=t}}else if(e instanceof En){if(r.length>0){const t=e;r[r.length-1][t.name]=t}}else if(e instanceof Jn){const s=e;if(r.length>0&&r[r.length-1][s.name])return;const i=n._findResource(s.name);i&&t.push(i)}else if(e instanceof Kn){const r=e,s=n._functions.get(r.name);s&&(null===s.resources&&(s.resources=n._findResources(s.node)),t.push(...s.resources))}})),[...new Map(t.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.storage)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.textures)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.samplers)t(n.group,n.binding),e[n.group][n.binding]=n;return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof Fn)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof Fn)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(null!==e){const r=this._getTypeInfo(n.type,n.type.attributes),s=this._parseInt(e.value),i=new Er(n.name,r,e.name,s);t.push(i)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getTypeInfo(e,e.attributes),r=this._parseInt(t.value);return new Er("",n,t.name,r)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof Fn)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof Fn)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getAttribute(e,"interpolation"),r=this._getTypeInfo(e.type,e.attributes),s=this._parseInt(t.value),i=new Pr(e.name,r,t.name,s);return null!==n&&(i.interpolation=this._parseString(n.value)),i}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new Mr(e.name,this._getTypeInfo(e.type,null))}_getTypeInfo(e,t){if(this._types.has(e))return this._types.get(e);if(e instanceof $n){const n=e,r=this._getTypeInfo(n.format,n.attributes),s=new kr(n.name,t);return s.format=r,s.count=n.count,this._types.set(e,s),this._updateTypeInfo(s),s}if(e instanceof Fn){const n=e,r=new br(n.name,t);for(const e of n.members){const t=this._getTypeInfo(e.type,e.attributes);r.members.push(new wr(e.name,t,e.attributes))}return this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof Wn){const n=e,r=n.format instanceof Ln,s=n.format?r?this._getTypeInfo(n.format,null):new xr(n.format,null):null,i=new Tr(n.name,s,t,n.access);return this._types.set(e,i),this._updateTypeInfo(i),i}if(e instanceof Yn){const n=e,r=n.format?this._getTypeInfo(n.format,null):null,s=new Tr(n.name,r,t,n.access);return this._types.set(e,s),this._updateTypeInfo(s),s}const n=new xr(e.name,t);return this._types.set(e,n),this._updateTypeInfo(n),n}_updateTypeInfo(e){var t,n;const r=this._getTypeSize(e);if(e.size=null!==(t=null==r?void 0:r.size)&&void 0!==t?t:0,e instanceof kr){const t=this._getTypeSize(e.format);e.stride=null!==(n=null==t?void 0:t.size)&&void 0!==n?n:0,this._updateTypeInfo(e.format)}e instanceof br&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,r=0,s=0,i=0;for(let a=0,o=e.members.length;a<o;++a){const o=e.members[a],c=this._getTypeSize(o);if(!c)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const u=c.align,l=c.size;n=this._roundUp(u,n+r),r=l,s=n,i=Math.max(i,u),o.offset=n,o.size=l,this._updateTypeInfo(o.type)}e.size=this._roundUp(i,s+r),e.align=i}_getTypeSize(e){var t;if(null==e)return null;const n=this._getAttributeNum(e.attributes,"size",0),r=this._getAttributeNum(e.attributes,"align",0);if(e instanceof wr&&(e=e.type),e instanceof xr){const t=this._getAlias(e.name);null!==t&&(e=t)}{const t=Or._typeInfo[e.name];if(void 0!==t){const s="f16"===e.format?2:1;return new Ar(Math.max(r,t.align/s),Math.max(n,t.size/s))}}{const t=Or._typeInfo[e.name.substring(0,e.name.length-1)];if(t){const s="h"===e.name[e.name.length-1]?2:1;return new Ar(Math.max(r,t.align/s),Math.max(n,t.size/s))}}if(e instanceof kr){let s=e,i=8,a=8;const o=this._getTypeSize(s.format);return null!==o&&(a=o.size,i=o.align),a=s.count*this._getAttributeNum(null!==(t=null==e?void 0:e.attributes)&&void 0!==t?t:null,"stride",this._roundUp(i,a)),n&&(a=n),new Ar(Math.max(r,i),Math.max(n,a))}if(e instanceof br){let t=0,s=0,i=0,a=0,o=0;for(const n of e.members){const e=this._getTypeSize(n.type);null!==e&&(t=Math.max(e.align,t),i=this._roundUp(e.align,i+a),a=e.size,o=i)}return s=this._roundUp(t,o+a),new Ar(Math.max(r,t),Math.max(n,s))}return null}_isUniformVar(e){return e instanceof An&&"uniform"==e.storage}_isStorageVar(e){return e instanceof An&&"storage"==e.storage}_isTextureVar(e){return e instanceof An&&null!==e.type&&-1!=Or._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof An&&null!==e.type&&-1!=Or._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const r=n.attributes;for(let e of r)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let r of e)if(r.name==t){let e=null!==r&&null!==r.value?r.value:n;return e instanceof Array&&(e=e[0]),"number"==typeof e?e:"string"==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}function Rr(e,t){const n=function(e){return Array.isArray(e)||on(e)?[...e,1,1].slice(0,3):function(e){return[e.width,e.height||1,e.depthOrArrayLayers||1]}(e)}(e),r=Math.max(...n.slice(0,"3d"===t?3:2));return 1+Math.log2(r)|0}Or._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},Or._textureTypes=gr.any_texture_type.map((e=>e.name)),Or._samplerTypes=gr.sampler_type.map((e=>e.name));const Br=new WeakMap;const Dr=new Map([[Int8Array,{formats:["sint8","snorm8"],defaultForType:1}],[Uint8Array,{formats:["uint8","unorm8"],defaultForType:1}],[Int16Array,{formats:["sint16","snorm16"],defaultForType:1}],[Uint16Array,{formats:["uint16","unorm16"],defaultForType:1}],[Int32Array,{formats:["sint32","snorm32"],defaultForType:0}],[Uint32Array,{formats:["uint32","unorm32"],defaultForType:0}],[Float32Array,{formats:["float32","float32"],defaultForType:0}]]);function Nr(e){return on(e)||Array.isArray(e)||function(e){const t=e;return on(t.data)||Array.isArray(t.data)}(e)}function Vr(e){switch(e){case"1d":return"1d";case"3d":return"3d";default:return"2d"}}new Map([...Dr.entries()].map((([e,{formats:[t,n]}])=>[[t,e],[n,e]])).flat());const Gr={"8snorm":Int8Array,"8unorm":Uint8Array,"8sint":Int8Array,"8uint":Uint8Array,"16snorm":Int16Array,"16unorm":Uint16Array,"16sint":Int16Array,"16uint":Uint16Array,"32snorm":Int32Array,"32unorm":Uint32Array,"32sint":Int32Array,"32uint":Uint32Array,"16float":Uint16Array,"32float":Float32Array},jr=/([a-z]+)(\d+)([a-z]+)/;function qr(e){const[,t,n,r]=jr.exec(e),s=t.length,i=parseInt(n)/8;return{channels:t,numChannels:s,bytesPerChannel:i,bytesPerElement:s*i,Type:Gr[`${n}${r}`]}}function Lr(e,t,n,r={}){n.forEach(((n,s)=>{const i=[0,0,s+(r.baseArrayLayer||0)];if(Nr(n))!function(e,t,n,r){const s=function(e,t){if(on(e))return e;const{Type:n}=qr(t);return new n(e)}(n.data||n,t.format),i=function(e,t){return[e.width,e.height,e.depthOrArrayLayers].map((e=>Math.max(1,Math.floor(e/1))))}(t),{bytesPerElement:a}=qr(t.format),o=r.origin||[0,0,0];e.queue.writeTexture({texture:t,origin:o},s,{bytesPerRow:a*i[0],rowsPerImage:i[1]},i)}(e,t,n,{origin:i});else{const s=n,{flipY:a,premultipliedAlpha:o,colorSpace:c}=r;e.queue.copyExternalImageToTexture({source:s,flipY:a},{texture:t,premultipliedAlpha:o,colorSpace:c,origin:i},Fr(s,r))}})),t.mipLevelCount>1&&function(e,t,n){let r=Br.get(e);r||(r={pipelineByFormatAndView:{},moduleByViewType:{}},Br.set(e,r));let{sampler:s,uniformBuffer:i,uniformValues:a}=r;const{pipelineByFormatAndView:o,moduleByViewType:c}=r;n=n||function(e){switch(e.dimension){case"1d":return"1d";case"3d":return"3d";default:return e.depthOrArrayLayers>1?"2d-array":"2d"}}(t);let u=c[n];if(!u){const t=function(e){let t,n;switch(e){case"2d":t="texture_2d<f32>",n="textureSample(ourTexture, ourSampler, fsInput.texcoord)";break;case"2d-array":t="texture_2d_array<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              fsInput.texcoord,\n              uni.layer)";break;case"cube":t="texture_cube<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1))";break;case"cube-array":t="texture_cube_array<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1), uni.layer)";break;default:throw new Error(`unsupported view: ${e}`)}return`\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          return vsOutput;\n        }\n\n        struct Uniforms {\n          layer: u32,\n        };\n\n        @group(0) @binding(0) var ourSampler: sampler;\n        @group(0) @binding(1) var ourTexture: ${t};\n        @group(0) @binding(2) var<uniform> uni: Uniforms;\n\n        @fragment fn fs(fsInput: VSOutput) -> @location(0) vec4f {\n          _ = uni.layer; // make sure this is used so all pipelines have the same bindings\n          return ${n};\n        }\n      `}(n);u=e.createShaderModule({label:`mip level generation for ${n}`,code:t}),c[n]=u}s||(s=e.createSampler({minFilter:"linear",magFilter:"linear"}),i=e.createBuffer({size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),a=new Uint32Array(1),Object.assign(r,{sampler:s,uniformBuffer:i,uniformValues:a}));const l=`${t.format}.${n}`;o[l]||(o[l]=e.createRenderPipeline({label:`mip level generator pipeline for ${n}`,layout:"auto",vertex:{module:u,entryPoint:"vs"},fragment:{module:u,entryPoint:"fs",targets:[{format:t.format}]}}));const h=o[l];for(let r=1;r<t.mipLevelCount;++r)for(let o=0;o<t.depthOrArrayLayers;++o){a[0]=o,e.queue.writeBuffer(i,0,a);const c=e.createBindGroup({layout:h.getBindGroupLayout(0),entries:[{binding:0,resource:s},{binding:1,resource:t.createView({dimension:n,baseMipLevel:r-1,mipLevelCount:1})},{binding:2,resource:{buffer:i}}]}),u={label:"mip gen renderPass",colorAttachments:[{view:t.createView({dimension:"2d",baseMipLevel:r,mipLevelCount:1,baseArrayLayer:o,arrayLayerCount:1}),loadOp:"clear",storeOp:"store"}]},l=e.createCommandEncoder({label:"mip gen encoder"}),f=l.beginRenderPass(u);f.setPipeline(h),f.setBindGroup(0,c),f.draw(3),f.end();const d=l.finish();e.queue.submit([d])}}(e,t)}function Fr(e,t){if(e instanceof HTMLVideoElement)return[e.videoWidth,e.videoHeight,1];{const n=e,{width:r,height:s}=n;if(r>0&&s>0&&!Nr(e))return[r,s,1];const i=t.format||"rgba8unorm",{bytesPerElement:a,bytesPerChannel:o}=qr(i),c=on(e)||Array.isArray(e)?e:e.data;return function(e,t,n,r="2d"){if(n%1!=0)throw new Error("can't guess dimensions");if(e||t){if(t){if(!e&&(e=n/t)%1)throw new Error("can't guess dimensions")}else if((t=n/e)%1)throw new Error("can't guess dimensions")}else{const s=Math.sqrt(n/("cube"===r?6:1));s%1==0?(e=s,t=s):(e=n,t=1)}const s=n/e/t;if(s%1)throw new Error("can't guess dimensions");return[e,t,s]}(r,s,(on(c)?c.byteLength:c.length*o)/a)}}async function Yr(e,t,n={}){const r=await Promise.all(t.map((e=>async function(e,t={}){const n=await fetch(e),r=await n.blob(),s={...t,...void 0!==t.colorSpaceConversion&&{colorSpaceConversion:"none"}};return await createImageBitmap(r,s)}(e))));return function(e,t,n={}){const r=Fr(t[0],n);r[2]=r[2]>1?r[2]:t.length;const s=e.createTexture({dimension:Vr(n.dimension),format:n.format||"rgba8unorm",mipLevelCount:n.mipLevelCount?n.mipLevelCount:n.mips?Rr(r):1,size:r,usage:(n.usage??0)|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});return Lr(e,s,t,n),s}(e,r,n)}async function Hr(e,t,n={}){return Yr(e,[t],n)}const $r="r8unorm",Wr={format:$r,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING,dimension:"3d"},Xr=(e,t)=>Math.ceil(e/t)*t,Zr="const PI\t \t= 3.141592;\nconst EPSILON_NRM = 0.0001; // TODO: use resolution to normalize\n\nstruct Time {\n  frame: u32,\n  deltaTime: f32,\n  elapsed: f32\n};\n\n// Cloud parameters\nconst EARTH_RADIUS = 6300e3;\nconst CLOUD_START = 600.0;\nconst CLOUD_HEIGHT = 800.0;\nconst SUN_POWER = vec3(1.0,0.9,0.6) * 500.;\nconst LOW_SCATTER = vec3(1.0, 0.7, 0.5);\nconst MAX_DISTANCE = 10000.0;\n\n@group(0) @binding(0) var depth : texture_2d<f32>;\n@group(0) @binding(1) var inputTex : texture_2d<f32>;\n@group(0) @binding(2) var outputTex : texture_storage_2d<rgba8unorm, write>;\n@group(0) @binding(3) var<uniform> viewProjections : ViewProjectionMatrices;\n@group(0) @binding(4) var<uniform> sunDirection : vec3<f32>;\n@group(0) @binding(5) var<uniform> time : Time;\n@group(0) @binding(6) var blueNoiseTex : texture_2d<f32>;\n@group(0) @binding(7) var pebbleTex : texture_2d<f32>;\n@group(0) @binding(8) var linearSampler : sampler;\n@group(0) @binding(9) var<uniform> cameraPosition : vec3<f32>;\n@group(0) @binding(10) var worldPosTex : texture_2d<f32>;\n@group(1) @binding(1) var skyCube : texture_cube<f32>;\n@group(1) @binding(2) var skyCubeWrite : texture_storage_2d_array<rgba8unorm, write>;\n@group(1) @binding(3) var lastSkyCube : texture_2d_array<f32>;\n\n\n\n// Noise generation functions (by iq)\nfn hash( n: f32 ) -> f32\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfn hash2( p: vec2<f32> ) -> f32 {\n    return fract(sin(dot(p,vec2(127.1,311.7)))*43758.5453123);\n}\n\nfn sampleBlueNoise( uv: vec2<f32> ) -> vec2<f32>\n{\n    return textureSampleLevel(blueNoiseTex, linearSampler, uv, 0.0).rg;\n}\n\nfn samplePebbles( uv: vec2<f32> ) -> f32\n{\n  return textureSampleLevel(pebbleTex, linearSampler, uv, 0.0).r;\n}\n\nfn noise3( x:vec3<f32> ) -> f32\n{\n  var p = floor(x);\n  var f = fract(x);\n  f = f*f*(3.0 - 2.0 *f);\n\tlet uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tlet rg = sampleBlueNoise((uv+0.5)/256.0).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nfn noise2( p:vec2<f32> ) -> f32\n{\n  let i = floor( p );\n  var f = fract( p );\n\tf = f*f*(3.0 - 2.0*f);\n  return -1.0+2.0*mix( mix( hash2( i + vec2(0.0,0.0) ),\n                     hash2( i + vec2(1.0,0.0) ), f.x),\n                mix( hash2( i + vec2(0.0,1.0) ),\n                     hash2( i + vec2(1.0,1.0) ), f.x), f.y);\n}\n\nfn fbm( p: vec3<f32> ) -> f32\n{\n    var pCopy = p;\n    let m = mat3x3<f32>( 0.00,  0.80,  0.60,\n              -0.80,  0.36, -0.48,\n              -0.60, -0.48,  0.64 );\n    var f = 0.5000*noise3( pCopy );\n    pCopy = m*pCopy*2.02;\n    f += 0.2500*noise3( pCopy );\n    pCopy = m*pCopy*2.03;\n    f += 0.1250*noise3( pCopy );\n    return f;\n}\n\nfn intersectSphere(origin: vec3<f32>, dir: vec3<f32>, spherePos: vec3<f32>, sphereRad: f32) -> f32\n{\n\tlet oc = origin - spherePos;\n\tlet b = 2.0 * dot(dir, oc);\n\tlet c = dot(oc, oc) - sphereRad*sphereRad;\n\tlet disc = b * b - 4.0 * c;\n\tif (disc < 0.0)\n\t{\n\t  return -1.0;\n\t}\n\n//    float q = (-b + ((b < 0.0) ? -sqrt(disc) : sqrt(disc))) / 2.0;\n  let q = (-b + select(sqrt(disc), -sqrt(disc), b < 0.0)) / 2.0;\n\tvar t0 = q;\n\tvar t1 = c / q;\n\tif (t0 > t1) {\n\t\tvar temp = t0;\n\t\tt0 = t1;\n\t\tt1 = temp;\n\t}\n\tif (t1 < 0.0){\n\t  return -1.0;\n\t}\n\n  return select(t0, t1, t0 < 0.0);\n}\n\n// TODO: pass time buffer\n\n// return the density of clouds at a given point, and height\nfn clouds(p: vec3<f32>, t: f32) -> vec2<f32>\n{\n    var pCopy = p;\n    let atmoHeight = length(p - vec3(0.0, -EARTH_RADIUS, 0.0)) - EARTH_RADIUS;\n    let cloudHeight = clamp((atmoHeight-CLOUD_START)/(CLOUD_HEIGHT), 0.0, 1.0);\n    pCopy.z += t*40;\n    let largeWeather = clamp((samplePebbles(-0.00005*pCopy.zx) - 0.18)*5.0, 0.0, 2.0);\n    //let largeWeather = 1.0;\n    pCopy.x += t*32;\n    var weather = largeWeather*max(0.0,samplePebbles(0.0002*pCopy.zx) - 0.28)/0.72;\n    weather *= smoothstep(0.0, 0.5, cloudHeight) * smoothstep(1.0, 0.5, cloudHeight);\n    let cloudShape = pow(weather, 0.3+1.5*smoothstep(0.2, 0.5, cloudHeight));\n    if(cloudShape <= 0.0){\n        return vec2(0.0, cloudHeight);\n    }\n    pCopy.x += t*48;\n\t  var den= max(0.0, cloudShape - 0.7*fbm(p*.01));\n    if(den <= 0.0){\n        return vec2(0.0, cloudHeight);\n    }\n    pCopy.y += t*60;\n    den= max(0.0, den - 0.2*fbm(p*0.05));\n    return vec2(largeWeather*0.2*min(1.0, 5.0*den), cloudHeight);\n}\n\n// From https://www.shadertoy.com/view/4sjBDG\nfn numericalMieFit( costh: f32) -> f32\n{\n    // This function was optimized to minimize (delta*delta)/reference in order to capture\n    // the low intensity behavior.\n    var bestParams = array<f32, 10>();\n    bestParams[0]=9.805233e-06;\n    bestParams[1]=-6.500000e+01;\n    bestParams[2]=-5.500000e+01;\n    bestParams[3]=8.194068e-01;\n    bestParams[4]=1.388198e-01;\n    bestParams[5]=-8.370334e+01;\n    bestParams[6]=7.810083e+00;\n    bestParams[7]=2.054747e-03;\n    bestParams[8]=2.600563e-02;\n    bestParams[9]=-4.552125e-12;\n\n    var p1 = costh + bestParams[3];\n    let expValues = exp(vec4(bestParams[1] *costh+bestParams[2], bestParams[5] *p1*p1, bestParams[6] *costh, bestParams[9] *costh));\n    let expValWeight= vec4(bestParams[0], bestParams[4], bestParams[7], bestParams[8]);\n    return dot(expValues, expValWeight);\n}\n\nfn lightRay(p: vec3<f32>, phaseFunction: f32, dC: f32, mu: f32, sun_direction: vec3<f32>, cloudHeight: f32, t: f32) -> f32\n{\n    let nbSampleLight = 6;\n\t  let zMaxl         = 200.;\n    let stepL         = zMaxl/f32(nbSampleLight);\n    var pCopy = p;\n    var cloudHeightCopy = 0.0;\n\n    var lighRayDen = 0.0;\n    pCopy += sun_direction*stepL*hash(dot(pCopy, vec3(12.256, 2.646, 6.356)) + t * 4);\n    for(var j=0; j<nbSampleLight; j++)\n    {\n        let cloudsResult = clouds( pCopy + sun_direction*f32(j)*stepL, time.elapsed);\n        lighRayDen += cloudsResult.x;\n        cloudHeightCopy = cloudsResult.y;\n    }\n    let scatterAmount = mix(0.008, 1.0, smoothstep(0.96, 0.0, mu));\n    let beersLaw = exp(-stepL*lighRayDen)+0.5*scatterAmount*exp(-0.1*stepL*lighRayDen)+scatterAmount*0.4*exp(-0.02*stepL*lighRayDen);\n    return beersLaw * phaseFunction * mix(0.05 + 1.5*pow(min(1.0, dC*8.5), 0.3+5.5*cloudHeightCopy), 1.0, clamp(lighRayDen*0.4, 0.0, 1.0));\n}\n\n\nfn Schlick (f0: f32, VoH: f32 ) -> f32\n{\n\treturn f0+(1.-f0)*pow(1.0-VoH,5.0);\n}\n\nfn skyRay(org: vec3<f32>, dir: vec3<f32>,sun_direction: vec3<f32>) -> vec3<f32>\n{\n\n  let ATM_START = EARTH_RADIUS+CLOUD_START;\n\tlet ATM_END = ATM_START+CLOUD_HEIGHT;\n\n  let nbSample = 8;\n  var color = vec3(0.0);\n  let distToAtmStart = intersectSphere(org, dir, vec3(0.0, -EARTH_RADIUS, 0.0), ATM_START);\n  let distToAtmEnd = intersectSphere(org, dir, vec3(0.0, -EARTH_RADIUS, 0.0), ATM_END);\n  var p = org + distToAtmStart * dir;\n\n  let stepS = (distToAtmEnd-distToAtmStart) / f32(nbSample);\n  var T = 1.;\n  let mu = dot(sun_direction, dir);\n  let phaseFunction = numericalMieFit(mu);\n  p += dir*stepS*hash(dot(dir, vec3(12.256, 2.646, 6.356)) + time.elapsed * 4);\n  if(dir.y > 0.01){\n    for(var i=0; i<nbSample; i++)\n    {\n      if(distance(p, org) > MAX_DISTANCE){\n        break;\n      }\n      let cloudResult = clouds(p, time.elapsed);\n      let cloudHeight = cloudResult.y;\n      let density = cloudResult.x;\n      if(density>0.)\n      {\n        let intensity = lightRay(p, phaseFunction, density, mu, sun_direction, cloudHeight, time.elapsed);\n        let ambient = (0.5 + 0.6*cloudHeight)*vec3(0.2, 0.5, 1.0)*6.5 + vec3(0.8) * max(0.0, 1.0 - 2.0*cloudHeight);\n        var radiance = ambient + SUN_POWER*intensity;\n        radiance*=density;\n        color += T*(radiance - radiance * exp(-density * stepS)) / density;   // By Seb Hillaire\n        T *= exp(-density*stepS);\n        if( T <= 0.05){\n          break;\n        }\n      }\n      p += dir*stepS;\n    }\n  }\n\n  let pC = org + intersectSphere(org, dir, vec3(0.0, -EARTH_RADIUS, 0.0), ATM_END+1000.0)*dir;\n  // high clouds\n  color += T*vec3(3.0)*max(0.0, fbm(vec3(1.0, 1.0, 1.8)*pC*0.002) - 0.4);\n\n\tvar background = 6.0*mix(vec3(0.2, 0.52, 1.0), vec3(0.8, 0.95, 1.0), pow(0.5+0.5*mu, 15.0))+mix(vec3(3.5), vec3(0.0), min(1.0, 2.3*dir.y));\n  background += T*vec3(1e4*smoothstep(0.9998, 1.0, mu));\n  color += background * T;\n\n  return color;\n}\n\nfn D_GGX(r: f32,  NoH: f32, h: vec3<f32>) -> f32\n{\n    let a = NoH * r;\n    let k = r / ((1.0 - NoH * NoH) + a * a);\n    return k * k * (1.0 / PI);\n}\n\nfn HenyeyGreenstein(mu: f32, inG: f32) -> f32\n{\n\treturn (1.-inG * inG)/(pow(1.+inG*inG - 2.0 * inG*mu, 1.5)*4.0* PI);\n}\n\nfn tonemapACES( x: vec3<f32> ) -> vec3<f32>\n{\n    let a = 2.51;\n    let b = 0.03;\n    let c = 2.43;\n    let d = 0.59;\n    let e = 0.14;\n    return (x*(a*x+b))/(x*(c*x+d)+e);\n}\n\n\nfn sample_sky(rayDirection: vec3<f32>, rayOrigin: vec3<f32>) -> vec3<f32> {\n    return skyRay(rayOrigin, rayDirection,sunDirection);\n}\n\nstruct ViewProjectionMatrices {\n  viewProjection : mat4x4<f32>,\n  previousViewProjection : mat4x4<f32>,\n  inverseViewProjection : mat4x4<f32>,\n  previousInverseViewProjection : mat4x4<f32>,\n  projection : mat4x4<f32>,\n  inverseProjection: mat4x4<f32>\n};\n\n// Function to mimic the ease_out_expo function\nfn ease_out_expo(x: f32) -> f32 {\n    let t: f32 = x;\n    let b: f32 = 0.0;\n    let c: f32 = 1.0;\n    let d: f32 = 1.0; // Set the duration within the function\n    let intermediate_result: f32 = c * (-pow(2.0, -10.0 * t / d) + 1.0) + b;\n    return select(intermediate_result, b + c, t == d);\n}\n\nconst SKY_COLOUR: vec3<f32> = vec3<f32>(0.6, 0.8, 0.9);\nconst START_DISTANCE: f32 = 0.0;\nconst FOG_DENSITY: f32 = 0.01;\nconst NEAR: f32 = 0.5;\nconst FAR: f32 = 10000.0;\n\nfn rotateY(v: vec3<f32>, angle: f32) -> vec3<f32> {\n    let s = sin(angle);\n    let c = cos(angle);\n    return vec3<f32>(\n        v.x * c - v.z * s,\n        v.y,\n        v.x * s + v.z * c\n    );\n}\n\nfn rotateX(v: vec3<f32>, angle: f32) -> vec3<f32> {\n    let s = sin(angle);\n    let c = cos(angle);\n    return vec3<f32>(\n        v.x,\n        v.y * c - v.z * s,\n        v.y * s + v.z * c\n    );\n}\n\n// Rotate ray around the y axis, incrementally increasing the x rotation to form a spiral patttern\nfn spiralBlurCubeSample(rayDirection: vec3<f32>) -> vec4<f32>\n{\n  var weights = 0.0;\n  var output = vec4(0.0);\n  for(var i = 0; i < 6; i++){\n    var r = rayDirection.xy + vec2(f32(i) * 0.0001);\n    var sampleRayDirection = mix(rayDirection,randomInHemisphere(r, rayDirection),0.003);\n    output += textureSampleLevel(skyCube, linearSampler, sampleRayDirection, 0.0);\n    weights += 1.0;\n  }\n  return output / weights;\n}\n\n@compute @workgroup_size(8, 8, 1)\nfn main(\n  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n) {\n    let resolution = textureDimensions(depth);\n    let pixel = GlobalInvocationID.xy;\n    var uv = vec2<f32>(pixel) / vec2<f32>(resolution);\n    let rayDirection = calculateRayDirection(uv,viewProjections.inverseViewProjection);\n    let rayOrigin = cameraPosition;\n//    let sky = textureSampleLevel(skyCube, linearSampler, rayDirection, 0.0).rgb;\n    let sky = spiralBlurCubeSample(rayDirection).rgb;\n\n    var color = sky;\n\n    if(all(textureLoad(worldPosTex, pixel, 0).rgb < vec3(0.00001))){\n      let output = vec4(color, 1);\n      textureStore(outputTex, pixel, output);\n      return;\n    }\n\n}\n\nfn getDebugColor(index: u32) -> vec4<f32> {\n  let colors = array<vec4<f32>, 8>(\n    vec4<f32>(1.0, 0.0, 0.0, 1.0),\n    vec4<f32>(0.0, 1.0, 0.0, 1.0),\n    vec4<f32>(0.0, 0.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 0.0, 1.0),\n    vec4<f32>(1.0, 0.0, 1.0, 1.0),\n    vec4<f32>(0.0, 1.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 1.0, 1.0),\n    vec4<f32>(0.5, 0.5, 0.5, 1.0)\n  );\n  return colors[index % 8];\n}\n\nfn getCubeRayDirection(uv: vec2<f32>, faceIndex: u32) -> vec3<f32>\n{\n  let uMapped = uv.x * 2.0 - 1.0;\n  let vMapped = uv.y * 2.0 - 1.0;\n\n  switch(faceIndex)\n  {\n    case 0{return vec3<f32>(1.0, -vMapped, -uMapped);}\n    case 1{return vec3<f32>(-1.0, -vMapped, uMapped);}\n    case 2{return vec3<f32>(uMapped, 1.0, vMapped);}\n    case 3{return vec3<f32>(uMapped, -1.0, -vMapped);}\n    case 4{return vec3<f32>(uMapped, -vMapped, 1.0);}\n    case 5{return vec3<f32>(-uMapped, -vMapped, -1.0);}\n    default{return vec3<f32>(0.0);}\n  }\n}\n\nfn getFramePixelOffset() -> vec2<u32>\n{\n  let frameIndex = time.frame % 4;\n  let x = frameIndex % 2;\n  let y = frameIndex / 2;\n  return vec2<u32>(x, y);\n}\n\nconst offsets = array<vec2<i32>,8>(\n  vec2(-1,-1), vec2(-1, 1),\n\tvec2(1, -1), vec2(1, 1),\n\tvec2(1, 0), vec2(0, -1),\n\tvec2(0, 1), vec2(-1, 0)\n);\n\nfn RGBToYCoCg( RGB: vec3<f32> ) -> vec3<f32>\n{\n\tlet Y = dot(RGB, vec3(  1, 2,  1 )) * 0.25;\n\tlet Co= dot(RGB, vec3(  2, 0, -2 )) * 0.25 + ( 0.5 * 256.0/255.0 );\n\tlet Cg= dot(RGB, vec3( -1, 2, -1 )) * 0.25 + ( 0.5 * 256.0/255.0 );\n\treturn vec3(Y, Co, Cg);\n}\n\nfn YCoCgToRGB( YCoCg: vec3<f32> ) -> vec3<f32>\n{\n\tlet Y= YCoCg.x;\n\tlet Co= YCoCg.y - ( 0.5 * 256.0 / 255.0 );\n\tlet Cg= YCoCg.z - ( 0.5 * 256.0 / 255.0 );\n\tlet R= Y + Co-Cg;\n\tlet G= Y + Cg;\n\tlet B= Y - Co-Cg;\n\treturn vec3(R,G,B);\n}\n\nconst gaussianWeights = array<f32, 25>(\n  0.003765, 0.015019, 0.023792, 0.015019, 0.003765,\n  0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n  0.023792, 0.094907, 0.150342, 0.094907, 0.023792,\n  0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n  0.003765, 0.015019, 0.023792, 0.015019, 0.003765\n);\n\n\nconst gaussianOffsets = array<vec2<i32>, 25>(\n  vec2(-2, -2), vec2(-1, -2), vec2(0, -2), vec2(1, -2), vec2(2, -2),\n  vec2(-2, -1), vec2(-1, -1), vec2(0, -1), vec2(1, -1), vec2(2, -1),\n  vec2(-2, 0), vec2(-1, 0), vec2(0, 0), vec2(1, 0), vec2(2, 0),\n  vec2(-2, 1), vec2(-1, 1), vec2(0, 1), vec2(1, 1), vec2(2, 1),\n  vec2(-2, 2), vec2(-1, 2), vec2(0, 2), vec2(1, 2), vec2(2, 2)\n);\n\nfn gaussianBlurHistorySample( pixel: vec2<u32>, cubeFaceIndex: u32 ) -> vec3<f32>\n{\n  let textureSize = textureDimensions(lastSkyCube).xy;\n  var color = vec3<f32>(0.0);\n  var weights = 0.0;\n  for(var i = 0; i < 25; i++)\n  {\n    let samplePixel = vec2<i32>(pixel) + gaussianOffsets[i];\n    if(any(samplePixel < vec2(0)) || any(samplePixel >= vec2<i32>(textureSize))){\n      continue;\n    }\n    color += RGBToYCoCg(textureLoad(lastSkyCube, samplePixel, cubeFaceIndex, 0).rgb) * gaussianWeights[i];\n    weights += gaussianWeights[i];\n  }\n\n  return color / weights;\n}\n\nfn polarToCartesian(angle: f32, radius: f32) -> vec2<f32> {\n  let radians = angle * PI / 180.0;\n  let x = radius * cos(radians);\n  let y = radius * sin(radians);\n  return vec2<f32>(x, y);\n}\n\nfn spiralBlurHistorySample( pixel: vec2<u32>, cubeFaceIndex: u32 ) -> vec3<f32>\n{\n  var weights = 0.0;\n  var output = vec3<f32>(0.0);\n   let textureSize = textureDimensions(lastSkyCube).xy;\n  for(var i = 0; i <= 6; i++){\n      let angle = (i % 6) * 60; // 0, 90, 180, 270\n      let radius = (i + 1) / 2;\n      let samplePixel = vec2<i32>(pixel) + vec2<i32>(polarToCartesian(f32(angle), f32(radius)));\n      if(any(samplePixel < vec2(0)) || any(samplePixel >= vec2<i32>(textureSize))){\n        continue;\n      }\n      output += RGBToYCoCg(textureLoad(lastSkyCube, samplePixel, cubeFaceIndex, 0).rgb);\n      weights += 1.0;\n    }\n\n    return output / weights;\n}\n\nconst HISTORY_BLEND = 0.9;\n\n@compute @workgroup_size(8, 8, 1)\nfn writeToCube(\n  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n) {\n  let cubeFaceIndex = GlobalInvocationID.z;\n  var pixel = GlobalInvocationID.xy;\n  pixel *= 2;\n  pixel += getFramePixelOffset();\n  var rayDirection = getCubeRayDirection(vec2<f32>(pixel) / vec2<f32>(textureDimensions(skyCubeWrite).xy), cubeFaceIndex);\n  rayDirection = normalize(rayDirection);\n  let sky = sample_sky(rayDirection, cameraPosition);\n  let mu = dot(sunDirection, rayDirection);\n  let fogDistance = intersectSphere(cameraPosition, rayDirection, vec3(0.0, -EARTH_RADIUS, 0.0), EARTH_RADIUS+160.0);\n  let fogPhase = 0.5*HenyeyGreenstein(mu, 0.7)+0.5*HenyeyGreenstein(mu, -0.6);\n  var colour = sky;\n  colour = mix(fogPhase*0.1*LOW_SCATTER*SUN_POWER+10.0*vec3(0.55, 0.8, 1.0), colour, exp(-0.0003*fogDistance));\n  colour = tonemapACES(colour * 0.1);\n  let newSample = RGBToYCoCg(colour);\n//  var history = RGBToYCoCg(textureLoad(lastSkyCube, pixel, cubeFaceIndex, 0).rgb);\nvar history = spiralBlurHistorySample(pixel, cubeFaceIndex);\n\n  var colorAvg = newSample;\n  var colorVar = newSample*newSample;\n  // Marco Salvi's Implementation (by Chris Wyman)\n  let textureSize = textureDimensions(skyCubeWrite).xy;\n  for(var i = 0; i < 8; i++)\n  {\n    let samplePixel = vec2<i32>(pixel) + offsets[i];\n    if(any(samplePixel < vec2(0)) || any(samplePixel >= vec2<i32>(textureSize))){\n      continue;\n    }\n    let fetch = RGBToYCoCg(textureLoad(lastSkyCube, samplePixel, cubeFaceIndex, 0).xyz);\n    colorAvg += fetch;\n    colorVar += fetch*fetch;\n  }\n  colorAvg /= 9.0;\n  colorVar /= 9.0;\n  let gColorBoxSigma = 0.75;\n  let sigma = sqrt(max(vec3(0.0), colorVar - colorAvg*colorAvg));\n  let colorMin = colorAvg - gColorBoxSigma * sigma;\n  let colorMax = colorAvg + gColorBoxSigma * sigma;\n  history = clamp(history, colorMin, colorMax);\n  colour = YCoCgToRGB(mix(newSample, history, HISTORY_BLEND));\n  textureStore(skyCubeWrite, pixel, cubeFaceIndex, vec4(colour,1));\n}",Qr="// Constants\nconst infinity : f32 = 99999999.0;\n\n// Utility functions\nfn degreesToRadians(degrees : f32) -> f32 {\n    return degrees * (3.1415926535897932385 / 180.0);\n}\n\nfn unitVector(v : vec3<f32>) -> vec3<f32> {\n    return v / length(v);\n}\n\nfn lengthSquared(v : vec3<f32>) -> f32 {\n    return v.x * v.x + v.y * v.y + v.z * v.z;\n}\n\nfn random(co : vec2<f32>) -> f32 {\n    return fract(sin(dot(co, vec2<f32>(12.9898, 78.233))) * 43758.5453);\n}\n\nfn randomMinMax(co : vec2<f32>, min : f32, max : f32) -> f32 {\n    return min + (max - min) * random(co);\n}\n\nfn randomFloat3(co : vec2<f32>) -> vec3<f32> {\n    return vec3<f32>(random(co), random(co * 2.0), random(co * 3.0));\n}\n\nfn randomFloat3MinMax(co : vec2<f32>, min : f32, max : f32) -> vec3<f32> {\n    return vec3<f32>(randomMinMax(co, min, max), randomMinMax(co * 2.0, min, max), randomMinMax(co * 3.0, min, max));\n}\n\nfn randomInUnitSphere(co : vec2<f32>) -> vec3<f32> {\n    var p : vec3<f32> = randomFloat3MinMax(co, -1.0, 1.0);\n    while (lengthSquared(p) < 1.0) {\n        p = randomFloat3MinMax(co, -1.0, 1.0);\n    }\n    return p;\n}\n\nfn randomInUnitDisk(seed : vec2<f32>) -> vec2<f32> {\n    let r = sqrt(random(seed));\n    let theta = 2.0 * 3.14159265359 * random(vec2<f32>(seed.y, seed.x));\n    return vec2<f32>(cos(theta), sin(theta)) * r;\n}\n\nfn randomInPlanarUnitDisk(seed : vec2<f32>, normal: vec3<f32>) -> vec3<f32> {\n    let disk = randomInUnitDisk(seed);\n    var diskNormal = cross(normal, vec3<f32>(0.0, 1.0, 0.0));\n    if (length(diskNormal) < 0.01) {\n        diskNormal = cross(normal, vec3<f32>(1.0, 0.0, 0.0));\n    }\n    diskNormal = normalize(diskNormal);\n    let diskTangent = cross(diskNormal, normal);\n    return disk.x * diskTangent + disk.y * diskNormal;\n}\n\nfn reflect(v : vec3<f32>, n : vec3<f32>) -> vec3<f32> {\n    return v - 2.0 * dot(v, n) * n;\n}\n\nfn randomUnitVector(co : vec2<f32>) -> vec3<f32> {\n    return unitVector(randomInUnitSphere(co));\n}\n\nfn nearZero(e : vec3<f32>) -> bool {\n    const s : f32 = 1e-8;\n    return (abs(e.x) < s) && (abs(e.y) < s) && (abs(e.z) < s);\n}\n\nfn randomInHemisphere(co : vec2<f32>, normal : vec3<f32>) -> vec3<f32> {\n    let inUnitSphere = randomUnitVector(co);\n    if (dot(inUnitSphere, normal) > 0.0) {\n        return inUnitSphere;\n    }\n    return -inUnitSphere;\n}\n\n// Function to perturb the normal vector within the hemisphere\nfn perturbDirection(normal: vec3<f32>, scatterAmount: f32, co: vec2<f32>) -> vec3<f32> {\n    // Generate a random vector in a hemisphere\n    let hemisphereVector : vec3<f32> = randomInHemisphere(co, normal);\n\n    // Combine the perturbation with the original normal\n    let perturbedDir : vec3<f32> = normalize(normal + scatterAmount * hemisphereVector);\n\n    return perturbedDir;\n}\n\nfn permute4(x: vec4<f32>) -> vec4<f32> { return ((x * 34. + 1.) * x) % vec4<f32>(289.); }\nfn taylorInvSqrt4(r: vec4<f32>) -> vec4<f32> { return 1.79284291400159 - 0.85373472095314 * r; }\nfn fade3(t: vec3<f32>) -> vec3<f32> { return t * t * t * (t * (t * 6. - 15.) + 10.); }\n\nfn perlinNoise3(P: vec3<f32>) -> f32 {\n    var Pi0 : vec3<f32> = floor(P); // Integer part for indexing\n    var Pi1 : vec3<f32> = Pi0 + vec3<f32>(1.); // Integer part + 1\n    Pi0 = Pi0 % vec3<f32>(289.);\n    Pi1 = Pi1 % vec3<f32>(289.);\n    let Pf0 = fract(P); // Fractional part for interpolation\n    let Pf1 = Pf0 - vec3<f32>(1.); // Fractional part - 1.\n    let ix = vec4<f32>(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    let iy = vec4<f32>(Pi0.yy, Pi1.yy);\n    let iz0 = Pi0.zzzz;\n    let iz1 = Pi1.zzzz;\n\n    let ixy = permute4(permute4(ix) + iy);\n    let ixy0 = permute4(ixy + iz0);\n    let ixy1 = permute4(ixy + iz1);\n\n    var gx0: vec4<f32> = ixy0 / 7.;\n    var gy0: vec4<f32> = fract(floor(gx0) / 7.) - 0.5;\n    gx0 = fract(gx0);\n    var gz0: vec4<f32> = vec4<f32>(0.5) - abs(gx0) - abs(gy0);\n    var sz0: vec4<f32> = step(gz0, vec4<f32>(0.));\n    gx0 = gx0 + sz0 * (step(vec4<f32>(0.), gx0) - 0.5);\n    gy0 = gy0 + sz0 * (step(vec4<f32>(0.), gy0) - 0.5);\n\n    var gx1: vec4<f32> = ixy1 / 7.;\n    var gy1: vec4<f32> = fract(floor(gx1) / 7.) - 0.5;\n    gx1 = fract(gx1);\n    var gz1: vec4<f32> = vec4<f32>(0.5) - abs(gx1) - abs(gy1);\n    var sz1: vec4<f32> = step(gz1, vec4<f32>(0.));\n    gx1 = gx1 - sz1 * (step(vec4<f32>(0.), gx1) - 0.5);\n    gy1 = gy1 - sz1 * (step(vec4<f32>(0.), gy1) - 0.5);\n\n    var g000: vec3<f32> = vec3<f32>(gx0.x, gy0.x, gz0.x);\n    var g100: vec3<f32> = vec3<f32>(gx0.y, gy0.y, gz0.y);\n    var g010: vec3<f32> = vec3<f32>(gx0.z, gy0.z, gz0.z);\n    var g110: vec3<f32> = vec3<f32>(gx0.w, gy0.w, gz0.w);\n    var g001: vec3<f32> = vec3<f32>(gx1.x, gy1.x, gz1.x);\n    var g101: vec3<f32> = vec3<f32>(gx1.y, gy1.y, gz1.y);\n    var g011: vec3<f32> = vec3<f32>(gx1.z, gy1.z, gz1.z);\n    var g111: vec3<f32> = vec3<f32>(gx1.w, gy1.w, gz1.w);\n\n    let norm0 = taylorInvSqrt4(\n        vec4<f32>(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 = g000 * norm0.x;\n    g010 = g010 * norm0.y;\n    g100 = g100 * norm0.z;\n    g110 = g110 * norm0.w;\n    let norm1 = taylorInvSqrt4(\n        vec4<f32>(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 = g001 * norm1.x;\n    g011 = g011 * norm1.y;\n    g101 = g101 * norm1.z;\n    g111 = g111 * norm1.w;\n\n    let n000 = dot(g000, Pf0);\n    let n100 = dot(g100, vec3<f32>(Pf1.x, Pf0.yz));\n    let n010 = dot(g010, vec3<f32>(Pf0.x, Pf1.y, Pf0.z));\n    let n110 = dot(g110, vec3<f32>(Pf1.xy, Pf0.z));\n    let n001 = dot(g001, vec3<f32>(Pf0.xy, Pf1.z));\n    let n101 = dot(g101, vec3<f32>(Pf1.x, Pf0.y, Pf1.z));\n    let n011 = dot(g011, vec3<f32>(Pf0.x, Pf1.yz));\n    let n111 = dot(g111, Pf1);\n\n    var fade_xyz: vec3<f32> = fade3(Pf0);\n    let temp = vec4<f32>(f32(fade_xyz.z)); // simplify after chrome bug fix\n    let n_z = mix(vec4<f32>(n000, n100, n010, n110), vec4<f32>(n001, n101, n011, n111), temp);\n    let n_yz = mix(n_z.xy, n_z.zw, vec2f(f32(fade_xyz.y))); // simplify after chrome bug fix\n    let n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n    return 2.2 * n_xyz;\n}",Kr="fn calculateRayDirection(uv: vec2<f32>, inverseProjection: mat4x4<f32>) -> vec3<f32> {\n  let clipSpace = vec2(1.0 - uv.x, 1.0 - uv.y) * 2.0 - 1.0;\n  let viewRay = vec3<f32>(clipSpace, 1.0);\n  let viewRayView = inverseProjection * vec4(viewRay, 1.0);\n  return normalize(viewRayView.xyz);\n}\n",Jr=async()=>{const e={binding:0,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"unfilterable-float"}},t={binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float"}},n={binding:2,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba8unorm"}},r={binding:3,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},s={binding:4,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},i={binding:5,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},a={binding:6,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float"}},o={binding:7,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float"}},c={binding:8,visibility:GPUShaderStage.COMPUTE,sampler:{}},u={binding:9,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},l={binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"cube"}},h={binding:2,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba8unorm",viewDimension:"2d-array"}},f={binding:3,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d-array"}},d={binding:10,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"unfilterable-float"}},m=gs.createBindGroupLayout({entries:[e,t,n,r,s,i,a,o,c,u,d]}),p=gs.createBindGroupLayout({entries:[l]}),g=gs.createBindGroupLayout({entries:[h,f]}),_=gs.createComputePipeline({layout:gs.createPipelineLayout({bindGroupLayouts:[m,p]}),compute:{module:gs.createShaderModule({code:`${Qr}${Kr}${Zr}`}),entryPoint:"main"}}),y=gs.createComputePipeline({layout:gs.createPipelineLayout({bindGroupLayouts:[m,g]}),compute:{module:gs.createShaderModule({code:`${Qr}${Kr}${Zr}`}),entryPoint:"writeToCube"}});let v;const x=gs.createSampler({minFilter:"linear",magFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"}),w=await Hr(gs,"pebbles.png",{usage:GPUTextureUsage.COPY_SRC}),b=await Hr(gs,"rgba-noise.png",{usage:GPUTextureUsage.COPY_SRC}),k=gs.createTexture({size:[768,768,6],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING});return{render:({outputTextures:e,timestampWrites:t,viewProjectionMatricesBuffer:n,sunDirectionBuffer:r,timeBuffer:s,cameraPositionBuffer:i})=>{v||(v=gs.createTexture({size:[e.finalTexture.width,e.finalTexture.height,e.finalTexture.depthOrArrayLayers],format:e.finalTexture.format,usage:e.finalTexture.usage}));const a=gs.createCommandEncoder();a.copyTextureToTexture({texture:e.finalTexture},{texture:v},{width:e.finalTexture.width,height:e.finalTexture.height,depthOrArrayLayers:1});const o=gs.createBindGroup({layout:m,entries:[{binding:0,resource:e.depthTexture.createView()},{binding:1,resource:v.createView()},{binding:2,resource:e.finalTexture.createView()},{binding:3,resource:{buffer:n}},{binding:4,resource:{buffer:r}},{binding:5,resource:{buffer:s}},{binding:6,resource:b.createView()},{binding:7,resource:w.createView()},{binding:8,resource:x},{binding:9,resource:{buffer:i}},{binding:10,resource:e.worldPositionTexture.createView()}]}),c=a.beginComputePass({timestampWrites:t});c.setPipeline(y),c.setBindGroup(0,o),c.setBindGroup(1,gs.createBindGroup({layout:g,entries:[{binding:2,resource:e.skyTexture.createView({dimension:"2d-array"})},{binding:3,resource:k.createView({dimension:"2d-array"})}]})),c.dispatchWorkgroups(e.skyTexture.width/16,e.skyTexture.height/16,6),c.setPipeline(_),c.setBindGroup(0,o),c.setBindGroup(1,gs.createBindGroup({layout:p,entries:[{binding:1,resource:e.skyTexture.createView({dimension:"cube"})}]}));const u=e.depthTexture.width,l=e.depthTexture.height,h=Math.ceil(u/8),f=Math.ceil(l/8);return c.dispatchWorkgroups(h,f),c.end(),a.copyTextureToTexture({texture:e.skyTexture},{texture:k},{width:e.skyTexture.width,height:e.skyTexture.height,depthOrArrayLayers:e.skyTexture.depthOrArrayLayers}),[a.finish()]},label:"sky"}},es={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let ts;const ns=new Uint8Array(16);function rs(){if(!ts&&(ts="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!ts))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return ts(ns)}const ss=[];for(let e=0;e<256;++e)ss.push((e+256).toString(16).slice(1));const is=function(e,t,n){if(es.randomUUID&&!t&&!e)return es.randomUUID();const r=(e=e||{}).random||(e.rng||rs)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return function(e,t=0){return ss[e[t+0]]+ss[e[t+1]]+ss[e[t+2]]+ss[e[t+3]]+"-"+ss[e[t+4]]+ss[e[t+5]]+"-"+ss[e[t+6]]+ss[e[t+7]]+"-"+ss[e[t+8]]+ss[e[t+9]]+"-"+ss[e[t+10]]+ss[e[t+11]]+ss[e[t+12]]+ss[e[t+13]]+ss[e[t+14]]+ss[e[t+15]]}(r)};class as{id;name;transform;inverseTransform;previousTransform;previousInverseTransform;size;atlasLocation;worldSpaceCenter;constructor(e,t,n,r="unnamed"){this.id=is(),this.name=r,this.transform=e,this.size=t,this.inverseTransform=ve.invert(this.transform),this.previousTransform=ve.clone(this.transform),this.previousInverseTransform=ve.clone(this.inverseTransform),this.atlasLocation=n;const s=re.transformMat4(re.create(),this.transform),i=re.transformMat4(this.size,this.transform);this.worldSpaceCenter=re.lerp(s,i,.5)}get objectSpaceCorners(){return[re.create(0,0,0),re.create(0,0,this.size[2]),re.create(0,this.size[1],0),re.create(0,this.size[1],this.size[2]),re.create(this.size[0],0,0),re.create(this.size[0],0,this.size[2]),re.create(this.size[0],this.size[1],0),re.create(this.size[0],this.size[1],this.size[2])]}get worldSpaceCorners(){return this.objectSpaceCorners.map((e=>re.transformMat4(e,this.transform)))}get AABB(){return(e=>{let t=re.create(1/0,1/0,1/0),n=re.create(-1/0,-1/0,-1/0);for(const r of e)t=re.min(t,r),n=re.max(n,r);return{min:t,max:n}})(this.worldSpaceCorners)}toArray(){return[...this.transform,...this.inverseTransform,...this.previousTransform,...this.previousInverseTransform,...this.size,0,...this.atlasLocation,0]}}class os{index;dataView;constructor(e){this.dataView=new DataView(e),this.index=0}readUint8(){const e=this.dataView.getUint8(this.index);return this.index++,e}readUint32(){const e=this.dataView.getUint32(this.index,!0);return this.index+=4,e}readFloat32(){const e=this.dataView.getFloat32(this.index,!0);return this.index+=4,e}skip(e){this.index+=e}}const cs=e=>0===e;let us=[];const ls=["street-scene","debug-plane","Dragon","monu10","teapot"],hs=e=>{let t=re.create(1/0,1/0,1/0),n=re.create(-1/0,-1/0,-1/0);for(const{AABB:r}of e)t=re.min(r.min,t),n=re.max(r.max,n);return{min:t,max:n}},fs=e=>{const t=hs(e),n=(t.max[0]-t.min[0])*(t.max[1]-t.min[1])*(t.max[2]-t.min[2]);return e.length*n},ds=e=>{const[t,n,r]=e,s=[0,0,0,1],i=[t,0,0,1],a=[0,n,0,1],o=[t,n,0,1],c=[0,0,r,1],u=[t,0,r,1],l=[0,n,r,1],h=[t,n,r,1];let f=[s,i,a,a,i,o].flat(),d=[c,l,u,u,l,h].flat(),m=[a,o,l,l,o,h].flat(),p=[s,c,i,i,c,u].flat(),g=[i,u,o,o,u,h].flat(),_=[s,a,c,c,a,l].flat();return new Float32Array([...f,...d,...m,...p,...g,..._])},ms=async()=>{const e=gs.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}},{binding:2,visibility:GPUShaderStage.FRAGMENT|GPUShaderStage.VERTEX,buffer:{type:"uniform"}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"float",viewDimension:"3d"}},{binding:4,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"read-only-storage"}},{binding:5,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}]}),t=gs.createPipelineLayout({bindGroupLayouts:[e]}),n=gs.createRenderPipeline({layout:t,vertex:{module:gs.createShaderModule({code:`\n        ${Kr}\n        @binding(0) @group(0) var<uniform> modelViewProjectionMatrix : mat4x4f;\n@binding(1) @group(0) var<uniform> modelMatrix : mat4x4f;\n\nstruct VertexOutput {\n  @builtin(position) position : vec4f,\n  @location(0) objectPos : vec3f,\n  @location(1) worldPos : vec3f,\n  @location(2) @interpolate(linear) ndc : vec3f,\n}\n\n@vertex\nfn main(\n  @location(0) objectPos : vec4f,\n) -> VertexOutput {\n  var output : VertexOutput;\n  var clipPosition = modelViewProjectionMatrix * objectPos;\n//  clipPosition.z = -clipPosition.z;\n  output.position = clipPosition;\n  output.worldPos = (modelMatrix * objectPos).xyz;\n  output.objectPos = objectPos.xyz;\n  output.ndc = clipPosition.xyz / clipPosition.w;\n  output.ndc.y = -output.ndc.y;\n  return output;\n}\n`}),entryPoint:"main",buffers:[{arrayStride:16,attributes:[{shaderLocation:0,offset:0,format:"float32x4"}]}]},fragment:{module:gs.createShaderModule({code:`\n        ${Kr}\n        struct BoxIntersectionResult {\n    tNear: f32,\n    tFar: f32,\n    normal: vec3<f32>,\n    isHit: bool,\n}\n\nfn simpleBoxIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n) -> f32 {\n  let m = 1.0/rd; // can precompute if traversing a set of aligned boxes\n  let n = m*ro;   // can precompute if traversing a set of aligned boxes\n  let k = abs(m)*boxSize;\n  let t1 = -n - k;\n  let t2 = -n + k;\n  let tN = max( max( t1.x, t1.y ), t1.z );\n  let tF = min( min( t2.x, t2.y ), t2.z );\n  if( tN>tF || tF<0.0) {\n    return -1.0; // no intersection\n  }\n  return tN;\n}\n\nfn boxIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    result.isHit = false;\n    result.tNear = -1.0;\n    result.tFar = -1.0;\n\n    let offsetRayOrigin = ro - boxSize;\n    let m: vec3<f32> = 1.0 / rd;\n    let n: vec3<f32> = m * offsetRayOrigin;\n    let k: vec3<f32> = abs(m) * boxSize;\n    let t1: vec3<f32> = -n - k;\n    let t2: vec3<f32> = -n + k;\n    let tN: f32 = max(max(t1.x, t1.y), t1.z);\n    let tF: f32 = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) {\n        return result;\n    }\n    // Check if the ray starts inside the volume\n    let insideVolume = tN < 0.0;\n    var normal = select(\n        step(vec3<f32>(tN), t1),\n        step(t2, vec3<f32>(tF)),\n        tN < 0.0,\n    );\n    normal *= -sign(rd);\n    // Check if the intersection is in the correct direction, only if inside the volume\n    if (insideVolume && dot(normal, rd) < 0.0) {\n        return result;\n    }\n    result.tNear = tN;\n    result.tFar = tF;\n    result.normal = normal;\n    result.isHit = true;\n    return result;\n}\n\nfn planeIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    planeNormal: vec3<f32>,\n    planeDistance: f32,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    let denom = dot(planeNormal, rd);\n    if (abs(denom) > 0.0001) {\n        let t = -(dot(planeNormal, ro) + planeDistance) / denom;\n        if (t > 0.0) {\n            result.isHit = true;\n            result.tNear = t;\n            result.tFar = t;\n            result.normal = planeNormal;\n        }\n    }\n    return result;\n}\n\nfn get3x3From4x4(m: mat4x4<f32>) -> mat3x3<f32> {\n    return mat3x3<f32>(\n        m[0].xyz,\n        m[1].xyz,\n        m[2].xyz,\n    );\n}\n\n\nfn intersectOBB(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n    boxOrientation: mat3x3<f32>,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    result.isHit = false;\n    result.tNear = -1.0;\n    result.tFar = -1.0;\n\n    let offsetRayOrigin = ro - boxSize;\n    let m: vec3<f32> = 1.0 / rd;\n    let n: vec3<f32> = m * offsetRayOrigin;\n    let k: vec3<f32> = abs(m) * boxSize;\n    let t1: vec3<f32> = -n - k;\n    let t2: vec3<f32> = -n + k;\n    let tN: f32 = max(max(t1.x, t1.y), t1.z);\n    let tF: f32 = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) {\n        return result;\n    }\n    // Check if the ray starts inside the volume\n    let insideVolume = tN < 0.0;\n    var normal = select(\n        step(vec3<f32>(tN), t1),\n        step(t2, vec3<f32>(tF)),\n        tN < 0.0,\n    );\n    normal *= -sign(rd);\n    // Check if the intersection is in the correct direction, only if inside the volume\n    if (insideVolume && dot(normal, rd) < 0.0) {\n        return result;\n    }\n    result.tNear = tN;\n    result.tFar = tF;\n    result.normal = normal;\n    result.isHit = true;\n    return result;\n}\n        const EPSILON = 0.0001;\nconst MAX_RAY_STEPS = 256;\nconst FAR_PLANE = 10000.0;\nconst NEAR_PLANE = 0.5;\n\n\n// Function to transform a normal vector from object to world space\nfn transformNormal(inverseTransform: mat4x4<f32>, normal: vec3<f32>) -> vec3<f32> {\n    let worldNormal = normalize((vec4<f32>(normal, 0.0) * inverseTransform).xyz);\n    return worldNormal;\n}\n\n// Function to transform an object space position to world space\nfn transformPosition(transform: mat4x4<f32>, position: vec3<f32>) -> vec3<f32> {\n    let worldPosition = (transform * vec4<f32>(position, 1.0)).xyz;\n    return worldPosition;\n}\n\nfn getMaxMipLevel(size: vec3<f32>) -> u32 {\n  return u32(log2(max(size.x, max(size.y, size.z))));\n}\n\nstruct Brick {\n  voxels: array<u32, 16>\n}\nstruct VoxelObject {\n  transform: mat4x4<f32>,\n  inverseTransform: mat4x4<f32>,\n  previousTransform: mat4x4<f32>,\n  previousInverseTransform: mat4x4<f32>,\n  size : vec3<f32>,\n  atlasLocation : vec3<f32>,\n  brickOffset : u32,\n}\n\nstruct RayMarchResult {\n  colour: vec3<f32>,\n  normal: vec3<f32>,\n  objectPos: vec3<f32>,\n  worldPos: vec3<f32>,\n  hit: bool,\n  modelMatrix: mat4x4<f32>,\n  previousModelMatrix: mat4x4<f32>,\n  inverseModelMatrix: mat4x4<f32>,\n  previousInverseModelMatrix: mat4x4<f32>,\n  stepsTaken: i32,\n  isWater: bool,\n  t: f32\n}\n\nfn isInBounds(position: vec3<i32>, size: vec3<i32>) -> bool {\n  return all(position >= vec3(0)) && all(position <= size - vec3(1));\n}\n\nfn getMipLevelFromVoxelSize(voxelSize: vec3<f32>) -> u32 {\n  return u32(log2(max(voxelSize.x, max(voxelSize.y, voxelSize.z))));\n}\n\nfn convert1DTo3D(size: vec3<u32>, index: u32) -> vec3<u32> {\n  return vec3(\n    index % size.x,\n    index / size.y,\n    index / (size.x * size.y)\n  );\n}\n\nfn convert3DTo1D(size: vec3<u32>, position: vec3<u32>) -> u32 {\n  return position.x + position.y * size.x + position.z * (size.x * size.y);\n}\n\n\nfn doesBrickContainVoxels(brick: Brick) -> bool {\n  for(var i = 0; i < 16; i++){\n    if(brick.voxels[i] > 0){\n      return true;\n    }\n  }\n  return false;\n}\n\nfn getBit(value: u32, bitIndex: u32) -> bool {\n  return (value & (1u << bitIndex)) != 0;\n}\n\n// gets bit in 512bit bitmask in a brick\n// bitIndex is the index of the bit in the bitmask, 0-511\nfn getBitInBrick(brick: Brick, bitIndex: u32) -> bool {\n  let maskIndex = bitIndex / 32;\n  let bitIndexInMask = bitIndex % 32;\n  return getBit(brick.voxels[maskIndex], bitIndexInMask);\n}\n\nstruct BrickMarchResult {\n  hit: bool,\n  normal: vec3<f32>,\n  t: f32,\n  stepsTaken: i32\n}\n\n\nfn rayMarchAtMip(voxelObject: VoxelObject, objectRayDirection: vec3<f32>, objectRayOrigin: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n  var output = RayMarchResult();\n  let rayDirSign = sign(objectRayDirection);\n  let atlasLocation = vec3<u32>(voxelObject.atlasLocation);\n  var voxelSize = vec3(f32(1 << mipLevel));\n  var shiftedRayOrigin = objectRayOrigin - objectRayDirection * EPSILON;\n  var objectPos = shiftedRayOrigin;\n  var currentIndex = vec3<i32>(floor(objectPos));\n  var scaledRayOrigin =  objectRayOrigin / voxelSize;\n  var scaledObjectPos = floor(objectPos / voxelSize);\n  var scaledOriginDifference = scaledObjectPos - scaledRayOrigin;\n  var tMax = voxelSize * (rayDirSign * scaledOriginDifference + (rayDirSign * 0.5) + 0.5) / abs(objectRayDirection);\n  let mask = vec3<f32>(tMax.xyz <= min(tMax.yzx, tMax.zxy));\n  var objectNormal = mask * -rayDirSign;\n  var tCurrent = min(tMax.x, min(tMax.y, tMax.z));\n\n  // RAYMARCH\n  for(var i = 0; i < MAX_RAY_STEPS; i++)\n  {\n    output.stepsTaken = i;\n\n    let samplePosition = vec3<u32>(currentIndex) + atlasLocation;\n    let mipSample0 = textureLoad(voxels, samplePosition / vec3((1u << mipLevel)), mipLevel);\n    output.colour = objectPos / vec3<f32>(voxelObject.size);\n\n    if(mipSample0.r > 0.0 && isInBounds(currentIndex, vec3<i32>(voxelObject.size))){\n        output.objectPos = objectPos;\n        output.worldPos = (voxelObject.transform *  vec4(output.objectPos, 1.0)).xyz;\n        output.normal = transformNormal(voxelObject.inverseTransform,vec3<f32>(objectNormal));\n        output.colour = mipSample0.rgb;\n        output.hit = true;\n        output.modelMatrix = voxelObject.transform;\n        output.previousModelMatrix = voxelObject.previousTransform;\n        output.inverseModelMatrix = voxelObject.inverseTransform;\n        output.previousInverseModelMatrix = voxelObject.previousInverseTransform;\n        output.t = tCurrent;\n        return output;\n    }\n\n    var scaledRayOrigin = shiftedRayOrigin / voxelSize;\n    var scaledObjectPos = floor(objectPos / voxelSize);\n    var scaledOriginDifference = scaledObjectPos - scaledRayOrigin;\n    var tMax = voxelSize * (rayDirSign * scaledOriginDifference + (rayDirSign * 0.5) + 0.5) / abs(objectRayDirection);\n    let mask = vec3<f32>(tMax.xyz <= min(tMax.yzx, tMax.zxy));\n\n    tCurrent = min(tMax.x, min(tMax.y, tMax.z));\n    objectPos = objectRayOrigin + objectRayDirection * tCurrent;\n    currentIndex = vec3<i32>(floor(objectPos / voxelSize) * voxelSize);\n    objectNormal = mask * -rayDirSign;\n\n\n    if(!isInBounds(currentIndex, vec3<i32>(voxelObject.size))){\n        break;\n    }\n  }\n  return output;\n}\n\nfn rayMarchTransformed(voxelObject: VoxelObject, rayDirection: vec3<f32>, rayOrigin: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n      var objectRayOrigin = (voxelObject.inverseTransform * vec4<f32>(rayOrigin, 1.0)).xyz;\n      let objectRayDirection = (voxelObject.inverseTransform * vec4<f32>(rayDirection, 0.0)).xyz;\n      return  rayMarchAtMip(voxelObject, objectRayDirection, objectRayOrigin, mipLevel);\n}\n\nconst STACK_LEN: u32 = 32u;\nstruct Stack {\n  arr: array<i32, STACK_LEN>,\n\thead: u32,\n}\n\nfn stack_new() -> Stack {\n    var arr: array<i32, STACK_LEN>;\n    return Stack(arr, 0u);\n}\n\nfn stack_push(stack: ptr<function, Stack>, val: i32) {\n    (*stack).arr[(*stack).head] = val;\n    (*stack).head += 1u;\n}\n\nfn stack_pop(stack: ptr<function, Stack>) -> i32 {\n    (*stack).head -= 1u;\n    return (*stack).arr[(*stack).head];\n}\n\nconst colours = array<vec3<f32>, 6>(\n  vec3<f32>(1.0, 0.0, 0.0),\n  vec3<f32>(0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 1.0),\n  vec3<f32>(1.0, 1.0, 0.0),\n  vec3<f32>(1.0, 0.0, 1.0),\n  vec3<f32>(0.0, 1.0, 1.0)\n);\n\nfn debugColourFromIndex(index: i32) -> vec3<f32> {\n  return colours[index % 6];\n}\n\n        struct ViewProjectionMatrices {\n  viewProjection : mat4x4<f32>,\n  previousViewProjection : mat4x4<f32>,\n  inverseViewProjection : mat4x4<f32>,\n  projection : mat4x4<f32>,\n  inverseProjection: mat4x4<f32>\n};\n\n@group(0) @binding(2) var<uniform> viewProjections : ViewProjectionMatrices;\n@group(0) @binding(3) var voxels : texture_3d<f32>;\n@group(0) @binding(4) var<storage> voxelObject : VoxelObject;\n@group(0) @binding(5) var<uniform> cameraPosition : vec3<f32>;\n@group(0) @binding(6) var depthStore : texture_storage_2d<r32float, write>;\n\n\nconst IDENTITY_MATRIX = mat4x4<f32>(\n  vec4<f32>(1.0, 0.0, 0.0, 0.0),\n  vec4<f32>(0.0, 1.0, 0.0, 0.0),\n  vec4<f32>(0.0, 0.0, 1.0, 0.0),\n  vec4<f32>(0.0, 0.0, 0.0, 1.0)\n);\n\nstruct GBufferOutput {\n  @location(0) albedo : vec4f,\n  @location(1) normal : vec4f,\n  @location(2) worldPosition : vec4f,\n  @location(3) velocity : vec4f,\n//  @location(4) depth : f32,\n  @builtin(frag_depth) depth : f32,\n}\n\nfn getVelocity(rayMarchResult: RayMarchResult, viewProjections: ViewProjectionMatrices) -> vec3<f32> {\n  let vp = viewProjections.viewProjection;\n    let previousVp = viewProjections.previousViewProjection;\n    let modelMatrix = rayMarchResult.modelMatrix;\n    let previousModelMatrix = rayMarchResult.previousModelMatrix;\n\n    // Get current object space position of the current pixel\n    let objectPos = rayMarchResult.objectPos.xyz;\n    let objectClipSpace = vp * modelMatrix * vec4(objectPos.xyz, 1.0);\n    let objectNDC = objectClipSpace.xyz / objectClipSpace.w;\n\n    // Get previous position of the current object space position\n    let previousObjectClipSpace = previousVp * previousModelMatrix * vec4(objectPos.xyz, 1.0);\n    let previousObjectNDC = previousObjectClipSpace.xyz / previousObjectClipSpace.w;\n\n    // Get velocity based on the difference between the current and previous positions\n    var velocity = objectNDC - previousObjectNDC;\n    velocity.y = -velocity.y;\n  return velocity;\n}\n\nfn normaliseValue(min: f32, max: f32, value: f32) -> f32 {\n  return (value - min) / (max - min);\n}\n\n\n@fragment\nfn main(\n\n  @location(0) objectPos : vec3f,\n//   @location(1) worldPos : vec3f,\n    @location(2) @interpolate(linear) ndc : vec3f\n) -> GBufferOutput\n {\n    var output : GBufferOutput;\n    var screenUV = ndc.xy * 0.5 + 0.5;\n    var inverseViewProjection = viewProjections.inverseViewProjection;\n    let rayDirection = calculateRayDirection(screenUV,inverseViewProjection);\n\n    var objectRayOrigin = (voxelObject.inverseTransform * vec4<f32>(cameraPosition, 1.0)).xyz;\n\n    let isInBounds = all(objectRayOrigin >= vec3(0.0)) && all(objectRayOrigin <= voxelObject.size - vec3(1));\n\n    let objectRayDirection = (voxelObject.inverseTransform * vec4<f32>(rayDirection, 0.0)).xyz;\n    var tNear = 0.0;\n    if(!isInBounds){\n      tNear = boxIntersection(objectRayOrigin, objectRayDirection, voxelObject.size * 0.5).tNear - 0.00001;\n    }\n    var worldPos = transformPosition(voxelObject.transform, objectRayOrigin + objectRayDirection * tNear);\n    var result = rayMarchTransformed(voxelObject, rayDirection, worldPos, 0);\n    if(!result.hit){\n      discard;\n      return output;\n    }\n\n\n    output.albedo = vec4(result.colour, 1);\n    output.normal = vec4(result.normal, 1);\n    output.worldPosition = vec4(result.worldPos, 1);\n    output.velocity = vec4(getVelocity(result, viewProjections), 1);\n\n    let raymarchedDistance = length(result.worldPos - cameraPosition);\n\n    let near = 0.1;\n    let far = 10000.0;\n    let linearDepth = normaliseValue(near, far, raymarchedDistance);\n    output.depth = linearDepth;\n    return output;\n}\n        `}),entryPoint:"main",targets:[{format:"rgba8unorm"},{format:"rgba16float"},{format:"rgba32float"},{format:"rgba16float"}]},primitive:{topology:"triangle-list",cullMode:"front"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth32float"}});return{render:({commandEncoder:t,outputTextures:r,transformationMatrixBuffer:s,volumeAtlas:i,viewProjectionMatricesBuffer:a,timestampWrites:o,cameraPositionBuffer:c})=>{const u=us,l=[{view:r.albedoTexture.createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"},{view:r.normalTexture.createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"},{view:r.worldPositionTexture.createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"},{view:r.velocityTexture.createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}],h={view:r.depthTexture.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"},f=gs.createBuffer({size:576*u.length,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),d=gs.createBuffer({size:256*u.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),m=gs.createBuffer({size:256*u.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),p=gs.createBuffer({size:512*u.length,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});let g=[];for(let t=0;t<u.length;t++){const n=gs.createBindGroup({layout:e,entries:[{binding:0,resource:{buffer:d,offset:256*t}},{binding:1,resource:{buffer:m,offset:256*t}},{binding:2,resource:{buffer:a}},{binding:3,resource:i.getAtlasTextureView()},{binding:4,resource:{buffer:p,offset:512*t}},{binding:5,resource:{buffer:c}}]});g.push(n);const r=u[t],s=ve.mul(ve.scale(Ms.projectionMatrix,[-1,1,1]),Ms.viewMatrix),o=new Float32Array(ve.mul(s,r.transform));gs.queue.writeBuffer(d,256*t,o.buffer,o.byteOffset,o.byteLength);const l=new Float32Array(r.transform);gs.queue.writeBuffer(m,256*t,l.buffer,l.byteOffset,l.byteLength);const h=new Float32Array(r.toArray());gs.queue.writeBuffer(p,512*t,h.buffer,h.byteOffset,h.byteLength);const _=new Float32Array(ds(r.size));gs.queue.writeBuffer(f,576*t,_.buffer,_.byteOffset,_.byteLength)}const _=t.beginRenderPass({colorAttachments:l,depthStencilAttachment:h,timestampWrites:o});_.setPipeline(n);for(let e=0;e<u.length;e++){const t=g[e];_.setVertexBuffer(0,f,576*e,576),_.setBindGroup(0,t),_.draw(36)}return _.end(),t.copyTextureToTexture({texture:r.albedoTexture},{texture:r.finalTexture},{width:r.finalTexture.width,height:r.finalTexture.height,depthOrArrayLayers:1}),[t.finish()]},label:"hello triangle"}},ps=new class{maxObjectCount;objectCount;scale;targetScale;translateX;targetTranslateX;rotateY;targetRotateY;sunRotateY;targetSunRotateY;constructor(){this.maxObjectCount=222,this.objectCount=222,this.scale=1,this.translateX=0,this.targetScale=1,this.targetTranslateX=0,this.rotateY=0,this.targetRotateY=0,this.sunRotateY=.6,this.targetSunRotateY=.6}update(){Kt((e=>{const t=this.targetScale-this.scale;this.scale=this.scale+t*e}),{easing:nn({velocity:2e-4*ks})}),Kt((e=>{const t=this.targetTranslateX-this.translateX;this.translateX=this.translateX+t*e}),{easing:nn({velocity:2e-4*ks})}),Kt((e=>{const t=this.targetRotateY-this.rotateY;this.rotateY=this.rotateY+t*e}),{easing:nn({velocity:2e-4*ks})}),Kt((e=>{const t=this.targetSunRotateY-this.sunRotateY;this.sunRotateY=this.sunRotateY+t*e}),{easing:nn({velocity:2e-4*ks})})}};let gs,_s,ys,vs,xs=I.create(4,4),ws=0,bs=ws,ks=0,Ts=0;const Ss=Math.PI/180*90;let Ms=new class extends rn{fieldOfView;near=.5;far=1e4;constructor(e){super({position:e.position,rotation:Fe.fromMat(ve.lookAt(re.create(),e.direction,re.create(0,1,0)))}),this.fieldOfView=e.fieldOfView}get direction(){return re.transformQuat(re.create(0,0,1),this.rotation)}get right(){return re.transformQuat(re.create(1,0,0),this.rotation)}get left(){return re.transformQuat(re.create(-1,0,0),this.rotation)}get up(){return re.transformQuat(re.create(0,1,0),this.rotation)}get down(){return re.transformQuat(re.create(0,-1,0),this.rotation)}get viewMatrix(){const e=this.position;return ve.lookAt(e,re.add(e,this.direction),this.up)}get inverseViewMatrix(){return ve.invert(this.viewMatrix)}get projectionMatrix(){return ve.perspective(this.fieldOfView,xs[0]/xs[1],this.near,this.far)}get inverseProjectionMatrix(){return ve.invert(this.projectionMatrix)}get viewProjectionMatrix(){return ve.mul(this.projectionMatrix,this.viewMatrix)}get inverseViewProjectionMatrix(){return ve.invert(this.viewProjectionMatrix)}}({fieldOfView:Ss,position:re.create(-31,6,-50),direction:re.create(0,0,-.5)});const As=new class{logElement;isMouseDown=!1;constructor(){document.getElementById("reset").addEventListener("click",(e=>{window.dispatchEvent(new CustomEvent("resetcamera")),document.getElementById("captures").innerHTML=""})),document.getElementById("capture").addEventListener("click",(e=>{const t=new Image;t.id=performance.now().toString(),t.src=ys.toDataURL(),document.getElementById("captures").appendChild(t).addEventListener("click",(e=>{e.target,console.log(e.target)}))})),document.addEventListener("wheel",(e=>{Ms.fieldOfView+=.001*e.deltaY,Ms.fieldOfView=Math.max(Math.min(Ms.fieldOfView,2),.1)})),["fov","scale","translate","sun"].forEach((e=>{document.getElementById(e).addEventListener("input",(t=>{const n=t.target;window.dispatchEvent(new CustomEvent(`change${e}`,{detail:n.value}))}))})),this.logElement=document.getElementById("log"),window.addEventListener("changefov",(e=>{Ms.fieldOfView=parseFloat(e.detail)})),window.addEventListener("changetranslate",(e=>{ps.targetTranslateX=.01*parseFloat(e.detail)})),window.addEventListener("changesun",(e=>{ps.targetSunRotateY=parseFloat(e.detail)})),window.addEventListener("changescale",(e=>{ps.targetScale=parseFloat(e.detail)})),window.addEventListener("resetcamera",(()=>{ps.targetTranslateX=0,ps.targetScale=1,ps.targetRotateY=0})),document.getElementById("webgpu-canvas").addEventListener("mousedown",(()=>{this.isMouseDown=!0})),document.getElementById("webgpu-canvas").addEventListener("mouseup",(()=>{this.isMouseDown=!1})),document.getElementById("webgpu-canvas").addEventListener("mouseleave",(()=>{this.isMouseDown=!1})),window.addEventListener("mousemove",(e=>{this.isMouseDown&&(ps.targetRotateY-=.005*e.movementX)}))}log(e){this.logElement.innerHTML=e}},Ps=(()=>{let e={};const t=t=>{const n=e[t];return n?n.reduce(((e,t)=>e+t))/n.length:0};return{addSample:(t,n)=>{e[t]||(e[t]=[]),e[t].push(n)>50&&e[t].shift()},clearEntry:t=>{e[t]&&(e[t]=[0])},toString:()=>Object.keys(e).map((e=>`${e}: ${t(e).toFixed(2)}ms`)).join("\n"),toHTML:()=>Object.keys(e).map((e=>`<div class="debug-row">\n                    <div>\n                        ${e}\n                    </div>\n                   <div>${t(e).toFixed(2)}ms</div>\n                </div>`)).join("\n")}})();let Es,zs,Us;Ps.addSample("frame time",0);let Is=Array.from({length:200}).map((()=>({position:[-80*Math.random(),50*Math.random(),-200*Math.random()],size:4,color:re.normalize(re.create(Math.random(),Math.random(),Math.random()))})));const Cs=(e,i)=>{let a,o,c,u,l,h,f,d,m,p,g,_,y,v,x=ve.create(),w=ve.create();ys=document.getElementById("webgpu-canvas"),ys.style.imageRendering="pixelated",_s=ys.getContext("webgpu"),_s.configure({device:e,format:navigator.gpu.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT}),e.features.has("timestamp-query")&&(y=e.createQuerySet({type:"timestamp",count:2*i.length}),v=e.createBuffer({size:8*y.count,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}));let b=((e,t)=>{let n=[];const r=t.map(((e,t)=>({AABB:e.AABB,objectIndex:t})));let s=0;const i=(e,a)=>{if(0===t.length)return;if(1===e.length)return void(n[a]={leftChildIndex:r.indexOf(e[0]),rightChildIndex:-1,objectCount:1,AABBMax:e[0].AABB.max,AABBMin:e[0].AABB.min});const o=hs(e);let c=-1,u=-1;const{left:l,right:h}=(e=>{let t=1/0,n=-1;const r=Math.floor(e.length/2);for(let s=1;s<e.length;s++){const i=e.slice(0,s),a=e.slice(s),o=fs(i)+fs(a),c=1e3*Math.abs(s-r)+1*o;c<t&&(t=c,n=s)}return{left:e.slice(0,n),right:e.slice(n)}})(e);l.length>0&&(c=++s,i(l,c)),h.length>0&&(u=++s,i(h,u)),n[a]={leftChildIndex:c,rightChildIndex:u,objectCount:e.length,AABBMax:o.max,AABBMin:o.min}},a=performance.now();i(r,0);const o=performance.now();return Ps.addSample("create bvh",o-a),console.log({nodes:n.map((e=>({...e,voxelObject:t[e.leftChildIndex]})))}),((e,t)=>{const r=16*Math.ceil(2.75),s=e.createBuffer({size:t*r,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,mappedAtCreation:!1});return n.forEach(((t,n)=>{const i=n*r,a=new ArrayBuffer(r),o=new DataView(a);o.setInt32(0,t.leftChildIndex,!0),o.setInt32(4,t.rightChildIndex,!0),o.setUint32(8,t.objectCount,!0),o.setFloat32(16,t.AABBMin[0],!0),o.setFloat32(20,t.AABBMin[1],!0),o.setFloat32(24,t.AABBMin[2],!0),o.setFloat32(32,t.AABBMax[0],!0),o.setFloat32(36,t.AABBMax[1],!0),o.setFloat32(40,t.AABBMax[2],!0),e.queue.writeBuffer(s,i,a,0,r)})),s})(e,n.length)})(e,us);const k=()=>{u&&(u=null),a&&(a=null),o&&(o=null),l&&(l=null),c&&(c=null),f&&(f=null);const{clientWidth:e,clientHeight:t}=ys.parentElement,n=I.create(1*e,1*t);xs=I.mulScalar(n,1),ys.width=n[0],ys.height=n[1],ys.style.transform="scale(1)"};(async()=>{h||(h=await Hr(e,"blue-noise-rg.png",{usage:GPUTextureUsage.COPY_SRC}))})(),setInterval((()=>{As.log(Ps.toHTML())}),500);const T=k=>{0===ws&&(ws=k);const S=k-ws;if(ks=S-bs,Ps.addSample("frame time",ks),bs=S,Ts++,(()=>{const t=[...Ms.viewProjectionMatrix,...w,...Ms.inverseViewProjectionMatrix,...x,...Ms.projectionMatrix,...Ms.inverseProjectionMatrix];g?r(g,t):g=s(e,t)})(),(()=>{const t=us;document.getElementById("objectcount").innerHTML=`Objects: ${t.length} / ${us.length} in view`;const n=t.flatMap((e=>e.toArray()));p?r(p,n):(p=s(e,n,"voxel object"),p=e.createBuffer({size:new Float32Array(n).byteLength,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,mappedAtCreation:!1}))})(),!p||!h)return void(Us=requestAnimationFrame(T));(()=>{const e=.005*ks,t=.04*ks;let n=re.zero();sn.pressed.a&&(n=re.add(n,Ms.left)),sn.pressed.d&&(n=re.add(n,Ms.right)),sn.pressed.w&&(n=re.add(n,Ms.direction)),sn.pressed.s&&(n=re.subtract(n,Ms.direction)),sn.pressed.e&&(Ms.targetRotation=Fe.rotateY(Ms.targetRotation,e)),sn.pressed.q&&(Ms.targetRotation=Fe.rotateY(Ms.targetRotation,-e)),sn.pressed[" "]&&(n=re.add(n,Ms.up)),sn.pressed.shift&&(n=re.add(n,Ms.down)),n=re.normalize(n),Ms.targetPosition=re.add(Ms.targetPosition,re.mulScalar(n,t))})(),Ms.update(),ps.update();const M=ve.getTranslation(Ms.inverseViewMatrix);document.getElementById("resolution").innerHTML=xs.join(" x "),d||(d=n([Ts,0,0])),e.queue.writeBuffer(d,4,new Float32Array([ks])),e.queue.writeBuffer(d,0,new Uint32Array([Ts])),e.queue.writeBuffer(d,8,new Float32Array([bs/1e3])),m?t(m,[xs[0],xs[1]]):m=n([xs[0],xs[1]]),(()=>{const e=ve.identity();ve.rotateY(e,ps.sunRotateY,e);const t=re.normalize(re.transformMat4(re.create(0,.5,-1),e));_?r(_,[t[0],t[1],t[2]]):_=n([t[0],t[1],t[2]])})();const A=s(e,M,"camera position");o||(o=e.createTexture({size:[xs[0],xs[1],1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.COPY_SRC})),a||(a=e.createTexture({size:[xs[0],xs[1],1],format:"rgba16float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT})),u||(u=e.createTexture({size:[xs[0],xs[1],1],format:"depth32float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC})),l||(l=e.createTexture({size:[xs[0],xs[1],1],format:"rgba16float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT})),c||(c=e.createTexture({size:[xs[0],xs[1],1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT})),f||(f=e.createTexture({size:[xs[0],xs[1],1],format:"rgba32float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT}));let P=[];Es=vs.getAtlasTextureView(),Es?(i.forEach(((t,n)=>{const{render:r,label:s}=t;if(!1===document.getElementById(`flag-${s}`)?.checked)return;const i=e.createCommandEncoder();let x;e.features.has("timestamp-query")&&i.clearBuffer(v),e.features.has("timestamp-query")&&(x={querySet:y,beginningOfPassWriteIndex:2*n,endOfPassWriteIndex:2*n+1}),r({commandEncoder:i,resolutionBuffer:m,timeBuffer:d,outputTextures:{finalTexture:c,albedoTexture:o,normalTexture:a,depthTexture:u,skyTexture:zs,velocityTexture:l,worldPositionTexture:f},cameraPositionBuffer:A,volumeAtlas:vs,transformationMatrixBuffer:p,viewProjectionMatricesBuffer:g,timestampWrites:x,sunDirectionBuffer:_,blueNoiseTexture:h,bvhBuffer:b,lights:Is}).forEach((e=>{P.push(e)}))})),e.features.has("timestamp-query")&&(t=>{const n=e.createCommandEncoder();n.resolveQuerySet(y,0,y.count,v,0),t.push(n.finish());const r=v.size,s=e.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=e.createCommandEncoder();a.copyBufferToBuffer(v,0,s,0,r);const o=a.finish();e.queue.submit([o]),s.mapAsync(GPUMapMode.READ).then((()=>s.getMappedRange())).then((e=>{const t=new BigInt64Array(e),n=[];t.forEach((e=>{n.push(Number(e)/1e6)})),n.reduce(((e,t,r)=>(r%2==0&&e.push(n[r+1]-t),e)),[]).forEach(((e,t)=>{const n=i[t].label,r=`flag-${n}`,s=document.getElementById(r)?.checked;n&&s?Ps.addSample(n,e):Ps.clearEntry(n)}))}))})(P),e.queue.submit(P),Us=requestAnimationFrame(T),x=Ms.inverseViewProjectionMatrix,w=Ms.viewProjectionMatrix):Us=requestAnimationFrame(T)};k(),window.onresize=k,Us=requestAnimationFrame(T)};(async()=>{if(!navigator.gpu)return void console.error("WebGPU not supported");const e=await navigator.gpu.requestAdapter();if(!gs)try{gs=await e.requestDevice({requiredFeatures:["timestamp-query"],requiredLimits:{maxColorAttachmentBytesPerSample:64}})}catch(t){gs=await e.requestDevice()}console.debug(gs.limits),zs=gs.createTexture({dimension:"2d",size:[768,768,6],format:"rgba8unorm",usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING}),vs=await(async e=>{let t={};const n=e.createCommandEncoder();let r=e.createTexture({size:{width:8,height:8,depthOrArrayLayers:8},...Wr,label:"Volume atlas containing ",mipLevelCount:1});return e.queue.submit([n.finish()]),await e.queue.onSubmittedWorkDone(),{getVolumes:()=>t,addVolume:async(n,s,i)=>{if(t[i])throw new Error(`Error adding volume to atlas: volume with label ${i} already exists`);const{width:a,height:o,depthOrArrayLayers:c}=s,u=Xr(a,8),l=Xr(o,8),h=Xr(c,8);console.debug(`Adding ${i} to atlas`,{width:a,height:o,depthOrArrayLayers:c});const f=r.width+u;if(f>e.limits.maxTextureDimension3D)throw new Error(`Error adding volume to atlas: adding volume would exceed device max texture dimension of ${e.limits.maxTextureDimension3D}`);const d=Math.max(r.height,l),m=Math.max(r.depthOrArrayLayers,h),p=Math.max(s.mipLevelCount,r.mipLevelCount);console.debug(`Expanding atlas texture to [${f}, ${d}, ${m}], mip levels: ${p}`);const g=e.createTexture({size:{width:f,height:d,depthOrArrayLayers:m},mipLevelCount:p,...Wr,label:`${r.label}, ${s.label||"unnamed volume"}`}),_=r.width;n.copyTextureToTexture({texture:r},{texture:g},{width:r.width,height:r.height,depthOrArrayLayers:r.depthOrArrayLayers});for(let e=0;e<Math.min(s.mipLevelCount,g.mipLevelCount);e++){const t=Math.max(1,s.width>>e),r=Math.max(1,s.height>>e),i=Math.max(1,s.depthOrArrayLayers>>e);n.copyTextureToTexture({texture:s,mipLevel:e,origin:{x:0,y:0,z:0}},{texture:g,mipLevel:e,origin:{x:_>>e,y:0,z:0}},{width:t,height:r,depthOrArrayLayers:i})}r=g,t[i]={location:[_,0,0],size:[a,o,c]},e.queue.submit([n.finish()]),await e.queue.onSubmittedWorkDone()},getVolume:e=>t[e],getAtlasTextureView:()=>{if(!r)return null;const e=r.createView();return e.label=r.label,e},dimensions:re.create(r.width,r.height,r.depthOrArrayLayers)}})(gs),await(async(e,t)=>{const n=await fetch("./Tavern.json"),r=(await n.json()).children.filter((e=>ls.includes(e.name))),s=new Set(r.map((e=>e.name))),i=Array.from(s);let a=e.createCommandEncoder();console.time("Load all volumes");{let n=await Promise.all(i.map((t=>(async(e,t,n)=>{console.time(`Fetch ${t}`);const r=await fetch(`./Tavern/${t}.vxm`);console.timeEnd(`Fetch ${t}`);const s=(e=>{console.time("convert vxm");const t=new os(e);let n,r=[],s="",i=[];if(s=String.fromCodePoint(t.readUint8(),t.readUint8(),t.readUint8(),t.readUint8()),"VXMC"!==s&&"VXMA"!==s)throw new Error(`Incorrect magic: ${s}`);if(s[3].charCodeAt(0)>="0".charCodeAt(0)&&s[3].charCodeAt(0)<="9".charCodeAt(0))n=s[3].charCodeAt(0)-"0".charCodeAt(0);else{if(!(s[3].charCodeAt(0)>="A".charCodeAt(0)&&s[3].charCodeAt(0)<="C".charCodeAt(0)))throw new Error("Unsupported version found");n=10+s[3].charCodeAt(0)-"A".charCodeAt(0)}if(n<11||n>12)throw new Error(`Could not load vxm file: Unsupported version found (${n})`);let a=[0,0,0];a[0]=t.readUint32(),a[1]=t.readUint32(),a[2]=t.readUint32();let o=[.5,0,.5];if(o[0]=t.readFloat32(),o[1]=t.readFloat32(),o[2]=t.readFloat32(),t.readUint8()>0){let e=0,n=0;t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),e=t.readUint32(),n=t.readUint32();let r=e*n;t.skip(4*r)}n>=8&&t.skip(16);let c=t.readUint32();for(let e=0;e<c;++e){let e=t.readUint32(),n=t.readUint32();if(e>2048||n>2048)throw new Error("Size of texture exceeds the max allowed value");let r=t.readUint32();t.skip(r);for(let e=0;e<6;++e){let e=t.readUint32();e>262144&&console.warn(`Size of quads exceeds the max allowed value: ${e}`);let n=4*e*20;t.skip(n)}}t.skip(1024),t.skip(1024);let u=t.readUint8();for(let e=0;e<u;++e)t.skip(1024),t.readUint8(),t.readUint8();let l=t.readUint8();for(let e=0;e<l;++e){let n=t.readUint8(),s=t.readUint8(),i=t.readUint8(),a=t.readUint8();a=1===t.readUint8()?2:255,r[e]={r:i,g:s,b:n,a}}let h=1;n>=12&&(h=t.readUint8());let f={min:re.create(9999,9999,9999),max:re.create(0,0,0)};for(let e=0;e<h;++e){let r=0,s=!0,o="";if(n>=12){for(;;){const e=t.readUint8();if(cs(e))break;o=`${o}${String.fromCharCode(e)}`}s=t.readUint8()>0}else o=`Layer ${e}`;for(;;){let e=t.readUint8();if(0===e)break;let n=t.readUint8();if(255!==n)if(n>=l)r+=e;else{for(let t=r;t<r+e;t++){let e=Math.floor(t/(a[1]*a[2])),r=Math.floor(t/a[2]%a[1]),s=Math.floor(t%a[2]);f.min=re.min(f.min,[e,r,s]),f.max=re.max(f.max,[e,r,s]),i.push({x:e,y:r,z:s,c:n})}r+=e}else r+=e}}i=i.map((({x:e,y:t,z:n,c:r})=>({x:e-f.min[0],y:t-f.min[1],z:n-f.min[2],c:r})));const d=re.sub(f.max,f.min);return console.log({bounds:f,trimmedSize:d}),console.timeEnd("convert vxm"),{VOX:i.length,SIZE:[d[0]+1,d[1]+1,d[2]+1],XYZI:i,RGBA:r}})(await r.arrayBuffer());console.time(`Create texture from voxels for ${t}`);let i=await(async(e,t)=>{const n=e.createTexture({size:{width:t.SIZE[0],height:t.SIZE[1],depthOrArrayLayers:t.SIZE[2]},format:$r,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT,dimension:"2d",mipLevelCount:3}),r=n.width*n.height*n.depthOrArrayLayers,s=e.createBuffer({size:4*r*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.STORAGE}),i=e.createBuffer({size:256*t.SIZE[2],usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.UNIFORM}),a=Array.from({length:t.SIZE[2]},((e,t)=>t));for(let t=0;t<a.length;t++)e.queue.writeBuffer(i,256*t,new Uint32Array([a[t]]).buffer);for(let n=0;n<t.XYZI.length;n++){const{x:r,y:i,z:a,c:u}=t.XYZI[n],l=(o=t.SIZE,(c=[r,i,a])[0]+c[1]*o[0]+c[2]*(o[0]*o[1]));e.queue.writeBuffer(s,16*l,new Uint32Array([r,i,a,u]).buffer)}var o,c;const u=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"storage"}}]}),l=e.createRenderPipeline({layout:e.createPipelineLayout({bindGroupLayouts:[u]}),vertex:{module:e.createShaderModule({code:"\n          struct VertexOutput {\n            @builtin(position) Position : vec4<f32>,\n          }\n          \n          @vertex\n          fn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n            const pos = array(\n              vec2( 1.0,  1.0),\n              vec2( 1.0, -1.0),\n              vec2(-1.0, -1.0),\n              vec2( 1.0,  1.0),\n              vec2(-1.0, -1.0),\n              vec2(-1.0,  1.0),\n            );\n            var output : VertexOutput;\n            output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n            return output;\n          }"}),entryPoint:"vertex_main"},fragment:{module:e.createShaderModule({code:"\n          @group(0) @binding(0) var<uniform> zIndex: u32;\n          @group(0) @binding(1) var<storage, read_write> voxelBuffer: array<vec4<u32>>;\n          \n          override sizeX: u32;\n          override sizeY: u32;\n          override sizeZ: u32;\n           \n          fn convert3DTo1D(size: vec3<u32>, position: vec3<u32>) -> u32 {\n            return position.x + position.y * size.x + position.z * (size.x * size.y);\n          }\n          \n          @fragment\n          fn fragment_main(@builtin(position) position : vec4<f32>) -> @location(0) vec4<f32> { \n            let voxelPosition = vec3(position.xy, f32(zIndex));\n            let voxelIndex = convert3DTo1D(vec3<u32>(sizeX, sizeY, sizeZ), vec3<u32>(voxelPosition));\n            let voxel = voxelBuffer[voxelIndex];\n            let normalisedPaletteIndex = f32(voxel.a) / 255.0;\n            return vec4(f32(voxel.a),0,0,0);\n          }\n        "}),entryPoint:"fragment_main",targets:[{format:$r}],constants:{sizeX:t.SIZE[0],sizeY:t.SIZE[1],sizeZ:t.SIZE[2]}}}),h=e.createCommandEncoder();for(let t=0;t<n.depthOrArrayLayers;t++){const r=e.createBindGroup({label:"create-texture-from-voxels",layout:u,entries:[{binding:0,resource:{buffer:i,offset:256*t,size:4}},{binding:1,resource:{buffer:s}}]}),a=h.beginRenderPass({colorAttachments:[{view:n.createView({baseArrayLayer:t,arrayLayerCount:1,mipLevelCount:1,dimension:"2d"}),loadOp:"clear",clearValue:[0,0,0,0],storeOp:"store"}]});a.setPipeline(l),a.setBindGroup(0,r),a.draw(6,n.depthOrArrayLayers),a.end()}return e.queue.submit([h.finish()]),await e.queue.onSubmittedWorkDone(),n})(n,s);return console.timeEnd(`Create texture from voxels for ${t}`),{name:t,texture:i}})(0,t,e))));for(const{name:r,texture:s}of n)console.time(`Add volume for ${r}`),await t.addVolume(a,s,r),a=e.createCommandEncoder(),console.timeEnd(`Add volume for ${r}`)}console.timeEnd("Load all volumes");const o=t.getVolumes();let c=[];for(const e of r){const t=o[e.name];if(!t)return void console.warn(`Volume not found for child ${e.name}, skipping...`);const n=ve.identity();"Candle"===e.name&&c.push(e.position),ve.translate(n,e.position,n),ve.scale(n,e.scale,n),ve.multiply(n,ve.fromQuat(e.rotation),n),us.push(new as(n,t.size,t.location,e.name))}console.log({volumes:o}),console.debug(`Tavern created with ${us.length} items`)})(gs,vs);const t=[ms(),Jr(),an(gs)],n=await Promise.all(t);Cs(gs,await Promise.all(n)),document.getElementById("flags").innerHTML=n.reduce(((e,t)=>{if(!t.label)return e;const n=`flag-${t.label}`;return`${e}<div class="debug-row">\n                    <label for="${n}">\n                        ${t.label}\n                    </label>\n                    <div>\n                        <input id="${n}" type="checkbox" checked>\n                   </div>\n                </div>`}),"")})()})();