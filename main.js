/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e,t,n,r,i={2767:(e,t,n)=>{n.d(t,{t:()=>s,E:()=>a});class r{setAnimation(e){this.animation=e,null==e||e.finished.then((()=>this.clearAnimation())).catch((()=>{}))}clearAnimation(){this.animation=this.generator=void 0}}const i=new WeakMap;function s(e){return i.has(e)||i.set(e,{transforms:[],values:new Map}),i.get(e)}function a(e,t){return e.has(t)||e.set(t,new r),e.get(t)}},169:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(1646);function i(e){return r.V[e]&&(e=r.V[e]),(0,r.Fd)(e)?(0,r.tT)(e):e}},8958:(e,t,n)=>{n.d(t,{r:()=>s});var r=n(7204),i=n(7652);function s(e,t){var n;let s=(null==t?void 0:t.toDefaultUnit)||r.p;const a=e[e.length-1];if((0,i.K)(a)){const e=(null===(n=a.match(/(-?[\d.]+)([a-z%]*)/))||void 0===n?void 0:n[2])||"";e&&(s=t=>t+e)}return s}},1646:(e,t,n)=>{n.d(t,{tf:()=>m,tT:()=>c,Fd:()=>p,V:()=>a,PU:()=>u});var r=n(7204),i=n(2767);const s=["","X","Y","Z"],a={x:"translateX",y:"translateY",z:"translateZ"},o={syntax:"<angle>",initialValue:"0deg",toDefaultUnit:e=>e+"deg"},l={translate:{syntax:"<length-percentage>",initialValue:"0px",toDefaultUnit:e=>e+"px"},rotate:o,scale:{syntax:"<number>",initialValue:1,toDefaultUnit:r.p},skew:o},u=new Map,c=e=>`--motion-${e}`,h=["x","y","z"];["translate","scale","rotate","skew"].forEach((e=>{s.forEach((t=>{h.push(e+t),u.set(c(e+t),l[e])}))}));const d=(e,t)=>h.indexOf(e)-h.indexOf(t),f=new Set(h),p=e=>f.has(e),m=(e,t)=>{a[t]&&(t=a[t]);const{transforms:n}=(0,i.t)(e);var r,s;s=t,-1===(r=n).indexOf(s)&&r.push(s),e.style.transform=g(n)},g=e=>e.sort(d).reduce(v,"").trim(),v=(e,t)=>`${e} ${t}(var(${c(t)}))`},8335:(e,t,n)=>{n.d(t,{i:()=>f});var r=n(1955);function i(e,t,n){const r=Math.max(t-5,0);return i=n-e(r),(s=t-r)?i*(1e3/s):0;var i,s}var s=n(7204);var a=n(6864),o=n(7652),l=n(8958),u=n(1646),c=n(169);function h(e){return(0,a.E)(e)&&!isNaN(e)}function d(e){return(0,o.K)(e)?parseFloat(e):e}const f=function(e){const t=new WeakMap;return(e={})=>{const n=new Map,a=(t=0,s=100,a=0,o=!1)=>{const l=`${t}-${s}-${a}-${o}`;return n.has(l)||n.set(l,(({from:e=0,velocity:t=0,power:n=.8,decay:s=.325,bounceDamping:a,bounceStiffness:o,changeTarget:l,min:u,max:c,restDistance:h=.5,restSpeed:d})=>{s=r.k.ms(s);const f={hasReachedTarget:!1,done:!1,current:e,target:e},p=e=>void 0===u?c:void 0===c||Math.abs(u-e)<Math.abs(c-e)?u:c;let m=n*t;const g=e+m,v=void 0===l?g:l(g);f.target=v,v!==g&&(m=v-e);const x=e=>-m*Math.exp(-e/s),y=e=>v+x(e),_=e=>{const t=x(e),n=y(e);f.done=Math.abs(t)<=h,f.current=f.done?v:n};let b,w;const k=e=>{var t;t=f.current,(void 0!==u&&t<u||void 0!==c&&t>c)&&(b=e,w=(({stiffness:e=100,damping:t=10,mass:n=1,from:s=0,to:a=1,velocity:o=0,restSpeed:l,restDistance:u}={})=>{o=o?r.k.s(o):0;const c={done:!1,hasReachedTarget:!1,current:s,target:a},h=a-s,d=Math.sqrt(e/n)/1e3,f=((e=100,t=10,n=1)=>t/(2*Math.sqrt(e*n)))(e,t,n),p=Math.abs(h)<5;let m;if(l||(l=p?.01:2),u||(u=p?.005:.5),f<1){const e=d*Math.sqrt(1-f*f);m=t=>a-Math.exp(-f*d*t)*((f*d*h-o)/e*Math.sin(e*t)+h*Math.cos(e*t))}else m=e=>a-Math.exp(-d*e)*(h+(d*h-o)*e);return e=>{c.current=m(e);const t=0===e?o:i(m,e,c.current),n=Math.abs(t)<=l,r=Math.abs(a-c.current)<=u;var h,d,f;return c.done=n&&r,c.hasReachedTarget=(h=s,d=a,f=c.current,h<d&&f>=d||h>d&&f<=d),c}})({from:f.current,to:p(f.current),velocity:i(y,e,f.current),damping:a,stiffness:o,restDistance:h,restSpeed:d}))};return k(0),e=>{let t=!1;return w||void 0!==b||(t=!0,_(e),k(e)),void 0!==b&&e>b?(f.hasReachedTarget=!0,w(e-b)):(f.hasReachedTarget=!1,!t&&_(e),f)}})(Object.assign({from:t,to:s,velocity:a},e))),n.get(l)},o=(e,n)=>(t.has(e)||t.set(e,function(e,t=s.p){let n,r=10,i=e(0);const a=[t(i.current)];for(;!i.done&&r<1e4;)i=e(r),a.push(t(i.done?i.target:i.current)),void 0===n&&i.hasReachedTarget&&(n=r),r+=10;const o=r-10;return 1===a.length&&a.push(i.current),{keyframes:a,duration:o/1e3,overshootDuration:(null!=n?n:o)/1e3}}(e,n)),t.get(e));return{createAnimation:(e,t=!0,n,r,f)=>{let p,m,g,v=0,x=s.p;const y=e.length;if(t)if(x=(0,l.r)(e,r?u.PU.get((0,c.Z)(r)):void 0),g=d(e[y-1]),y>1&&null!==e[0])m=d(e[0]);else{const e=null==f?void 0:f.generator;if(e){const{animation:t,generatorStartTime:n}=f,r=(null==t?void 0:t.startTime)||n||0,s=(null==t?void 0:t.currentTime)||performance.now()-r,a=e(s).current;m=a,v=i((t=>e(t).current),s,a)}else n&&(m=d(n()))}if(h(m)&&h(g)){const e=a(m,g,v,null==r?void 0:r.includes("scale"));p=Object.assign(Object.assign({},o(e,x)),{easing:"linear"}),f&&(f.generator=e,f.generatorStartTime=performance.now())}return p||(p={easing:"ease",duration:o(a(0,100)).overshootDuration}),p}}}}()},6864:(e,t,n)=>{n.d(t,{E:()=>r});const r=e=>"number"==typeof e},7652:(e,t,n)=>{n.d(t,{K:()=>r});const r=e=>"string"==typeof e},7204:(e,t,n)=>{n.d(t,{l:()=>r,p:()=>i});const r=()=>{},i=e=>e},1955:(e,t,n)=>{n.d(t,{k:()=>r});const r={ms:e=>1e3*e,s:e=>e/1e3}},7064:(e,t,n)=>{n.d(t,{i:()=>X});const r={duration:.3,delay:0,endDelay:0,repeat:0,easing:"ease"};var i=n(1955),s=n(7204);function a(e,t=!0){if(e&&"finished"!==e.playState)try{e.stop?e.stop():(t&&e.commitStyles(),e.cancel())}catch(e){}}const o=e=>e(),l=(e,t,n=r.duration)=>new Proxy({animations:e.map(o).filter(Boolean),duration:n,options:t},u),u={get:(e,t)=>{const n=e.animations[0];switch(t){case"duration":return e.duration;case"currentTime":return i.k.s((null==n?void 0:n[t])||0);case"playbackRate":case"playState":return null==n?void 0:n[t];case"finished":return e.finished||(e.finished=Promise.all(e.animations.map(c)).catch(s.l)),e.finished;case"stop":return()=>{e.animations.forEach((e=>a(e)))};case"forEachNative":return t=>{e.animations.forEach((n=>t(n,e)))};default:return void 0===(null==n?void 0:n[t])?void 0:()=>e.animations.forEach((e=>e[t]()))}},set:(e,t,n)=>{switch(t){case"currentTime":n=i.k.ms(n);case"playbackRate":for(let r=0;r<e.animations.length;r++)e.animations[r][t]=n;return!0}return!1}},c=e=>e.finished,h=e=>"object"==typeof e&&Boolean(e.createAnimation);var d=n(6864);const f=e=>Array.isArray(e)&&!(0,d.E)(e[0]),p=(e,t,n)=>-n*e+n*t+e,m=(e,t,n)=>t-e==0?1:(n-e)/(t-e);function g(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const i=m(0,t,r);e.push(p(n,1,i))}}const v=(e,t,n)=>Math.min(Math.max(n,e),t);const x=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e,y=1e-7,_=12;function b(e,t,n,r){if(e===t&&n===r)return s.p;return i=>0===i||1===i?i:x(function(e,t,n,r,i){let s,a,o=0;do{a=t+(n-t)/2,s=x(a,r,i)-e,s>0?n=a:t=a}while(Math.abs(s)>y&&++o<_);return a}(i,0,1,e,n),t,r)}const w=e=>"function"==typeof e,k=e=>Array.isArray(e)&&(0,d.E)(e[0]),A={ease:b(.25,.1,.25,1),"ease-in":b(.42,0,1,1),"ease-in-out":b(.42,0,.58,1),"ease-out":b(0,0,.58,1)},T=/\((.*?)\)/;function S(e){if(w(e))return e;if(k(e))return b(...e);if(A[e])return A[e];if(e.startsWith("steps")){const t=T.exec(e);if(t){const e=t[1].split(",");return((e,t="end")=>n=>{const r=(n="end"===t?Math.min(n,.999):Math.max(n,.001))*e,i="end"===t?Math.floor(r):Math.ceil(r);return v(0,1,i/e)})(parseFloat(e[0]),e[1].trim())}}return s.p}class P{constructor(e,t=[0,1],{easing:n,duration:i=r.duration,delay:a=r.delay,endDelay:o=r.endDelay,repeat:l=r.repeat,offset:u,direction:c="normal",autoplay:d=!0}={}){if(this.startTime=null,this.rate=1,this.t=0,this.cancelTimestamp=null,this.easing=s.p,this.duration=0,this.totalDuration=0,this.repeat=0,this.playState="idle",this.finished=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),n=n||r.easing,h(n)){const e=n.createAnimation(t);n=e.easing,t=e.keyframes||t,i=e.duration||i}this.repeat=l,this.easing=f(n)?s.p:S(n),this.updateDuration(i);const x=function(e,t=function(e){const t=[0];return g(t,e-1),t}(e.length),n=s.p){const r=e.length,i=r-t.length;return i>0&&g(t,i),i=>{let s=0;for(;s<r-2&&!(i<t[s+1]);s++);let a=v(0,1,m(t[s],t[s+1],i));const o=function(e,t){return f(e)?e[((e,t,n)=>{const r=t-e;return((n-e)%r+r)%r+e})(0,e.length,t)]:e}(n,s);return a=o(a),p(e[s],e[s+1],a)}}(t,u,f(n)?n.map(S):s.p);this.tick=t=>{var n;let r=0;r=void 0!==this.pauseTime?this.pauseTime:(t-this.startTime)*this.rate,this.t=r,r/=1e3,r=Math.max(r-a,0),"finished"===this.playState&&void 0===this.pauseTime&&(r=this.totalDuration);const i=r/this.duration;let s=Math.floor(i),l=i%1;!l&&i>=1&&(l=1),1===l&&s--;const u=s%2;("reverse"===c||"alternate"===c&&u||"alternate-reverse"===c&&!u)&&(l=1-l);const h=r>=this.totalDuration?1:Math.min(l,1),d=x(this.easing(h));e(d),void 0===this.pauseTime&&("finished"===this.playState||r>=this.totalDuration+o)?(this.playState="finished",null===(n=this.resolve)||void 0===n||n.call(this,d)):"idle"!==this.playState&&(this.frameRequestId=requestAnimationFrame(this.tick))},d&&this.play()}play(){const e=performance.now();this.playState="running",void 0!==this.pauseTime?this.startTime=e-this.pauseTime:this.startTime||(this.startTime=e),this.cancelTimestamp=this.startTime,this.pauseTime=void 0,this.frameRequestId=requestAnimationFrame(this.tick)}pause(){this.playState="paused",this.pauseTime=this.t}finish(){this.playState="finished",this.tick(0)}stop(){var e;this.playState="idle",void 0!==this.frameRequestId&&cancelAnimationFrame(this.frameRequestId),null===(e=this.reject)||void 0===e||e.call(this,!1)}cancel(){this.stop(),this.tick(this.cancelTimestamp)}reverse(){this.rate*=-1}commitStyles(){}updateDuration(e){this.duration=e,this.totalDuration=e*(this.repeat+1)}get currentTime(){return this.t}set currentTime(e){void 0!==this.pauseTime||0===this.rate?this.pauseTime=e:this.startTime=performance.now()-e/this.rate}get playbackRate(){return this.rate}set playbackRate(e){this.rate=e}}var M=n(2767),E=n(1646);const O=e=>e.startsWith("--"),I=new Set,U=(e,t)=>document.createElement("div").animate(e,t),C={cssRegisterProperty:()=>"undefined"!=typeof CSS&&Object.hasOwnProperty.call(CSS,"registerProperty"),waapi:()=>Object.hasOwnProperty.call(Element.prototype,"animate"),partialKeyframes:()=>{try{U({opacity:[1]})}catch(e){return!1}return!0},finished:()=>Boolean(U({opacity:[0,1]},{duration:.001}).finished),linearEasing:()=>{try{U({opacity:0},{easing:"linear(0, 1)"})}catch(e){return!1}return!0}},B={},z={};for(const e in C)z[e]=()=>(void 0===B[e]&&(B[e]=C[e]()),B[e]);const R=(e,t)=>w(e)?z.linearEasing()?`linear(${((e,t)=>{let n="";const r=Math.round(t/.015);for(let t=0;t<r;t++)n+=e(m(0,r-1,t))+", ";return n.substring(0,n.length-2)})(e,t)})`:r.easing:k(e)?D(e):e,D=([e,t,n,r])=>`cubic-bezier(${e}, ${t}, ${n}, ${r})`;var j=n(169);const L=(e,t)=>{t=(0,j.Z)(t);let n=O(t)?e.style.getPropertyValue(t):getComputedStyle(e)[t];if(!n&&0!==n){const e=E.PU.get(t);e&&(n=e.initialValue)}return n},V=(e,t,n)=>{t=(0,j.Z)(t),O(t)?e.style.setProperty(t,n):e.style[t]=n};var N=n(8958);function G(e,t,n,o={},l){const u=window.__MOTION_DEV_TOOLS_RECORD,c=!1!==o.record&&u;let p,{duration:m=r.duration,delay:g=r.delay,endDelay:v=r.endDelay,repeat:x=r.repeat,easing:y=r.easing,persist:_=!1,direction:b,offset:k,allowWebkitAcceleration:A=!1,autoplay:T=!0}=o;const S=(0,M.t)(e),P=(0,E.Fd)(t);let U=z.waapi();P&&(0,E.tf)(e,t);const C=(0,j.Z)(t),B=(0,M.E)(S.values,C),D=E.PU.get(C);return a(B.animation,!(h(y)&&B.generator)&&!1!==o.record),()=>{const r=()=>{var t,n;return null!==(n=null!==(t=L(e,C))&&void 0!==t?t:null==D?void 0:D.initialValue)&&void 0!==n?n:0};let a=function(e,t){for(let n=0;n<e.length;n++)null===e[n]&&(e[n]=n?e[n-1]:t());return e}((e=>Array.isArray(e)?e:[e])(n),r);const S=(0,N.r)(a,D);if(h(y)){const e=y.createAnimation(a,"opacity"!==t,r,C,B);y=e.easing,a=e.keyframes||a,m=e.duration||m}if(O(C)&&(z.cssRegisterProperty()?function(e){if(!I.has(e)){I.add(e);try{const{syntax:t,initialValue:n}=E.PU.has(e)?E.PU.get(e):{};CSS.registerProperty({name:e,inherits:!1,syntax:t,initialValue:n})}catch(e){}}}(C):U=!1),P&&!z.linearEasing()&&(w(y)||f(y)&&y.some(w))&&(U=!1),U){D&&(a=a.map((e=>(0,d.E)(e)?D.toDefaultUnit(e):e))),1!==a.length||z.partialKeyframes()&&!c||a.unshift(r());const t={delay:i.k.ms(g),duration:i.k.ms(m),endDelay:i.k.ms(v),easing:f(y)?void 0:R(y,m),direction:b,iterations:x+1,fill:"both"};p=e.animate({[C]:a,offset:k,easing:f(y)?y.map((e=>R(e,m))):void 0},t),p.finished||(p.finished=new Promise(((e,t)=>{p.onfinish=e,p.oncancel=t})));const n=a[a.length-1];p.finished.then((()=>{_||(V(e,C,n),p.cancel())})).catch(s.l),A||(p.playbackRate=1.000001)}else if(l&&P)a=a.map((e=>"string"==typeof e?parseFloat(e):e)),1===a.length&&a.unshift(parseFloat(r())),p=new l((t=>{V(e,C,S?S(t):t)}),a,Object.assign(Object.assign({},o),{duration:m,easing:y}));else{const t=a[a.length-1];V(e,C,D&&(0,d.E)(t)?D.toDefaultUnit(t):t)}return c&&u(e,t,a,{duration:m,delay:g,easing:y,repeat:x,offset:k},"motion-one"),B.setAnimation(p),p&&!T&&p.pause(),p}}const F=(e,t)=>e[t]?Object.assign(Object.assign({},e),e[t]):Object.assign({},e);function $(e,t,n){return w(e)?e(t,n):e}const q=(Y=P,function(e,t,n={}){const r=(e=function(e,t){return"string"==typeof e?e=document.querySelectorAll(e):e instanceof Element&&(e=[e]),Array.from(e||[])}(e)).length;Boolean(r),Boolean(t);const i=[];for(let s=0;s<r;s++){const a=e[s];for(const e in t){const o=F(n,e);o.delay=$(o.delay,s,r);const l=G(a,e,t[e],o,Y);i.push(l)}}return l(i,n,n.duration)});var Y;function W(e,t={}){return l([()=>{const n=new P(e,[0,1],t);return n.finished.catch((()=>{})),n}],t,t.duration)}function X(e,t,n){return(w(e)?W:q)(e,t,n)}},4206:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{Er:()=>f,O0:()=>h,sm:()=>d});var i=n(4404),s=n(6300),a=n(7064),o=n(8335),l=n(1859),u=e([l]);l=(u.then?(await u)():u)[0];var c=function(e,t,n,r){var i,s=arguments.length,a=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(i=e[o])&&(a=(s<3?i(a):s>3?i(t,n,a):i(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a};let h=class{value;target;constructor(e){this.value=e,this.target=e}update(){(0,a.i)((e=>{this.value=s.eR.lerp(this.value,this.target,e)}),{easing:(0,o.i)({velocity:2e-4*l.Eh})})}};h=c([i.b.register],h);let d=class{value;target;constructor(e){this.value=e,this.target=e}update(){(0,a.i)((e=>{this.value=this.value+(this.target-this.value)*e}),{easing:(0,o.i)({velocity:2e-4*l.Eh})})}};d=c([i.b.register],d);let f=class{value;target;constructor(e){this.value=e,this.target=e}update(){(0,a.i)((e=>{this.value=s.Yu.slerp(this.value,this.target,e)}),{easing:(0,o.i)({velocity:2e-4*l.Eh})})}};f=c([i.b.register],f),r()}catch(e){r(e)}}))},9164:(e,t,n)=>{n.d(t,{M:()=>s,p:()=>i});var r=n(7883);const i=(e,t)=>new((0,r.d7)(`${t.label}-copy`,t.format,t.usage))(e,t.width,t.height),s=(e,t,n)=>{if(t.width!==n.width||t.height!==n.height)throw new Error("Source and destination textures must have the same dimensions");e.copyTextureToTexture({texture:t.texture},{texture:n.texture},{width:t.texture.width,height:t.texture.height,depthOrArrayLayers:1})}},5e3:(e,t,n)=>{n.d(t,{D:()=>i});var r=n(6921);const i=e=>e.createTexture({label:"sky texture",dimension:"2d",size:[640,640,6],format:r.NB,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING})},7883:(e,t,n)=>{n.d(t,{l1:()=>l,VC:()=>c,$x:()=>u,fu:()=>f,fp:()=>h,Hi:()=>d,d7:()=>o});const r=Symbol(),i=e=>new Proxy(e,{construct:(e,t,n)=>e.prototype!==n.prototype?Reflect.construct(e,t,n):(e[r]||(e[r]=Reflect.construct(e,t,n)),e[r])});var s=n(6921);const a=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT,o=(e,t,n=a)=>{let r=class{#e;#t;#n;#r;#i=t;#s=n;#a=e;constructor(r,i,s){this.#e=r.createTexture({label:e,size:[i,s,1],format:t,usage:n}),this.#t=this.#e.createView({label:e}),this.#n=i,this.#r=s}get texture(){return this.#e}get view(){return this.#t}get width(){return this.#n}get height(){return this.#r}get format(){return this.#i}get usage(){return this.#s}get label(){return this.#a}};return r=function(e,t,n,r){var i,s=arguments.length,a=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(i=e[o])&&(a=(s<3?i(a):s>3?i(t,n,a):i(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a}([i],r),r},l=o("albedo","rgba8unorm"),u=o("normal","rgba16float"),c=o("depth",s.g7,GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.COPY_DST),h=o("velocity","rgba16float"),d=o("world position","rgba32float"),f=o("output",s.mt)},578:(e,t,n)=>{n.d(t,{D:()=>r});const r=async()=>{const e=await navigator.gpu.requestAdapter();let t;console.log(e);try{t=await e.requestDevice({requiredFeatures:["timestamp-query"],requiredLimits:{maxColorAttachmentBytesPerSample:64}})}catch(n){console.warn("Timestamp query or 64 byte colour attachment not supported, falling back"),t=await e.requestDevice()}return t}},4916:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{n:()=>l});var i=n(1859),s=e([i]);let a;i=(s.then?(await s)():s)[0];let o=!1;const l=async(e,t,n)=>{const r=n.size;a||(a=i.jO.createBuffer({size:r,label:"gpu read buffer",usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}));const s=i.jO.createCommandEncoder();if(o)return;o=!0,s.resolveQuerySet(t,0,t.count,n,0),s.copyBufferToBuffer(n,0,a,0,r),i.jO.queue.submit([s.finish()]),await i.jO.queue.onSubmittedWorkDone(),await a.mapAsync(GPUMapMode.READ).finally((()=>{o=!1}));const l=a.getMappedRange(),u=new BigInt64Array(l),c=[];u.forEach((e=>{c.push(Number(e)/1e6)})),c.reduce(((e,t,n)=>(n%2==0&&e.push(c[n+1]-t),e)),[]).forEach(((t,n)=>{i.Lz.addSample(e[n],t)})),a.unmap()};r()}catch(e){r(e)}}))},1859:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{Eh:()=>B,Lz:()=>j,PM:()=>O,UI:()=>R,jO:()=>S,mL:()=>T,sZ:()=>P});var i=n(3532),s=n(2518),a=n(4417),o=n(60),l=n(6300),u=n(6371),c=n(2782),h=n(6273),d=n(596),f=n(6677),p=n(93),m=n(8600),g=n(4404),v=n(7883),x=n(7684),y=n(522),_=n(1100),b=n(4916),w=n(5e3),k=n(578),A=e([i,s,a,o,u,c,p,x,y,b]);[i,s,a,o,u,c,p,x,y,b]=A.then?(await A)():A;const T=new c.f;let S,P,M,E,O=l.Zc.create(4,4),I=1,U=0,C=U,B=0,z=0,R=new a.i({fieldOfView:Math.PI/180*90,position:l.eR.create(-31,6,-50),direction:l.eR.create(0,0,-.5)});const D=new o.A,j=(0,f.v)();let L,V;j.addSample("frame time",0);let N=Array.from({length:200}).map((()=>({position:[-80*Math.random(),50*Math.random(),-200*Math.random()],size:4,color:l.eR.normalize(l.eR.create(Math.random(),Math.random(),Math.random()))})));N=[{position:[-43.8,5.5,-36],size:2.2,color:l.eR.create(800,20,20)},{position:[-36,5.5,-36],size:2.2,color:l.eR.create(20,800,20)},{position:[-25,5.5,-36],size:2.2,color:l.eR.create(20,20,800)}];const G=(e,t)=>{let n,r,s,a,o,u,c,d,f,x,y,w,k,A,S;M=document.getElementById("webgpu-canvas"),M.style.imageRendering="pixelated",P=M.getContext("webgpu"),P.configure({device:e,format:navigator.gpu.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT});let G,F,$=l.pB.create();const q=e.createSampler({magFilter:"linear",minFilter:"linear"}),Y=e.createSampler({magFilter:"nearest",minFilter:"nearest"});e.features.has("timestamp-query")&&(G=e.createQuerySet({type:"timestamp",count:100}),F=e.createBuffer({label:"timestamp query",size:8*G.count,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST})),(async()=>{const t=await(0,h.$L)(e,"blue-noise-rg.png",{usage:GPUTextureUsage.COPY_SRC});c=t.createView()})(),S=new m.f(e,p.j);const W=(0,i.nr)(e,[0,0,0,0],"camera position");setInterval((()=>{D.log(j.getAverages())}),500);const X=h=>{const m=e.createCommandEncoder();0===U&&(U=h),m.pushDebugGroup("frame");const P=h-U;if(B=P-C,j.addSample("frame time",B),C=P,z++,(()=>{const t=(0,_.i)(z,O[0],O[1],R.fieldOfView,O[0]/O[1],.1),n=(0,_.Z)(R.projectionMatrix,t),r=l.pB.mul(n,R.viewMatrix);k=new Float32Array([...r,...$,...l.pB.invert(r),...l.pB.invert($),...n,...l.pB.invert(n)]),y||(y=e.createBuffer({size:k.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:"view matrices buffer"})),e.queue.writeBuffer(y,0,k.buffer,0,k.length*Float32Array.BYTES_PER_ELEMENT);const i=l.pB.mul(R.inverseProjectionMatrix,r),s=l.pB.invert(i);A=new Float32Array(l.pB.getTranslation(s)),e.queue.writeBuffer(W,0,A.buffer,0,A.length*Float32Array.BYTES_PER_ELEMENT),$=r})(),(()=>{const t=p.j.flatMap((e=>e.toArray()));x?(0,i.bV)(x,t):(x=(0,i.nr)(e,t,"voxel object"),x=e.createBuffer({size:new Float32Array(t).byteLength,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,mappedAtCreation:!1,label:"voxel objects buffer"}))})(),!x||!c)return void requestAnimationFrame(X);if(g.b.updateAll(z),S.update(p.j),d||(d=(0,i.ff)([z,0,0],"time buffer")),e.queue.writeBuffer(d,4,new Float32Array([B])),e.queue.writeBuffer(d,0,new Uint32Array([z])),e.queue.writeBuffer(d,8,new Float32Array([C/1e3])),f?(0,i.Xx)(f,[O[0],O[1]]):f=(0,i.ff)([O[0],O[1]]),(()=>{const e=l.pB.identity();l.pB.rotateY(e,T.sunRotateY,e);const t=l.eR.normalize(l.eR.transformMat4(l.eR.create(0,.5,-.8),e));w?(0,i.bV)(w,[t[0],t[1],t[2]]):w=(0,i.ff)([t[0],t[1],t[2]],"sun buffer")})(),r=new v.l1(e,O[0],O[1]),n=new v.$x(e,O[0],O[1]),a=new v.VC(e,O[0],O[1]),o=new v.fp(e,O[0],O[1]),s=new v.fu(e,O[0],O[1]),u=new v.Hi(e,O[0],O[1]),L=E.atlasTextureView,!L)return void requestAnimationFrame(X);let M=0;t.forEach(((t,i)=>{const{render:l,label:h,timestampLabels:g}=t;if(!1===D.passesFolder.controllers.find((e=>e.property===h))?.getValue())return;let v;e.features.has("timestamp-query")&&m.clearBuffer(F),e.features.has("timestamp-query")&&(v={querySet:G,beginningOfPassWriteIndex:M,endOfPassWriteIndex:M+1}),S.update(p.j),h&&m.pushDebugGroup(h),l({enabled:document.getElementById(`flag-${h}`)?.checked,commandEncoder:m,resolutionBuffer:f,timeBuffer:d,outputTextures:{finalTexture:s,albedoTexture:r,normalTexture:n,depthTexture:a,skyTexture:V,velocityTexture:o,worldPositionTexture:u},cameraPositionBuffer:W,volumeAtlas:E,transformationMatrixBuffer:x,viewProjectionMatricesArray:k,viewProjectionMatricesBuffer:y,timestampWrites:v,sunDirectionBuffer:w,blueNoiseTextureView:c,bvhBuffer:S.gpuBuffer,lights:N,linearSampler:q,nearestSampler:Y}),M+=g?.length>0?2*g.length:2,h&&m.popDebugGroup()})),m.popDebugGroup();const I=t.reduce(((e,t)=>t.timestampLabels?e.concat(t.timestampLabels):e.concat(t.label)),[]);e.features.has("timestamp-query")&&(0,b.n)(I,G,F),e.queue.submit([m.finish()]),requestAnimationFrame(X)};(()=>{const{clientWidth:e,clientHeight:t}=M.parentElement,n=l.Zc.create(1*e,1*t);O=l.Zc.mulScalar(n,1/I),M.width=n[0],M.height=n[1],M.style.transform="scale(1)"})(),requestAnimationFrame(X)};if(!navigator.gpu)throw new Error("WebGPU not supported");S=await(0,k.D)(),V=(0,w.D)(S),E=new d.Y(S),await(0,p.J)(S,E);const F=await Promise.all([(0,x.P)(),(0,s.H)(),(0,u.$)(S),(0,y.l)()]);G(S,await Promise.all(F)),D.setupDebugControls(F),r()}catch(e){r(e)}}),1)},522:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{l:()=>c});var i=n(1859),s=n(93),a=n(8756),o=n(6300),l=e([i,s]);[i,s]=l.then?(await l)():l;const u=16,c=async()=>{const e=i.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}]}),t=i.jO.createPipelineLayout({bindGroupLayouts:[e]}),n=(0,a.Q)([1,1,1]).length,r=i.jO.createRenderPipeline({layout:t,vertex:{module:i.jO.createShaderModule({code:"\n        @binding(0) @group(0) var<uniform> modelViewProjectionMatrix : mat4x4f;\n        \n        struct VertexOutput {\n          @builtin(position) position : vec4f,\n        }\n        \n        @vertex\n        fn main(\n          @location(0) objectPos : vec4f,\n        ) -> VertexOutput {\n          var output : VertexOutput;\n          output.position =modelViewProjectionMatrix * objectPos;\n          return output;\n        }\n\n       "}),entryPoint:"main",buffers:[{arrayStride:u,attributes:[{shaderLocation:0,offset:0,format:"float32x4"}]}]},fragment:{module:i.jO.createShaderModule({code:"\n        @fragment\n        fn main() -> @location(0) vec4f {\n          return vec4(1);\n        }\n        "}),entryPoint:"main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"line-list",cullMode:"back"}}),l=i.jO.createBuffer({size:u*n*s.j.length,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,label:"vertices buffer"}),c=i.jO.createBuffer({size:256*s.j.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:"mvp buffer"});return{render:({commandEncoder:t,outputTextures:h,transformationMatrixBuffer:d,volumeAtlas:f,viewProjectionMatricesBuffer:p,timestampWrites:m,bvhBuffer:g,lights:v})=>{let x=[];for(let t=0;t<s.j.length;t++){const r=(0,a.Q)(s.j[t].size),h=256*t;i.jO.queue.writeBuffer(l,t*u*n,r.buffer,r.byteOffset);const d=i.jO.createBindGroup({layout:e,entries:[{binding:0,resource:{buffer:c,offset:h}}]});x.push(d);const f=s.j[t].transform,p=o.pB.mul(o.pB.scale(i.UI.projectionMatrix,[-1,1,1]),i.UI.viewMatrix),m=new Float32Array(o.pB.mul(p,f));i.jO.queue.writeBuffer(c,h,m.buffer,m.byteOffset,m.byteLength)}const y=t.beginRenderPass({colorAttachments:[{view:i.sZ.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"load",storeOp:"store"}],timestampWrites:m});y.setPipeline(r);for(let e=0;e<s.j.length;e++){const t=x[e];y.setBindGroup(0,t),y.setVertexBuffer(0,l,u*n*e,u*n),y.draw(n)}y.end()},label:"outlines"}};r()}catch(e){r(e)}}))},3532:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{Xx:()=>a,bV:()=>l,ff:()=>o,nr:()=>u});var i=n(1859),s=e([i]);i=(s.then?(await s)():s)[0];const a=(e,t)=>{const n=new Uint32Array(t);i.jO.queue.writeBuffer(e,0,n.buffer,0,t.length*Uint32Array.BYTES_PER_ELEMENT)},o=(e,t)=>{const n=new Uint32Array(e),r=i.jO.createBuffer({size:n.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:t});return a(r,e),r},l=(e,t)=>{if(t instanceof Float32Array)i.jO.queue.writeBuffer(e,0,t.buffer,0,t.length*Float32Array.BYTES_PER_ELEMENT);else{const n=new Float32Array(t);i.jO.queue.writeBuffer(e,0,n.buffer,0,t.length*Float32Array.BYTES_PER_ELEMENT)}},u=(e,t,n)=>{const r=new Float32Array(t),i=e.createBuffer({size:r.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:n});return l(i,t),i};r()}catch(e){r(e)}}))},8600:(e,t,n)=>{n.d(t,{f:()=>o});var r=n(6300);const i=e=>{let t=r.eR.create(1/0,1/0,1/0),n=r.eR.create(-1/0,-1/0,-1/0);for(const{AABB:i}of e)t=r.eR.min(i.min,t),n=r.eR.max(i.max,n);return{min:t,max:n}},s=e=>{const t=i(e),n=(t.max[0]-t.min[0])*(t.max[1]-t.min[1])*(t.max[2]-t.min[2]);return e.length*n},a=(44,16,16*Math.ceil(2.75));class o{#o;#l;#u;#c;#h;constructor(e,t){this.#o=e,this.#u=t.map(((e,t)=>({AABB:e.AABB,objectIndex:t}))),this.#c=0,this.#l=[],this.#d(this.#u,0),this.#f()}get gpuBuffer(){return this.#h}update(e){this.#u=e.map(((e,t)=>({AABB:e.AABB,objectIndex:t}))),this.#c=0,this.#d(this.#u,0),this.#f()}#d(e,t){if(0===this.#u.length)return;if(this.#h=this.#o.createBuffer({size:Math.max(this.#l.length,1)*a,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,mappedAtCreation:!1,label:"bvh buffer"}),1===e.length)return void(this.#l[t]={leftChildIndex:this.#u.indexOf(e[0]),rightChildIndex:-1,objectCount:1,AABBMax:e[0].AABB.max,AABBMin:e[0].AABB.min});const n=i(e);let r=-1,o=-1;const{left:l,right:u}=(e=>{let t=1/0,n=-1;const r=Math.floor(e.length/2);for(let i=1;i<e.length;i++){const a=e.slice(0,i),o=e.slice(i),l=s(a)+s(o),u=1e3*Math.abs(i-r)+1*l;u<t&&(t=u,n=i)}return{left:e.slice(0,n),right:e.slice(n)}})(e);l.length>0&&(r=++this.#c,this.#d(l,r)),u.length>0&&(o=++this.#c,this.#d(u,o)),this.#l[t]={leftChildIndex:r,rightChildIndex:o,objectCount:e.length,AABBMax:n.max,AABBMin:n.min}}#f(){return this.#l.forEach(((e,t)=>{const n=t*a,r=new ArrayBuffer(a),i=new DataView(r);i.setInt32(0,e.leftChildIndex,!0),i.setInt32(4,e.rightChildIndex,!0),i.setUint32(8,e.objectCount,!0),i.setFloat32(16,e.AABBMin[0],!0),i.setFloat32(20,e.AABBMin[1],!0),i.setFloat32(24,e.AABBMin[2],!0),i.setFloat32(32,e.AABBMax[0],!0),i.setFloat32(36,e.AABBMax[1],!0),i.setFloat32(40,e.AABBMax[2],!0),this.#o.queue.writeBuffer(this.#h,n,r,0,a)})),this.#h}}},4417:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{i:()=>h});var i=n(1859),s=n(8410),a=n(8024),o=n(6300),l=n(4404),u=e([i,a]);[i,a]=u.then?(await u)():u;const c=new s.Y;let h=class extends a.M{fieldOfView;near=.5;far=1e4;constructor(e){super({position:e.position,rotation:o.Yu.fromMat(o.pB.lookAt(o.eR.create(),e.direction,o.eR.create(0,1,0)))}),this.fieldOfView=e.fieldOfView}get projectionMatrix(){return o.pB.perspective(this.fieldOfView,i.PM[0]/i.PM[1],this.near,this.far)}get inverseProjectionMatrix(){return o.pB.invert(this.projectionMatrix)}get viewProjectionMatrix(){return o.pB.mul(this.projectionMatrix,this.viewMatrix)}get inverseViewProjectionMatrix(){return o.pB.invert(this.viewProjectionMatrix)}update(){const e=.005*i.Eh,t=.03*i.Eh;let n=o.eR.zero();c.pressed.a&&(n=o.eR.add(n,i.UI.left)),c.pressed.d&&(n=o.eR.add(n,i.UI.right)),c.pressed.w&&(n=o.eR.add(n,i.UI.direction)),c.pressed.s&&(n=o.eR.subtract(n,i.UI.direction)),c.pressed.e&&(i.UI.targetRotation=o.Yu.rotateY(i.UI.targetRotation,e)),c.pressed.q&&(i.UI.targetRotation=o.Yu.rotateY(i.UI.targetRotation,-e)),c.pressed[" "]&&(n=o.eR.add(n,i.UI.up)),c.pressed.shift&&(n=o.eR.add(n,i.UI.down)),n=o.eR.normalize(n),i.UI.targetPosition=o.eR.add(i.UI.targetPosition,o.eR.mulScalar(n,t))}};h=function(e,t,n,r){var i,s=arguments.length,a=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(i=e[o])&&(a=(s<3?i(a):s>3?i(t,n,a):i(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a}([l.b.register],h),r()}catch(e){r(e)}}))},7684:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{P:()=>l});var i=n(1859),s=n(6921),a=e([i]);i=(a.then?(await a)():a)[0];const o="clear",l=async()=>{const e=i.jO.createShaderModule({code:"\n    struct VertexOutput {\n      @builtin(position) position : vec4f,\n    }\n    @vertex\n    fn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n      var output : VertexOutput;\n      return output;\n    }\n    @fragment\n    fn fragment_main(@builtin(position) position : vec4f) -> @location(0) vec4<f32> {\n        return vec4(0.0);\n    }"}),t=i.jO.createRenderPipeline({label:o,layout:"auto",vertex:{module:e,entryPoint:"vertex_main"},fragment:{module:e,entryPoint:"fragment_main",targets:[{format:s.mt}]}});return{render:e=>{const n=e.commandEncoder.beginRenderPass({label:o,timestampWrites:e.timestampWrites,colorAttachments:[{view:e.outputTextures.finalTexture.view,loadOp:"clear",clearValue:[0,0,0,0],storeOp:"store"}]});n.setPipeline(t),n.draw(6),n.end()},label:o}};r()}catch(e){r(e)}}))},6921:(e,t,n)=>{n.d(t,{NB:()=>s,Wq:()=>o,dn:()=>r,g7:()=>a,mt:()=>i});const r="r8unorm",i="rgba16float",s="rgba16float",a="r32float",o=4},1133:(e,t,n)=>{n.d(t,{z:()=>a});class r{index;dataView;constructor(e){this.dataView=new DataView(e),this.index=0}readUint8(){const e=this.dataView.getUint8(this.index);return this.index++,e}readUint32(){const e=this.dataView.getUint32(this.index,!0);return this.index+=4,e}readFloat32(){const e=this.dataView.getFloat32(this.index,!0);return this.index+=4,e}skip(e){this.index+=e}}var i=n(6300);const s=e=>0===e,a=e=>{console.time("convert vxm");const t=new r(e);let n,a=[],o="",l=[];if(o=String.fromCodePoint(t.readUint8(),t.readUint8(),t.readUint8(),t.readUint8()),"VXMC"!==o&&"VXMA"!==o)throw new Error(`Incorrect magic: ${o}`);if(o[3].charCodeAt(0)>="0".charCodeAt(0)&&o[3].charCodeAt(0)<="9".charCodeAt(0))n=o[3].charCodeAt(0)-"0".charCodeAt(0);else{if(!(o[3].charCodeAt(0)>="A".charCodeAt(0)&&o[3].charCodeAt(0)<="C".charCodeAt(0)))throw new Error("Unsupported version found");n=10+o[3].charCodeAt(0)-"A".charCodeAt(0)}if(n<11||n>12)throw new Error(`Could not load vxm file: Unsupported version found (${n})`);let u=[0,0,0];u[0]=t.readUint32(),u[1]=t.readUint32(),u[2]=t.readUint32();let c=[.5,0,.5];if(c[0]=t.readFloat32(),c[1]=t.readFloat32(),c[2]=t.readFloat32(),t.readUint8()>0){let e=0,n=0;t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),e=t.readUint32(),n=t.readUint32();let r=e*n;t.skip(4*r)}n>=8&&t.skip(16);let h=t.readUint32();for(let e=0;e<h;++e){let e=t.readUint32(),n=t.readUint32();if(e>2048||n>2048)throw new Error("Size of texture exceeds the max allowed value");let r=t.readUint32();t.skip(r);for(let e=0;e<6;++e){let e=t.readUint32();e>262144&&console.warn(`Size of quads exceeds the max allowed value: ${e}`);let n=4*e*20;t.skip(n)}}t.skip(1024),t.skip(1024);let d=t.readUint8();for(let e=0;e<d;++e)t.skip(1024),t.readUint8(),t.readUint8();let f=t.readUint8();for(let e=0;e<f;++e){let n=t.readUint8(),r=t.readUint8(),i=t.readUint8(),s=t.readUint8();s=1===t.readUint8()?2:255,a[e]={r:i,g:r,b:n,a:s}}let p=1;n>=12&&(p=t.readUint8());let m={min:i.eR.create(9999,9999,9999),max:i.eR.create(0,0,0)};for(let e=0;e<p;++e){let r=0,a=!0,o="";if(n>=12){for(;;){const e=t.readUint8();if(s(e))break;o=`${o}${String.fromCharCode(e)}`}a=t.readUint8()>0}else o=`Layer ${e}`;for(;;){let e=t.readUint8();if(0===e)break;let n=t.readUint8();if(255!==n)if(n>=f)r+=e;else{for(let t=r;t<r+e;t++){let e=Math.floor(t/(u[1]*u[2])),r=Math.floor(t/u[2]%u[1]),s=Math.floor(t%u[2]);m.min=i.eR.min(m.min,[e,r,s]),m.max=i.eR.max(m.max,[e,r,s]),l.push({x:e,y:r,z:s,c:n})}r+=e}else r+=e}}l=l.map((({x:e,y:t,z:n,c:r})=>({x:e-m.min[0],y:t-m.min[1],z:n-m.min[2],c:r})));const g=i.eR.sub(m.max,m.min);return console.timeEnd("convert vxm"),{VOX:l.length,SIZE:[g[0]+1,g[1]+1,g[2]+1],XYZI:l,RGBA:a}}},93:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{J:()=>f,j:()=>c});var i=n(9398),s=n(1133),a=n(7035),o=n(8761),l=n(4622),u=e([i]);i=(u.then?(await u)():u)[0];let c=[];const h=["teapot"],d=async(e,t)=>{console.time(`Fetch ${e}`);const n=await fetch(`./Tavern/${e}.vxm`);console.timeEnd(`Fetch ${e}`);const r=await n.arrayBuffer(),i=(0,s.z)(r);console.time(`Create texture from voxels for ${e}`);let u=await(0,a.d)(t,i);console.timeEnd(`Create texture from voxels for ${e}`),console.time(`Create octree for ${e}`);const c=new l.xV(i),h=(0,l.F4)(c);console.timeEnd(`Create octree for ${e}`),console.time(`Create palette texture for ${e}`);const d=await(0,o.e)(t,i);return console.timeEnd(`Create palette texture for ${e}`),{name:e,texture:u,palette:d,octreeArrayBuffer:h}},f=async(e,t)=>{const n=await fetch("./Tavern.json"),r=(await n.json()).children.filter((e=>h.includes(e.name))),s=new Set(r.map((e=>e.name))),a=Array.from(s);console.time("Load all volumes");{let n=await Promise.all(a.map((t=>d(t,e))));for(const{name:e,texture:r,palette:i,octreeArrayBuffer:s}of n)console.time(`Add volume for ${e}`),await t.addVolume(r,i,e,s),console.timeEnd(`Add volume for ${e}`)}console.timeEnd("Load all volumes");const o=t.dictionary;let l=[];for(const e of r){const t=o[e.name];if(!t)return void console.warn(`Volume not found for child ${e.name}, skipping...`);"Candle"===e.name&&l.push(e.position);const{position:n,rotation:r,scale:s,name:a}=e,{size:u,location:h,paletteIndex:d,octreeOffset:f}=t;c.push(new i.Q({position:n,rotation:r,scale:s,size:u,atlasLocation:h,name:a,paletteIndex:d,octreeBufferIndex:f}))}console.log({volumes:o}),console.debug(`Tavern created with ${c.length} items`)};r()}catch(e){r(e)}}))},8761:(e,t,n)=>{n.d(t,{e:()=>r});const r=async(e,t)=>{const n=e.createTexture({size:{width:256,height:1},format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC,dimension:"2d",mipLevelCount:1}),r=e.createBuffer({label:"palette buffer",size:1024,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC});t.RGBA.forEach((({r:t,g:n,b:i,a:s},a)=>{const o=new Uint8Array([t,n,i,s]);e.queue.writeBuffer(r,4*a,o)}));const i=e.createCommandEncoder();return i.copyBufferToTexture({buffer:r},{texture:n},[255,1,1]),e.queue.submit([i.finish()]),await e.queue.onSubmittedWorkDone(),n}},7035:(e,t,n)=>{n.d(t,{d:()=>i});var r=n(6921);const i=async(e,t)=>{const n=e.createTexture({size:{width:t.SIZE[0],height:t.SIZE[1],depthOrArrayLayers:t.SIZE[2]},format:r.dn,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT,dimension:"2d",mipLevelCount:r.Wq}),i=n.width*n.height*n.depthOrArrayLayers,s=e.createBuffer({size:4*i*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.STORAGE}),a=e.createBuffer({size:256*t.SIZE[2],usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.UNIFORM,label:"voxels buffer"}),o=Array.from({length:t.SIZE[2]},((e,t)=>t));for(let t=0;t<o.length;t++)e.queue.writeBuffer(a,256*t,new Uint32Array([o[t]]).buffer);for(let n=0;n<t.XYZI.length;n++){const{x:r,y:i,z:a,c:o}=t.XYZI[n],c=(l=t.SIZE,(u=[r,i,a])[0]+u[1]*l[0]+u[2]*(l[0]*l[1]));e.queue.writeBuffer(s,16*c,new Uint32Array([r,i,a,o]).buffer)}var l,u;const c=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"storage"}}]}),h=e.createRenderPipeline({layout:e.createPipelineLayout({bindGroupLayouts:[c]}),vertex:{module:e.createShaderModule({code:"\n          struct VertexOutput {\n            @builtin(position) Position : vec4<f32>,\n          }\n          \n          @vertex\n          fn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n            const pos = array(\n              vec2( 1.0,  1.0),\n              vec2( 1.0, -1.0),\n              vec2(-1.0, -1.0),\n              vec2( 1.0,  1.0),\n              vec2(-1.0, -1.0),\n              vec2(-1.0,  1.0),\n            );\n            var output : VertexOutput;\n            output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n            return output;\n          }"}),entryPoint:"vertex_main"},fragment:{module:e.createShaderModule({code:"\n          @group(0) @binding(0) var<uniform> zIndex: u32;\n          @group(0) @binding(1) var<storage, read_write> voxelBuffer: array<vec4<u32>>;\n          \n          override sizeX: u32;\n          override sizeY: u32;\n          override sizeZ: u32;\n           \n          fn convert3DTo1D(size: vec3<u32>, position: vec3<u32>) -> u32 {\n            return position.x + position.y * size.x + position.z * (size.x * size.y);\n          }\n          \n          @fragment\n          fn fragment_main(@builtin(position) position : vec4<f32>) -> @location(0) vec4<f32> { \n            let voxelPosition = vec3(position.xy, f32(zIndex));\n            let voxelIndex = convert3DTo1D(vec3<u32>(sizeX, sizeY, sizeZ), vec3<u32>(voxelPosition));\n            let voxel = voxelBuffer[voxelIndex];\n            let normalisedPaletteIndex = f32(voxel.a) / 255.0;\n            return vec4(normalisedPaletteIndex,0,0,0);\n          }\n        "}),entryPoint:"fragment_main",targets:[{format:r.dn}],constants:{sizeX:t.SIZE[0],sizeY:t.SIZE[1],sizeZ:t.SIZE[2]}}}),d=e.createCommandEncoder();for(let t=0;t<n.depthOrArrayLayers;t++){const r=e.createBindGroup({label:"create-texture-from-voxels",layout:c,entries:[{binding:0,resource:{buffer:a,offset:256*t,size:4}},{binding:1,resource:{buffer:s}}]}),i=d.beginRenderPass({colorAttachments:[{view:n.createView({baseArrayLayer:t,arrayLayerCount:1,mipLevelCount:1,dimension:"2d"}),loadOp:"clear",clearValue:[0,0,0,0],storeOp:"store"}]});i.setPipeline(h),i.setBindGroup(0,r),i.draw(6),i.end()}return e.queue.submit([d.finish()]),await e.queue.onSubmittedWorkDone(),n}},2782:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{f:()=>a});var i=n(4206),s=e([i]);i=(s.then?(await s)():s)[0];class a{#p;#m;#g;#v;constructor(){this.#p=new i.sm(1),this.#m=new i.sm(0),this.#g=new i.sm(0),this.#v=new i.sm(-3)}set targetScale(e){this.#p.target=e}set targetTranslateX(e){this.#m.target=e}set targetRotateY(e){this.#g.target=e}set targetSunRotateY(e){this.#v.target=e}get targetScale(){return this.#p.target}get targetTranslateX(){return this.#m.target}get targetRotateY(){return this.#g.target}get targetSunRotateY(){return this.#v.target}get sunRotateY(){return this.#v.value}get scale(){return this.#p.value}get translateX(){return this.#m.value}}r()}catch(e){r(e)}}))},4404:(e,t,n)=>{var r;n.d(t,{b:()=>r}),function(e){const t=[];e.updateAll=e=>{for(const n of t)n.update(e)},e.register=e=>class extends e{constructor(...e){super(...e),t.push(this)}}}(r||(r={}))},6677:(e,t,n)=>{n.d(t,{v:()=>r});const r=()=>{let e={};const t=t=>{const n=e[t];return n?n.reduce(((e,t)=>e+t))/n.length:0};return{addSample:(t,n)=>{e[t]||(e[t]=[]),e[t].push(n)>50&&e[t].shift()},clearEntry:t=>{e[t]&&(e[t]=[0])},toString:()=>Object.keys(e).map((e=>`${e}: ${t(e).toFixed(2)}ms`)).join("\n"),toHTML:()=>Object.keys(e).map((e=>`<div class="debug-row">\n                    <div>\n                        ${e}\n                    </div>\n                   <div>${t(e).toFixed(2)}ms</div>\n                </div>`)).join("\n"),getAverages:()=>Object.keys(e).reduce(((e,n)=>(e[n]=t(n),e)),{})}}},6371:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{$:()=>o});var i=n(1859),s=n(2301),a=e([i]);i=(a.then?(await a)():a)[0];const o=async e=>{const t=e.createShaderModule({code:s}),n=e.createRenderPipeline({layout:"auto",vertex:{module:t,entryPoint:"vertex_main"},fragment:{module:t,entryPoint:"fragment_main",targets:[{format:navigator.gpu.getPreferredCanvasFormat()}]}});return{render:t=>{const r=t.commandEncoder.beginRenderPass({timestampWrites:t.timestampWrites,colorAttachments:[{view:i.sZ.getCurrentTexture().createView(),loadOp:"clear",clearValue:[.3,.3,.3,1],storeOp:"store"}]}),s=e.createBindGroup({layout:n.getBindGroupLayout(0),entries:[{binding:1,resource:t.outputTextures.albedoTexture.view}]});r.setPipeline(n),r.setBindGroup(0,s),r.draw(6),r.end()},label:"fullscreen quad"}};r()}catch(e){r(e)}}))},2518:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{H:()=>d});var i=n(1859),s=n(6196),a=n(9018),o=n(9956),l=n(9164),u=n(7266),c=e([i,s,a,o,u]);[i,s,a,o,u]=c.then?(await c)():c;const h=(e,t)=>Math.ceil(e/t)*t,d=async()=>{const e=await(0,s.N)(),t=await(0,o.S)(),n=(await(0,a.O)(),await(0,u.K)());let r,c,d,f={albedoTexture:null,velocityTexture:null,depthTexture:null,normalTexture:null};return{render:s=>{if(!c){c=i.jO.createBuffer({size:12,usage:GPUBufferUsage.INDIRECT|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}),r=i.jO.createBuffer({size:4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});const e=new Uint32Array(3);e[0]=1,e[1]=1,e[2]=1,i.jO.queue.writeBuffer(c,0,e,0,e.length);const{width:t,height:n}=s.outputTextures.finalTexture,a=h(t/3*(n/3)*4,4);d=i.jO.createBuffer({size:a,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC})}Object.keys(f).forEach((e=>{const t=s.outputTextures[e];null===f[e]&&(f[e]=(0,l.p)(i.jO,t))}));const{commandEncoder:a,timestampWrites:o}=s;a.clearBuffer(c,0,4),a.clearBuffer(r,0,4),a.clearBuffer(d);let u=a.beginComputePass({timestampWrites:o});t(u,s),u.end(),Object.keys(f).forEach((e=>{const t=s.outputTextures[e],n=f[e];(0,l.M)(a,t,n)})),u=a.beginComputePass({timestampWrites:{querySet:o.querySet,beginningOfPassWriteIndex:o.beginningOfPassWriteIndex+4,endOfPassWriteIndex:o.endOfPassWriteIndex+4}}),n(u,s,d,c),u.end(),u=a.beginComputePass({timestampWrites:{querySet:o.querySet,beginningOfPassWriteIndex:o.beginningOfPassWriteIndex+6,endOfPassWriteIndex:o.endOfPassWriteIndex+6}}),e(u,s),u.end()},label:"primary rays",timestampLabels:["sparse raymarch","interpolate","full raymarch","world pos reconstruct"]}};r()}catch(e){r(e)}}))},7266:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{K:()=>f});var i=n(6921),s=n(1859),a=n(5805),o=n(8223),l=n(3307),u=n(8108),c=n(3405),h=n(9133),d=e([s]);s=(d.then?(await d)():d)[0];const f=async()=>{const e={binding:4,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},t={binding:5,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba8unorm",viewDimension:"2d"}},n={binding:7,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},r={binding:6,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:i.g7,viewDimension:"2d"}},d={binding:10,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},f={binding:3,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},p={binding:12,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d"}},m={binding:13,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},g=s.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"3d"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},f,e,t,r,n,{binding:8,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},d,p,m]}),v=s.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}}]}),x=await s.jO.createComputePipelineAsync({label:"raymarch g-buffer indirect",layout:s.jO.createPipelineLayout({bindGroupLayouts:[g,v]}),compute:{module:s.jO.createShaderModule({code:`\n          @group(0) @binding(0) var voxels : texture_3d<f32>;\n          @group(0) @binding(2) var<uniform> cameraPosition : vec3<f32>;\n          @group(0) @binding(3) var<storage> voxelObjects : array<VoxelObject>;\n          @group(0) @binding(4) var normalTex : texture_storage_2d<rgba16float, write>;\n          @group(0) @binding(5) var albedoTex : texture_storage_2d<rgba8unorm, write>;\n          @group(0) @binding(6) var depthWrite : texture_storage_2d<${i.g7}, write>;\n          @group(0) @binding(7) var velocityTex : texture_storage_2d<rgba16float, write>;\n          @group(0) @binding(8) var<uniform> viewProjections : ViewProjectionMatrices;\n          @group(0) @binding(10) var<storage> bvhNodes: array<BVHNode>;\n          @group(0) @binding(11) var worldPosTex : texture_storage_2d<rgba32float, write>;\n          @group(0) @binding(12) var paletteTex : texture_2d<f32>;\n          @group(0) @binding(13) var<storage> octreeBuffer : array<u32>;\n          ${a}\n          ${o}\n          ${l}\n          ${u}\n          ${h}\n          ${c}`}),entryPoint:"bufferMarch"}});let y,_;return(e,t,n,r)=>{y||(y=(e=>s.jO.createBindGroup({layout:g,entries:[{binding:0,resource:e.volumeAtlas.atlasTextureView},{binding:2,resource:{buffer:e.cameraPositionBuffer}},{binding:3,resource:{buffer:e.transformationMatrixBuffer}},{binding:4,resource:e.outputTextures.normalTexture.view},{binding:5,resource:e.outputTextures.albedoTexture.view},{binding:6,resource:e.outputTextures.depthTexture.view},{binding:7,resource:e.outputTextures.velocityTexture.view},{binding:8,resource:{buffer:e.viewProjectionMatricesBuffer}},{binding:10,resource:{buffer:e.bvhBuffer}},{binding:12,resource:e.volumeAtlas.paletteTextureView},{binding:13,resource:{buffer:e.volumeAtlas.octreeBuffer}}]}))(t),_=(e=>s.jO.createBindGroup({layout:v,entries:[{binding:0,resource:{buffer:e}}]}))(n)),e.setPipeline(x),e.setBindGroup(0,y),e.setBindGroup(1,_),e.dispatchWorkgroupsIndirect(r,0)}};r()}catch(e){r(e)}}))},9018:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{O:()=>c});var i=n(1859),s=n(6921),a=n(5805),o=n(3091),l=n(9133),u=e([i]);i=(u.then?(await u)():u)[0];const c=async()=>{const e=i.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba8unorm",viewDimension:"2d"}},{binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d"}},{binding:2,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},{binding:3,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d"}},{binding:4,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:s.g7,viewDimension:"2d"}},{binding:5,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"unfilterable-float",viewDimension:"2d"}},{binding:6,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},{binding:7,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d"}}]}),t=i.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}]}),n=i.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},{binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"3d"}},{binding:2,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d"}}]}),r=i.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}]}),u=await i.jO.createComputePipelineAsync({label:"interpolate g-buffer",layout:i.jO.createPipelineLayout({bindGroupLayouts:[e,t,n,r]}),compute:{module:i.jO.createShaderModule({code:`${l}${a}${o}`}),entryPoint:"main"}});let c,h,d,f;return(s,a,o,l,p,m,g,v,x)=>{c||(c=((t,n,r,s,a)=>i.jO.createBindGroup({layout:e,entries:[{binding:0,resource:t.outputTextures.albedoTexture.view},{binding:1,resource:n},{binding:2,resource:t.outputTextures.velocityTexture.view},{binding:3,resource:r},{binding:4,resource:t.outputTextures.depthTexture.view},{binding:5,resource:s},{binding:6,resource:t.outputTextures.normalTexture.view},{binding:7,resource:a}]}))(a,o,l,p,m)),h||(h=(e=>i.jO.createBindGroup({layout:t,entries:[{binding:0,resource:{buffer:e.cameraPositionBuffer}},{binding:1,resource:{buffer:e.viewProjectionMatricesBuffer}}]}))(a)),d||(d=(e=>i.jO.createBindGroup({layout:n,entries:[{binding:0,resource:{buffer:e.transformationMatrixBuffer}},{binding:1,resource:e.volumeAtlas.atlasTextureView},{binding:2,resource:e.volumeAtlas.paletteTextureView}]}))(a)),f||(f=((e,t,n)=>i.jO.createBindGroup({layout:r,entries:[{binding:0,resource:{buffer:e}},{binding:1,resource:{buffer:t}},{binding:2,resource:{buffer:n}}]}))(g,v,x)),s.setPipeline(u),s.setBindGroup(0,c),s.setBindGroup(1,h),s.setBindGroup(2,d),s.setBindGroup(3,f),s.dispatchWorkgroups(Math.ceil(i.PM[0]/16),Math.ceil(i.PM[1]/8))}};r()}catch(e){r(e)}}))},9956:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{S:()=>f});var i=n(6921),s=n(1859),a=n(5805),o=n(8223),l=n(3307),u=n(8108),c=n(3405),h=n(9133),d=e([s]);s=(d.then?(await d)():d)[0];const f=async()=>{const e={binding:4,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},t={binding:5,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba8unorm",viewDimension:"2d"}},n={binding:7,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},r={binding:6,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:i.g7,viewDimension:"2d"}},d={binding:10,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},f={binding:3,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},p={binding:12,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d"}},m={binding:13,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},g=s.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"3d"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},f,e,t,r,n,{binding:8,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},d,p,m]}),v=await s.jO.createComputePipelineAsync({label:"raymarch g-buffer",layout:s.jO.createPipelineLayout({bindGroupLayouts:[g]}),compute:{module:s.jO.createShaderModule({code:`\n          @group(0) @binding(0) var voxels : texture_3d<f32>;\n          @group(0) @binding(2) var<uniform> cameraPosition : vec3<f32>;\n          @group(0) @binding(3) var<storage> voxelObjects : array<VoxelObject>;\n          @group(0) @binding(4) var normalTex : texture_storage_2d<rgba16float, write>;\n          @group(0) @binding(5) var albedoTex : texture_storage_2d<rgba8unorm, write>;\n          @group(0) @binding(6) var depthWrite : texture_storage_2d<${i.g7}, write>;\n          @group(0) @binding(7) var velocityTex : texture_storage_2d<rgba16float, write>;\n          @group(0) @binding(8) var<uniform> viewProjections : ViewProjectionMatrices;\n          @group(0) @binding(10) var<storage> bvhNodes: array<BVHNode>;\n          @group(0) @binding(11) var worldPosTex : texture_storage_2d<rgba32float, write>;\n          @group(0) @binding(12) var paletteTex : texture_2d<f32>;\n          @group(0) @binding(13) var<storage> octreeBuffer : array<u32>;\n          ${a}\n          ${o}\n          ${l}\n          ${u}\n          ${h}\n          ${c}`}),entryPoint:"main"}});let x;return(e,t)=>{x||(x=(e=>s.jO.createBindGroup({layout:g,entries:[{binding:0,resource:e.volumeAtlas.atlasTextureView},{binding:2,resource:{buffer:e.cameraPositionBuffer}},{binding:3,resource:{buffer:e.transformationMatrixBuffer}},{binding:4,resource:e.outputTextures.normalTexture.view},{binding:5,resource:e.outputTextures.albedoTexture.view},{binding:6,resource:e.outputTextures.depthTexture.view},{binding:7,resource:e.outputTextures.velocityTexture.view},{binding:8,resource:{buffer:e.viewProjectionMatricesBuffer}},{binding:10,resource:{buffer:e.bvhBuffer}},{binding:12,resource:e.volumeAtlas.paletteTextureView},{binding:13,resource:{buffer:e.volumeAtlas.octreeBuffer}}]}))(t)),e.setPipeline(v),e.setBindGroup(0,x),e.dispatchWorkgroups(Math.ceil(s.PM[0]/16),Math.ceil(s.PM[1]/8))}};r()}catch(e){r(e)}}))},6196:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{N:()=>l});var i=n(1859),s=n(5805),a=n(9133),o=e([i]);i=(o.then?(await o)():o)[0];const l=async()=>{const e=i.jO.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"unfilterable-float",viewDimension:"2d"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},{binding:2,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba32float",viewDimension:"2d"}},{binding:3,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},{binding:4,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}}]}),t=await i.jO.createComputePipelineAsync({label:"reconstruct world pos",layout:i.jO.createPipelineLayout({bindGroupLayouts:[e]}),compute:{module:i.jO.createShaderModule({code:`\n          ${s}\n          ${a}\n          struct ViewProjectionMatrices {\n            viewProjection : mat4x4<f32>,\n            previousViewProjection : mat4x4<f32>,\n            inverseViewProjection : mat4x4<f32>,\n            projection : mat4x4<f32>,\n            inverseProjection: mat4x4<f32>\n          };\n          \n          @group(0) @binding(0) var depthTex : texture_2d<f32>;\n          @group(0) @binding(1) var<uniform> viewProjections : ViewProjectionMatrices;\n          @group(0) @binding(2) var worldPosTex : texture_storage_2d<rgba32float, write>;\n          @group(0) @binding(3) var<uniform> cameraPosition : vec3<f32>;\n          @group(0) @binding(4) var normalTex : texture_storage_2d<rgba16float, write>;\n        \n          const NEAR_PLANE = 0.5;\n          const FAR_PLANE = 10000.0;\n         \n          \n          @compute @workgroup_size(8, 8, 1)\n          fn main(\n            @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>,\n          ) {\n            let resolution = textureDimensions(worldPosTex);\n            let pixel = GlobalInvocationID.xy;\n            var uv = vec2<f32>(pixel) / vec2<f32>(resolution);\n            let depth = textureLoad(depthTex, pixel, 0).r;\n            let distanceToSurface = logarithmicDepthToDistance(depth, NEAR_PLANE, FAR_PLANE);\n            let rayDirection = calculateRayDirection(uv, viewProjections.inverseViewProjection);\n            var worldPos = cameraPosition + rayDirection * distanceToSurface;\n            \n            if(depth == 0.0) {\n              worldPos = vec3<f32>(0.0, 0.0, 0.0);\n            }\n            \n            //let normal = computeNormalImproved(vec2<i32>(pixel)); \n            //textureStore(normalTex, pixel, vec4(normal, 1));\n            textureStore(worldPosTex, pixel, vec4(worldPos, 1));\n          }\n`}),entryPoint:"main"}});let n;return(r,s)=>{n||(n=(t=>i.jO.createBindGroup({layout:e,entries:[{binding:0,resource:t.outputTextures.depthTexture.view},{binding:1,resource:{buffer:t.viewProjectionMatricesBuffer}},{binding:2,resource:t.outputTextures.worldPositionTexture.view},{binding:3,resource:{buffer:t.cameraPositionBuffer}},{binding:4,resource:t.outputTextures.normalTexture.view}]}))(s)),r.setPipeline(t),r.setBindGroup(0,n),r.dispatchWorkgroups(Math.ceil(i.PM[0]/8),Math.ceil(i.PM[1]/8))}};r()}catch(e){r(e)}}))},1100:(e,t,n)=>{function r(e,t){let n=0,r=1/t,i=e;for(;i>0;)n+=r*(i%t),i=Math.floor(i/t),r/=t;return n}function i(e,t,n,i,s,a){const o=2*Math.tan(i/2)*a,l=o*s,u=2/t,c=2/n;return[(r(e,2)-.5)*u*l,(r(e,3)-.5)*c*o]}function s(e,t){const n=new Float32Array(e);return n[8]+=t[0],n[9]+=t[1],n}n.d(t,{Z:()=>s,i:()=>i})},8410:(e,t,n)=>{n.d(t,{Y:()=>r});class r{pressed={w:!1,a:!1,s:!1,d:!1,q:!1,e:!1," ":!1,shift:!1};constructor(){window.addEventListener("keydown",(e=>{const t=e.key.toLowerCase();this.pressed[t]=!0})),window.addEventListener("keyup",(e=>{const t=e.key.toLowerCase();this.pressed[t]=!1})),window.addEventListener("blur",(()=>{Object.keys(this.pressed).forEach((e=>{this.pressed[e]=!1}))}))}}},8024:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{M:()=>o});var i=n(6300),s=n(4206),a=e([s]);s=(a.then?(await a)():a)[0];class o{#x;#y;#p;#_;constructor(e){this.#x=new s.O0(e.position),this.#y=new s.Er(e.rotation),this.#p=new s.O0(e.scale??i.eR.create(1,1,1)),this.#_=this.transform}get transform(){let e=i.pB.identity();return i.pB.translate(e,this.#x.value,e),i.pB.scale(e,this.#p.value,e),i.pB.multiply(e,i.pB.fromQuat(this.#y.value),e),e}get previousTransform(){return this.#_}get inverseTransform(){return i.pB.invert(this.transform)}get previousInverseTransform(){return i.pB.invert(this.#_)}set targetPosition(e){this.#x.target=e}get targetPosition(){return this.#x.target}set targetRotation(e){this.#y.target=e}get targetRotation(){return this.#y.target}get direction(){return i.eR.transformQuat(i.eR.create(0,0,1),this.#y.value)}get right(){return i.eR.transformQuat(i.eR.create(1,0,0),this.#y.value)}get left(){return i.eR.transformQuat(i.eR.create(-1,0,0),this.#y.value)}get up(){return i.eR.transformQuat(i.eR.create(0,1,0),this.#y.value)}get down(){return i.eR.transformQuat(i.eR.create(0,-1,0),this.#y.value)}get viewMatrix(){const e=this.#x.value;return i.pB.lookAt(e,i.eR.add(e,this.direction),this.up)}get inverseViewMatrix(){return i.pB.invert(this.viewMatrix)}}r()}catch(e){r(e)}}))},4622:(e,t,n)=>{n.d(t,{xV:()=>s,F4:()=>a});const r=(e,t)=>e|1<<t,i=e=>[1&e?1:0,2&e?1:0,4&e?1:0];class s{nodes;#b;#w;constructor(e){var t;this.nodes=[],this.#b=0,this.#w=(t=e.SIZE,Math.ceil(Math.log2(Math.max(...t)))),this.#d(e,0,[0,0,0],0)}#k(e=8){return this.#b+=e,this.#b-(e-1)}#d(e,t,n,s){const a=Array.from({length:8},(()=>null)),o=s+1,l=(u=Math.max(...e.SIZE),Math.pow(2,Math.ceil(Math.log2(u))));var u;const c=l/2;for(let t=0;t<8;t++){const r=i(t),s=n[0]+r[0]*c,o=n[1]+r[1]*c,l=n[2]+r[2]*c,u=e.XYZI.filter((e=>e.x>=s&&e.x<s+c&&e.y>=o&&e.y<o+c&&e.z>=l&&e.z<l+c));u.length>0&&(a[t]={SIZE:[c,c,c],XYZI:u,RGBA:e.RGBA,VOX:e.VOX})}let h=0;const d=a.reduce(((e,t,n)=>t?(h=n+1,r(e,n)):e),0),f=e.XYZI.every((t=>t.c===e.XYZI[0].c)),p=o===this.#w-1;if(255===d&&f&&p)return void(this.nodes[t]={leafFlag:0,paletteIndex:e.XYZI[0].c});const m=this.#k(h),g=m-t;let v=g;if(g>32767)return void(this.nodes[t]={firstChildIndex:v,childMask:0,leafMask:0,voxels:{...e,SIZE:[l,l,l]},isFarBit:!1});let x=0;a.forEach(((e,t)=>{if(e){const s=1===e.SIZE[0],a=m+t;if(s)this.nodes[a]={leafFlag:0,paletteIndex:e.XYZI[0].c},x=r(x,t);else{const r=i(t),s=n[0]+r[0]*c,l=n[1]+r[1]*c,u=n[2]+r[2]*c;this.#d(e,a,[s,l,u],o)}}})),this.nodes[t]={firstChildIndex:v,childMask:d,leafMask:x,voxels:{...e,SIZE:[l,l,l]},isFarBit:!1}}get totalSize(){return 4*this.nodes.length}}const a=e=>{const t=new ArrayBuffer(e.totalSize),n=new DataView(t);return e.nodes.forEach(((e,t)=>{"leafFlag"in e?((e,t,n)=>{e.setUint8(4*t,255),e.setUint8(4*t+1,n.paletteIndex)})(n,t,e):"childMask"in e?((e,t,n)=>{e.setUint8(4*t,n.childMask);const i=n.isFarBit?r(n.firstChildIndex,15):-32769&n.firstChildIndex;e.setUint16(4*t+1,i,!0),e.setUint8(4*t+3,n.leafMask)})(n,t,e):((e,t,n)=>{e.setUint32(4*t,n.firstChildIndex,!0)})(n,t,e)})),t}},8756:(e,t,n)=>{n.d(t,{Q:()=>r});const r=e=>{const[t,n,r]=e,i=[0,0,0,1],s=[t,0,0,1],a=[0,n,0,1],o=[t,n,0,1],l=[0,0,r,1],u=[t,0,r,1],c=[0,n,r,1],h=[t,n,r,1];let d=[i,s,a,a,s,o].flat(),f=[l,c,u,u,c,h].flat(),p=[a,o,c,c,o,h].flat(),m=[i,l,s,s,l,u].flat(),g=[s,u,o,o,u,h].flat(),v=[i,a,l,l,a,c].flat();return new Float32Array([...d,...f,...p,...m,...g,...v])}},60:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{A:()=>o});var i=n(1859),s=n(4578),a=e([i]);i=(a.then?(await a)():a)[0];class o{gui;timingsFolder;passesFolder;constructor(){document.addEventListener("wheel",(e=>{i.UI.fieldOfView+=.001*e.deltaY,i.UI.fieldOfView=Math.max(Math.min(i.UI.fieldOfView,2),.1)})),this.gui=new s.Ay,this.gui.add(i.mL,"targetSunRotateY",-3,3).onChange((e=>{i.mL.targetSunRotateY=e})).listen(),this.gui.add(i.UI,"fieldOfView",.1,2).onChange((e=>{i.UI.fieldOfView=e})).listen(),this.timingsFolder=this.gui.addFolder("timings"),this.passesFolder=this.gui.addFolder("passes")}log(e){Object.keys(e).forEach((t=>{const n=this.timingsFolder.controllers.find((e=>e.property===t));n?n.setValue(e[t].toFixed(2)):this.timingsFolder.add(e,t)}))}setupDebugControls(e){const t=e.reduce(((e,t)=>(e[t.label]=!0,e)),{});e.forEach((e=>{this.passesFolder.add(t,e.label)}))}}r()}catch(e){r(e)}}))},596:(e,t,n)=>{n.d(t,{Y:()=>c});var r=n(6921);const i=async(e,t,n)=>{if("3d"!==t.dimension)throw new Error("Input texture should be a 3D texture");const r=await(async(e,t)=>{if("3d"!==t.dimension)throw new Error("Input texture should be a 3D texture");const n=e.createTexture({size:{width:t.width,height:t.height,depthOrArrayLayers:t.depthOrArrayLayers},format:t.format,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT,dimension:"2d",mipLevelCount:t.mipLevelCount}),r=e.createCommandEncoder();for(let e=0;e<t.mipLevelCount;e++)for(let i=0;i<t.depthOrArrayLayers>>e;i++)r.copyTextureToTexture({texture:t,mipLevel:e,origin:{x:0,y:0,z:i}},{texture:n,mipLevel:e,origin:{x:0,y:0,z:i}},{width:t.width>>e,height:t.height>>e,depthOrArrayLayers:1});return e.queue.submit([r.finish()]),await e.queue.onSubmittedWorkDone(),n})(e,t),i=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,texture:{viewDimension:"3d"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}]}),s=e.createBuffer({size:256*t.depthOrArrayLayers,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.UNIFORM,label:"z indices buffer"}),a=Array.from({length:t.depthOrArrayLayers},((e,t)=>t));for(let t=0;t<a.length;t++)e.queue.writeBuffer(s,256*t,new Uint32Array([a[t]]).buffer);const o=e.createRenderPipeline({layout:e.createPipelineLayout({bindGroupLayouts:[i]}),vertex:{module:e.createShaderModule({code:"\n          struct VertexOutput {\n            @builtin(position) Position : vec4<f32>,\n          }\n          const pos = array(\n              vec2( 1.0,  1.0),\n              vec2( 1.0, -1.0),\n              vec2(-1.0, -1.0),\n              vec2( 1.0,  1.0),\n              vec2(-1.0, -1.0),\n              vec2(-1.0,  1.0),\n            );\n          @vertex\n          fn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n            var output : VertexOutput;\n            output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n            return output;\n          }"}),entryPoint:"vertex_main"},fragment:{module:e.createShaderModule({code:"\n          @group(0) @binding(0) var voxels : texture_3d<f32>;\n          @group(0) @binding(1) var<uniform> zIndex: u32;\n          @fragment\nfn fragment_main(@builtin(position) position : vec4<f32>) -> @location(0) vec4<f32> {\n  let srcTexel = vec3(vec2<u32>(position.xy),zIndex);\n  var colours = array<f32, 8>();\n  var isOctantEmpty = true;\n  for(var x = u32(0); x < 2; x++){\n    for(var y = u32(0); y < 2; y++){\n      for(var z = u32(0); z < 2; z++){\n        let voxelX = srcTexel.x * 2 + x;\n        let voxelY = srcTexel.y * 2 + y;\n        let voxelZ = srcTexel.z * 2 + z;\n        var voxelId = vec3<u32>(voxelX,voxelY,voxelZ);\n        var voxel = textureLoad(voxels,voxelId,0).r;\n        if(voxel > 0){\n          var index = x + y * 2 + z * 4;\n          colours[index] = voxel;\n          isOctantEmpty = false;\n        }\n      }\n    }\n  }\n\n  // If all voxels in the octant are empty, keep it blank\n  if(isOctantEmpty){\n    discard;\n  }\n\n  // Get the most common colour in the octant\n  var mostCommonColour = f32(0);\n  var mostCommonColourCount = u32(0);\n  for(var i = u32(0); i < 8; i = i + 1u){\n    var colour = colours[i];\n    var count = u32(0);\n    for(var j = u32(0); j < 8; j = j + 1u){\n      if(colour > 0 && colour == colours[j]){\n        count++;\n      }\n    }\n    if(count > mostCommonColourCount){\n      mostCommonColour = colour;\n      mostCommonColourCount = count;\n    }\n  }\n\n  return vec4(mostCommonColour, 0,0,0);\n}\n\n\n        "}),entryPoint:"fragment_main",targets:[{format:t.format}]}}),l=e.createCommandEncoder(),u=Math.max(1,t.depthOrArrayLayers>>n);for(let a=0;a<u;a++){const u=e.createBindGroup({layout:i,entries:[{binding:0,resource:t.createView({label:`${n} mip level of volume texture`,dimension:"3d",baseMipLevel:n-1,mipLevelCount:1})},{binding:1,resource:{buffer:s,offset:256*a,size:4}}]}),c=l.beginRenderPass({colorAttachments:[{view:r.createView({label:"volume slice for rendering mips",baseArrayLayer:a,arrayLayerCount:1,baseMipLevel:n,mipLevelCount:1,dimension:"2d-array"}),loadOp:"clear",clearValue:[0,0,0,0],storeOp:"store"}]});c.setPipeline(o),c.setBindGroup(0,u),c.draw(6),c.end()}return e.queue.submit([l.finish()]),await e.queue.onSubmittedWorkDone(),await(async(e,t)=>{if("2d"!==t.dimension)throw new Error("Input texture should be a 2D texture");const n=e.createTexture({size:{width:t.width,height:t.height,depthOrArrayLayers:t.depthOrArrayLayers},format:t.format,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING,dimension:"3d",mipLevelCount:t.mipLevelCount}),r=e.createCommandEncoder();for(let e=0;e<t.mipLevelCount;e++)for(let i=0;i<t.depthOrArrayLayers>>e;i++)r.copyTextureToTexture({texture:t,mipLevel:e,origin:{x:0,y:0,z:i}},{texture:n,mipLevel:e,origin:{x:0,y:0,z:i}},{width:t.width>>e,height:t.height>>e,depthOrArrayLayers:1});return e.queue.submit([r.finish()]),await e.queue.onSubmittedWorkDone(),n})(e,r)},s={format:r.dn,usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING,dimension:"3d"},a=(e,t)=>Math.ceil(e/t)*t,o=Math.pow(2,r.Wq-1),l=o,u=256;class c{#A={};#T;#S;#o;#P;#M;#E;constructor(e){this.#o=e,this.#T=e.createTexture({size:{width:l,height:l,depthOrArrayLayers:l},...s,label:"Volume atlas containing ",mipLevelCount:r.Wq}),this.#S=e.createTexture({size:{width:u,height:1,depthOrArrayLayers:1},format:"rgba8unorm",usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING,label:"Palette texture",mipLevelCount:1}),this.#P=this.#T.createView(),this.#M=this.#S.createView(),this.#E=e.createBuffer({size:0,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC,mappedAtCreation:!0,label:"Octree buffer"})}get dictionary(){return this.#A}addVolume=async(e,t,n,r)=>{if(this.#A[n])throw new Error(`Error adding volume to atlas: volume with label ${n} already exists`);const l=this.#o.createCommandEncoder(),{width:c,height:h,depthOrArrayLayers:d}=e,f=a(c,o),p=a(h,o),m=a(d,o),g=this.#T.width+f;if(g>this.#o.limits.maxTextureDimension3D)throw new Error(`Error adding volume to atlas: adding volume would exceed device max texture dimension of ${this.#o.limits.maxTextureDimension3D}`);const v=Math.max(this.#T.height,p),x=Math.max(this.#T.depthOrArrayLayers,m),y=this.#o.createTexture({size:{width:g,height:v,depthOrArrayLayers:x},mipLevelCount:this.#T.mipLevelCount,...s,label:`${this.#T.label}, ${e.label||"unnamed volume"}`}),_=this.#T.width;l.copyTextureToTexture({texture:this.#T},{texture:y},{width:this.#T.width,height:this.#T.height,depthOrArrayLayers:this.#T.depthOrArrayLayers}),l.copyTextureToTexture({texture:e,mipLevel:0,origin:{x:0,y:0,z:0}},{texture:y,mipLevel:0,origin:{x:_,y:0,z:0}},{width:e.width,height:e.height,depthOrArrayLayers:e.depthOrArrayLayers}),this.#T=y;const b=this.#S.height;this.#A[n]={location:[_,0,0],size:[c,h,d],paletteIndex:b,octreeOffset:this.#E.size,octreeSizeBytes:r.byteLength,textureSizeBytes:e.width*e.height*e.depthOrArrayLayers};const w=this.#o.createTexture({size:{width:u,height:this.#S.height+1,depthOrArrayLayers:1},format:"rgba8unorm",usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING,label:"Palette texture",mipLevelCount:1});l.copyTextureToTexture({texture:this.#S},{texture:w},{width:u,height:this.#S.height,depthOrArrayLayers:1}),l.copyTextureToTexture({texture:t},{texture:w,origin:{x:0,y:b,z:0}},{width:u,height:1,depthOrArrayLayers:1}),this.#S=w;const k=this.#o.createBuffer({label:"Octree buffer",size:this.#E.size+r.byteLength,usage:this.#E.usage});this.#o.queue.writeBuffer(k,0,this.#E.getMappedRange()),this.#o.queue.writeBuffer(k,this.#E.size,r),this.#o.queue.submit([l.finish()]),await this.#o.queue.onSubmittedWorkDone(),this.#E=k;{const e=this.#o.createBuffer({label:"Octree buffer copy",size:this.#E.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),t=this.#o.createCommandEncoder();t.copyBufferToBuffer(this.#E,0,e,0,this.#E.size),this.#o.queue.submit([t.finish()]),await this.#o.queue.onSubmittedWorkDone(),await e.mapAsync(GPUMapMode.READ);const n=e.getMappedRange(0,16);console.log(new Uint8Array(n))}this.#T=await(async(e,t)=>{if("3d"!==t.dimension)throw new Error("Input texture should be a 3D texture");let n=t;for(let r=1;r<t.mipLevelCount;r++)n=await i(e,n,r);return n})(this.#o,this.#T),this.#P=this.#T.createView(),this.#M=this.#S.createView()};get atlasTextureView(){return this.#P}get paletteTextureView(){return this.#M}get octreeBuffer(){return this.#E}}},9398:(e,t,n)=>{n.a(e,(async(e,r)=>{try{n.d(t,{Q:()=>l});var i=n(6300),s=n(8024),a=e([s]);s=(a.then?(await a)():a)[0];const o=e=>{let t=i.eR.create(1/0,1/0,1/0),n=i.eR.create(-1/0,-1/0,-1/0);for(const r of e)t=i.eR.min(t,r),n=i.eR.max(n,r);return{min:t,max:n}};class l extends s.M{#O;#I;#U;#C;#B;#z;constructor({position:e,rotation:t,scale:n,size:r,atlasLocation:i,name:s="unnamed",paletteIndex:a,octreeBufferIndex:o}){super({position:e,rotation:t,scale:n}),this.#O=Symbol(),this.#I=s,this.#U=r,this.#C=i,this.#B=a,this.#z=o}get objectSpaceCorners(){return[i.eR.create(0,0,0),i.eR.create(0,0,this.#U[2]),i.eR.create(0,this.#U[1],0),i.eR.create(0,this.#U[1],this.#U[2]),i.eR.create(this.#U[0],0,0),i.eR.create(this.#U[0],0,this.#U[2]),i.eR.create(this.#U[0],this.#U[1],0),i.eR.create(this.#U[0],this.#U[1],this.#U[2])]}get worldSpaceCorners(){return this.objectSpaceCorners.map((e=>i.eR.transformMat4(e,this.transform)))}get AABB(){return o(this.worldSpaceCorners)}get size(){return this.#U}toArray(){return[...this.transform,...this.inverseTransform,...this.previousTransform,...this.previousInverseTransform,...this.#U,0,...this.#C,this.#B,0,0,0,this.#z]}}r()}catch(e){r(e)}}))},2301:e=>{e.exports="@group(0) @binding(0) var mySampler : sampler;\n@group(0) @binding(1) var myTexture : texture_2d<f32>;\n//@group(0) @binding(2) var debugTexture : texture_2d<f32>;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n}\n\n@vertex\nfn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n  const pos = array(\n    vec2( 1.0,  1.0),\n    vec2( 1.0, -1.0),\n    vec2(-1.0, -1.0),\n    vec2( 1.0,  1.0),\n    vec2(-1.0, -1.0),\n    vec2(-1.0,  1.0),\n  );\n\n  const uv = array(\n    vec2(1.0, 0.0),\n    vec2(1.0, 1.0),\n    vec2(0.0, 1.0),\n    vec2(1.0, 0.0),\n    vec2(0.0, 1.0),\n    vec2(0.0, 0.0),\n  );\n\n  var output : VertexOutput;\n  output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n  output.fragUV = uv[VertexIndex];\n  return output;\n}\n\nfn get_debug_colour(index : i32) -> vec4<f32> {\n  if(index < 0){\n    return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n  }\n\n  let colours = array(\n    vec4<f32>(1.0, 0.0, 0.0, 1.0),\n    vec4<f32>(0.0, 1.0, 0.0, 1.0),\n    vec4<f32>(0.0, 0.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 0.0, 1.0),\n    vec4<f32>(1.0, 0.0, 1.0, 1.0),\n    vec4<f32>(0.0, 1.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 1.0, 1.0),\n    vec4<f32>(0.0, 0.0, 0.0, 1.0),\n  );\n  return colours[index % 8];\n}\n\n@fragment\nfn fragment_main(@location(0) fragUV : vec2<f32>) -> @location(0) vec4<f32> {\n    let pixel = fragUV * vec2<f32>(textureDimensions(myTexture));\n    var colour = textureLoad(myTexture, vec2<u32>(pixel),0);\n    return abs(colour);\n//    return colour;\n//    return abs(colour) % 8.0 * 0.125;\n//    return colour.gggg * 0.5;\n//    return (colour.rrrr * 500.0 % 1.0);\n//    return get_debug_colour(i32(colour.a));\n}\n"},3405:e=>{e.exports="struct ViewProjectionMatrices {\n  viewProjection : mat4x4<f32>,\n  previousViewProjection : mat4x4<f32>,\n  inverseViewProjection : mat4x4<f32>,\n  previousInverseViewProjection : mat4x4<f32>,\n  projection : mat4x4<f32>,\n  inverseProjection: mat4x4<f32>\n};\n\n\nfn plainIntersect(ro: vec3<f32>, rd: vec3<f32>, p: vec4<f32>) -> f32 {\n    return -(dot(ro, p.xyz) + p.w) / dot(rd, p.xyz);\n}\n\nfn getVelocityStatic(worldPos: vec3<f32>, viewProjections:ViewProjectionMatrices) -> vec2<f32>{\n  let vp = viewProjections.viewProjection;\n  let previousVp = viewProjections.previousViewProjection;\n\n  let clipSpace = vp * vec4(worldPos.xyz, 1.0);\n  let previousClipSpace = previousVp * vec4(worldPos.xyz, 1.0);\n\n  let ndc = clipSpace.xyz / clipSpace.w;\n  let previousNdc = previousClipSpace.xyz / previousClipSpace.w;\n\n  var uv = ndc.xy * 0.5 + 0.5;\n  var previousUv = previousNdc.xy * 0.5 + 0.5;\n\n  var velocity = previousUv - uv;\n  return velocity;\n}\n\nfn getVelocity(objectPos: vec3<f32>, modelMatrix: mat4x4<f32>, previousModelMatrix: mat4x4<f32>, viewProjections: ViewProjectionMatrices) -> vec2<f32> {\n  let vp = viewProjections.viewProjection;\n  let previousVp = viewProjections.previousViewProjection;\n\n  // Get current object space position of the current pixel\n  let objectClipSpace = vp * modelMatrix * vec4(objectPos.xyz, 1.0);\n  let objectNDC = objectClipSpace.xyz / objectClipSpace.w;\n\n  // Get previous position of the current object space position\n  let previousObjectClipSpace = previousVp * previousModelMatrix * vec4(objectPos.xyz, 1.0);\n  let previousObjectNDC = previousObjectClipSpace.xyz / previousObjectClipSpace.w;\n\n  // UV\n  var uv = objectNDC.xy * 0.5 + 0.5;\n  var previousUv = previousObjectNDC.xy * 0.5 + 0.5;\n  uv.y = 1.0 - uv.y;\n  previousUv.y = 1.0 - previousUv.y;\n\n  // Get velocity based on the difference between the current and previous positions\n  var velocity = previousUv - uv;\n  return velocity;\n}\n\nfn getLeftChildIndex(index: i32) -> i32 {\n  return index * 2 + 1;\n}\n\nfn getRightChildIndex(index: i32) -> i32 {\n  return index * 2 + 2;\n}\n\nfn getParentIndex(index: i32) -> i32 {\n  return (index - 1) / 2;\n}\n\n\nfn dirIsNegative(dir: vec3<f32>, axis: i32) -> bool {\n  return dir[axis] < 0.0;\n}\n\nfn getDebugColour(index: i32) -> vec3<f32> {\n  let colours = array<vec3<f32>, 6>(\n    vec3<f32>(1.0, 0.0, 0.0),\n    vec3<f32>(0.0, 1.0, 0.0),\n    vec3<f32>(0.0, 0.0, 1.0),\n    vec3<f32>(1.0, 1.0, 0.0),\n    vec3<f32>(1.0, 0.0, 1.0),\n    vec3<f32>(0.0, 1.0, 1.0)\n  );\n  return colours[index % 6];\n}\n\n\nfn customNormalize(value: f32, min: f32, max: f32) -> f32 {\n    return (value - min) / (max - min);\n}\n\nconst IDENTITY_MATRIX = mat4x4<f32>(\n  vec4<f32>(1.0, 0.0, 0.0, 0.0),\n  vec4<f32>(0.0, 1.0, 0.0, 0.0),\n  vec4<f32>(0.0, 0.0, 1.0, 0.0),\n  vec4<f32>(0.0, 0.0, 0.0, 1.0)\n);\n\nfn intersectSphere(origin: vec3<f32>, dir: vec3<f32>, spherePos: vec3<f32>, sphereRad: f32) -> f32\n{\n\tlet oc = origin - spherePos;\n\tlet b = 2.0 * dot(dir, oc);\n\tlet c = dot(oc, oc) - sphereRad*sphereRad;\n\tlet disc = b * b - 4.0 * c;\n\tif (disc < 0.0)\n\t{\n\t  return -1.0;\n\t}\n\n//    float q = (-b + ((b < 0.0) ? -sqrt(disc) : sqrt(disc))) / 2.0;\n  let q = (-b + select(sqrt(disc), -sqrt(disc), b < 0.0)) / 2.0;\n\tvar t0 = q;\n\tvar t1 = c / q;\n\tif (t0 > t1) {\n\t\tvar temp = t0;\n\t\tt0 = t1;\n\t\tt1 = temp;\n\t}\n\tif (t1 < 0.0){\n\t  return -1.0;\n\t}\n\n  return select(t0, t1, t0 < 0.0);\n}\n\nfn skyDomeIntersection(ro: vec3<f32>, rd: vec3<f32>) -> f32 {\n    return intersectSphere(ro, rd, vec3<f32>(0.0, 0.0, 0.0), 100.0);\n}\n\nfn reprojectWorldPos(worldPos: vec3<f32>, viewProjections: ViewProjectionMatrices) -> vec3<f32> {\n  let clipSpace = viewProjections.previousViewProjection * vec4(worldPos.xyz, 1.0);\n  return 0.5 * (clipSpace.xyz / clipSpace.w) + 0.5;\n}\n\nfn reprojectObjectWorldPos(worldPos: vec3<f32>, previousModelMatrix: mat4x4<f32>, viewProjections: ViewProjectionMatrices) -> vec3<f32> {\n  let clipSpace = viewProjections.previousViewProjection * previousModelMatrix * vec4(worldPos.xyz, 1.0);\n  return 0.5 * (clipSpace.xyz / clipSpace.w) + 0.5;\n}\n\nfn tracePixel(pixel: vec2<u32>){\n   let resolution = textureDimensions(albedoTex);\n   var uv = vec2<f32>(pixel) / vec2<f32>(resolution);\n   let rayDirection = calculateRayDirection(uv,viewProjections.inverseViewProjection);\n    var rayOrigin = cameraPosition;\n    var closestIntersection = RayMarchResult();\n\n    let bvhResult = rayMarchBVH(rayOrigin, rayDirection);\n//    if(!bvhResult.hit){\n//      textureStore(albedoTex, pixel, vec4(0));\n//      textureStore(normalTex, pixel, vec4(0));\n//      textureStore(depthWrite, pixel, vec4(0));\n//      let worldPos = rayOrigin + skyDomeIntersection(rayOrigin, rayDirection) * rayDirection;\n//      let velocity = getVelocityStatic(worldPos, viewProjections);\n//      textureStore(velocityTex, pixel, vec4(velocity,0, -1.0));\n//      return;\n//    }\n    closestIntersection = bvhResult;\n\n    let voxelObject = voxelObjects[closestIntersection.voxelObjectIndex];\n    let paletteX = i32(closestIntersection.palettePosition * 255.0);\n    let paletteY = i32(voxelObject.paletteIndex);\n    let albedo = textureLoad(paletteTex, vec2(paletteX, paletteY), 0).rgb;\n    let normal = transformNormal(voxelObject.inverseTransform,vec3<f32>(closestIntersection.normal));\n    let worldPos = rayOrigin + rayDirection * closestIntersection.t;\n    let velocity = getVelocityStatic(worldPos, viewProjections);\n    let cameraDistance = closestIntersection.t;\n//    let normalisedDepth = distanceToReversedLinearDepth(cameraDistance, NEAR_PLANE, FAR_PLANE);\nlet logDepth = distanceToLogarithmicDepth(cameraDistance, NEAR_PLANE, FAR_PLANE);\n\n//    textureStore(albedoTex, pixel, vec4(albedo, 1));\n//    if(!bvhResult.hit){\n\n      var debugColour = vec4(f32(closestIntersection.iterations)/ 128.0);\n       if(closestIntersection.iterations > 8){\n          debugColour = vec4(0,f32(closestIntersection.iterations)/ 64.0,f32(closestIntersection.iterations)/ 64.0,1);\n      }\n      if(closestIntersection.iterations > 16){\n        debugColour = vec4(0,f32(closestIntersection.iterations)/ 64.0,0,1);\n      }\n      if(closestIntersection.iterations > 32){\n        debugColour = vec4(f32(closestIntersection.iterations)/ 64.0,0,0,1);\n      }\n      textureStore(albedoTex, pixel, debugColour);\n//    }\n    textureStore(normalTex, pixel, vec4(normal,1));\n    textureStore(velocityTex, pixel, vec4(velocity,0,f32(closestIntersection.voxelObjectIndex)));\n    textureStore(depthWrite, pixel, vec4(logDepth));\n}\n\n@compute @workgroup_size(16, 8, 1)\nfn main(\n   @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>,\n) {\n  let pixel = GlobalInvocationID.xy;\n  tracePixel(pixel);\n}\n\n@group(1) @binding(0) var<storage, read> screenRayBuffer : array<vec2<u32>>;\n\nconst REMAINING_RAY_OFFSETS = array<vec2<u32>, 8>(\n  vec2<u32>(0,1),\n  vec2<u32>(1,0),\n  vec2<u32>(1,1),\n  vec2<u32>(2,0),\n  vec2<u32>(2,1),\n  vec2<u32>(0,2),\n  vec2<u32>(1,2),\n  vec2<u32>(2,2)\n);\n\n@compute @workgroup_size(64, 1, 1)\nfn bufferMarch(\n  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>,\n  @builtin(local_invocation_id) LocalInvocationID : vec3<u32>,\n  @builtin(workgroup_id) WorkGroupID : vec3<u32>,\n) {\n  let bufferIndex = GlobalInvocationID.x / 8;\n  let localRayIndex = GlobalInvocationID.x % 8;\n  let pixel = screenRayBuffer[bufferIndex];\n  let offsetPixel = pixel + REMAINING_RAY_OFFSETS[localRayIndex];\n\n  tracePixel(offsetPixel);\n//  textureStore(depthWrite, offsetPixel, vec4(0,0,0,0));\n//   textureStore(albedoTex, offsetPixel, vec4(1,0,0,1));\n}"},3091:e=>{e.exports="struct ViewProjectionMatrices {\n  viewProjection : mat4x4<f32>,\n  previousViewProjection : mat4x4<f32>,\n  inverseViewProjection : mat4x4<f32>,\n  previousInverseViewProjection : mat4x4<f32>,\n  projection : mat4x4<f32>,\n  inverseProjection: mat4x4<f32>\n};\n\nstruct VoxelObject {\n  transform: mat4x4<f32>,\n  inverseTransform: mat4x4<f32>,\n  previousTransform: mat4x4<f32>,\n  previousInverseTransform: mat4x4<f32>,\n  size : vec3<f32>,\n  atlasLocation : vec3<f32>,\n  paletteIndex : f32,\n  octreeBufferIndex: u32\n}\n\n// Textures\n@group(0) @binding(0) var albedoTex : texture_storage_2d<rgba8unorm, write>;\n@group(0) @binding(1) var albedoCopyTex : texture_2d<f32>;\n@group(0) @binding(2) var velocityTex : texture_storage_2d<rgba16float, write>;\n@group(0) @binding(3) var velocityCopyTex : texture_2d<f32>;\n@group(0) @binding(4) var depthTex : texture_storage_2d<r32float, write>;\n@group(0) @binding(5) var depthCopyTex : texture_2d<f32>;\n@group(0) @binding(6) var normalTex : texture_storage_2d<rgba16float, write>;\n@group(0) @binding(7) var normalCopyTex : texture_2d<f32>;\n\n// Camera\n@group(1) @binding(0) var<uniform> cameraPosition : vec3<f32>;\n@group(1) @binding(1) var<uniform> viewProjections : ViewProjectionMatrices;\n\n// Voxels\n@group(2) @binding(0) var<storage> voxelObjects : array<VoxelObject>;\n@group(2) @binding(1) var volumeAtlasTex : texture_3d<f32>;\n@group(2) @binding(2) var paletteTex : texture_2d<f32>;\n\n// Screen Rays\nstruct ScreenRay {\n  pixel : vec2<u32>,\n};\n@group(3) @binding(0) var<storage, read_write> indirectArgs : array<atomic<u32>>;\n@group(3) @binding(1) var<storage, read_write> screenRays : array<ScreenRay>;\n@group(3) @binding(2) var<storage, read_write> counter : array<atomic<u32>>;\n\nconst neighborOffsets = array<vec2<i32>, 4>(\n  vec2<i32>(0, 0),\n  vec2<i32>(3, 0),\n  vec2<i32>(0, 3),\n  vec2<i32>(3, 3)\n);\n\n// Normal is in voxel (object) space, so will only have 1 or -1 values on one axis\nfn isOnSharedPlane(\n  normal : vec3<f32>,\n  voxelPos : vec3<f32>,\n  neighborVoxelPos : vec3<f32>,\n  neighborNormal : vec3<f32>\n) -> bool {\n  let epsilon = 0.001;\n  if(abs(neighborNormal.y) > 0.0 && abs(normal.y) > 0.0){\n    return abs(voxelPos.y - neighborVoxelPos.y) < epsilon;\n  }\n  if(abs(neighborNormal.x) > 0.0 && abs(normal.x) > 0.0){\n    return abs(voxelPos.x - neighborVoxelPos.x) < epsilon;\n  }\n  if(abs(neighborNormal.z) > 0.0 && abs(normal.z) > 0.0){\n    return abs(voxelPos.z - neighborVoxelPos.z) < epsilon;\n  }\n  return false;\n}\n\nconst NEAR_PLANE = 0.5;\nconst FAR_PLANE = 10000.0;\n\nconst REMAINING_RAY_OFFSETS = array<vec2<u32>, 8>(\n  vec2<u32>(0,1),\n  vec2<u32>(1,0),\n  vec2<u32>(1,1),\n  vec2<u32>(2,0),\n  vec2<u32>(2,1),\n  vec2<u32>(0,2),\n  vec2<u32>(1,2),\n  vec2<u32>(2,2)\n);\n\n// Increment the count of the ray buffers, and only increment the dispatch indirect args every 8 rays, due to the 64x1x1 workgroup size (8 ray groups, 8 rays per group)\nfn incrementCounters() -> u32{\n  let count = atomicAdd(&counter[0], 1);\n  if(count % 8 == 0){\n   atomicAdd(&indirectArgs[0], 1);\n  }\n  return count;\n}\n\n/**\n  * Interpolate the depth, normal and uv of the pixel from the 4 nearest neighbors\n  * if not valid for interpolation, add to a ray buffer for use in the next pass\n  * Ray buffer is a list of pixel groups that need to be re-marched at full resolution\n  * The stored value is the origin of the group ([0,0] in a [3x3] kernel)\n  */\n@compute @workgroup_size(16, 16, 1)\n fn main(\n  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>,\n) {\n  let texSize = textureDimensions(albedoCopyTex);\n  let pixel = vec2<i32>(GlobalInvocationID.xy);\n  let uv = vec2<f32>(pixel) / vec2<f32>(texSize);\n  let nearestFilledPixel = (pixel / 3) * 3;\n  let isOriginPixel = all(pixel == nearestFilledPixel);\n\n  let isCornerPixel = all(pixel == nearestFilledPixel + vec2(2));\n  let nearestUV = vec2<f32>(nearestFilledPixel) / vec2<f32>(texSize);\n  let velocityRef = textureLoad(velocityCopyTex, nearestFilledPixel, 0);\n  let depthRef = textureLoad(depthCopyTex, nearestFilledPixel, 0).r;\n  let distanceToSurface = logarithmicDepthToDistance(depthRef, NEAR_PLANE, FAR_PLANE);\n\n  // disable interpolation for distances greater than 1000, due to precision issues\n//  if(distanceToSurface > 9000){\n//    if(isOriginPixel){\n//      // Add to ray buffer\n//      let count = incrementCounters();\n//      screenRays[count].pixel = vec2<u32>(pixel);\n//    }else{\n//      textureStore(albedoTex, pixel, vec4(0.0, 0.0, 0.0, 1.0));\n//      textureStore(normalTex, pixel, vec4(0.0, 0.0, 0.0, 1.0));\n//      textureStore(velocityTex, pixel, vec4(velocityRef.xyz, -1.0));\n//      textureStore(depthTex, pixel, vec4(0.0));\n//    }\n//    return;\n//  }\n\n  var hasFoundObject = false;\n  // Check if each neightbor is the same object\n  for(var i = 1; i < 4; i = i + 1) {\n    let objectIndex = textureLoad(velocityCopyTex, nearestFilledPixel + neighborOffsets[i], 0).a;\n    if(objectIndex != velocityRef.a) {\n       if(isOriginPixel){\n         // Add to ray buffer\n         let count = incrementCounters();\n         screenRays[count].pixel = vec2<u32>(pixel);\n       }\n       return;\n    }\n    if(objectIndex != -1.0) {\n      hasFoundObject = true;\n    }\n  }\n  if(!hasFoundObject) {\n    // Dont march any more rays - we have hit the sky\n    textureStore(velocityTex, pixel, vec4(velocityRef.xyz, -1.0));\n    textureStore(depthTex, pixel, vec4(0.0));\n    textureStore(normalTex, pixel, vec4(0.0, 0.0, 0.0, 1.0));\n    textureStore(albedoTex, pixel, vec4(0.0, 0.0, 0.0, 1.0));\n    return;\n  }\n  let voxelObject = voxelObjects[i32(velocityRef.a)];\n\n  let normalRef = textureLoad(normalCopyTex, nearestFilledPixel, 0).xyz;\n  let localNormal = (voxelObject.inverseTransform * vec4(normalRef, 0.0)).xyz;\n  let rayDirection = calculateRayDirection(nearestUV, viewProjections.inverseViewProjection);\n  let worldPosRef = cameraPosition + rayDirection * distanceToSurface;\n  let localPosRef = (voxelObject.inverseTransform * vec4(worldPosRef, 1.0)).xyz;\n  let voxelPosRef = floor(localPosRef);\n\n  // Check if each neightbor is the same voxel plane\n  for(var i = 0; i < 4; i = i + 1) {\n    let neighborPixel = nearestFilledPixel + neighborOffsets[i];\n    let neighborUV = vec2<f32>(neighborPixel) / vec2<f32>(texSize);\n    let neighborDepth = textureLoad(depthCopyTex, neighborPixel, 0).r;\n    let neighborNormal = textureLoad(normalCopyTex, neighborPixel, 0).xyz;\n    let neighborLocalNormal = (voxelObject.inverseTransform * vec4(neighborNormal, 0.0)).xyz;\n    let neighborRayDirection = calculateRayDirection(neighborUV, viewProjections.inverseViewProjection);\n    let neighborWorldPos = cameraPosition + neighborRayDirection * logarithmicDepthToDistance(neighborDepth, NEAR_PLANE, FAR_PLANE);\n    let neighborLocalPos = (voxelObject.inverseTransform * vec4(neighborWorldPos, 1.0)).xyz;\n    let neighborVoxelPos = floor(neighborLocalPos);\n\n    if(!isOnSharedPlane(localNormal, voxelPosRef, neighborVoxelPos, neighborLocalNormal)) {\n      if(isOriginPixel){\n        // Add to ray buffer\n        let count = incrementCounters();\n        screenRays[count].pixel = vec2<u32>(pixel);\n      }else{\n        textureStore(albedoTex, pixel, vec4(0.0, 0.0, 0.0, 1.0));\n        textureStore(normalTex, pixel, vec4(0.0, 0.0, 0.0, 1.0));\n        textureStore(velocityTex, pixel, vec4(velocityRef.xyz, -1.0));\n        textureStore(depthTex, pixel, vec4(0.0));\n      }\n      return;\n    }\n  }\n\n  let pixel0 = nearestFilledPixel;\n  let pixel1 = nearestFilledPixel + vec2<i32>(3, 0);\n  let pixel2 = nearestFilledPixel + vec2<i32>(0, 3);\n  let pixel3 = nearestFilledPixel + vec2<i32>(3, 3);\n\n  // Interpolate\n  let normal0 = normalRef;\n  let normal1 = textureLoad(normalCopyTex, pixel1, 0).xyz;\n  let normal2 = textureLoad(normalCopyTex, pixel2, 0).xyz;\n  let normal3 = textureLoad(normalCopyTex, pixel3, 0).xyz;\n\n  let depth0 = depthRef;\n  let depth1 = textureLoad(depthCopyTex, pixel1, 0).r;\n  let depth2 = textureLoad(depthCopyTex, pixel2, 0).r;\n  let depth3 = textureLoad(depthCopyTex, pixel3, 0).r;\n\n  let xInterp = f32(pixel.x) % 3.0 / 3.0;\n  let yInterp = f32(pixel.y) % 3.0 / 3.0;\n\n  let depthBottom = mix(depth0, depth1, xInterp);\n  let depthTop = mix(depth2, depth3, xInterp);\n  let depth = mix(depthBottom, depthTop, yInterp);\n\n  let normalTop = mix(normal0, normal1, xInterp);\n  let normalBottom = mix(normal2, normal3, xInterp);\n  let normal = mix(normalTop, normalBottom, yInterp);\n\n  let worldPos =\n    cameraPosition\n    + calculateRayDirection(uv, viewProjections.inverseViewProjection)\n    * logarithmicDepthToDistance(depth, NEAR_PLANE, FAR_PLANE);\n\n  let localPos = (voxelObject.inverseTransform * vec4(worldPos, 1.0)).xyz;\n  let voxelPos = floor(localPos);\n  let atlasSamplePos = vec3<i32>(voxelObject.atlasLocation + voxelPos);\n  let palettePos = textureLoad(volumeAtlasTex, atlasSamplePos, 0).r;\n  let paletteX = i32(palettePos* 255.0);\n  let paletteY = i32(voxelObject.paletteIndex);\n  let albedo = textureLoad(paletteTex, vec2(paletteX, paletteY), 0).rgb;\n\n  textureStore(albedoTex, pixel, vec4(albedo, 1.0));\n  textureStore(velocityTex, pixel, velocityRef);\n  textureStore(depthTex, pixel, vec4(depth));\n  textureStore(normalTex, pixel, vec4(normal, 1.0));\n\n}"},8223:e=>{e.exports="struct BoxIntersectionResult {\n    tNear: f32,\n    tFar: f32,\n    normal: vec3<f32>,\n    isHit: bool,\n}\n\nfn simpleBoxIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n) -> vec2<f32> {\n  let m = 1.0/rd; // can precompute if traversing a set of aligned boxes\n  let n = m*ro;   // can precompute if traversing a set of aligned boxes\n  let k = abs(m)*boxSize;\n  let t1 = -n - k;\n  let t2 = -n + k;\n  let tN = max( max( t1.x, t1.y ), t1.z );\n  let tF = min( min( t2.x, t2.y ), t2.z );\n  return vec2( tN, tF );\n}\n\nfn boxIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    result.isHit = false;\n    result.tNear = -1.0;\n    result.tFar = -1.0;\n\n    let offsetRayOrigin = ro - boxSize;\n    let m: vec3<f32> = 1.0 / rd;\n    let n: vec3<f32> = m * offsetRayOrigin;\n    let k: vec3<f32> = abs(m) * boxSize;\n    let t1: vec3<f32> = -n - k;\n    let t2: vec3<f32> = -n + k;\n    let tN: f32 = max(max(t1.x, t1.y), t1.z);\n    let tF: f32 = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) {\n        return result;\n    }\n    // Check if the ray starts inside the volume\n    let insideVolume = tN < 0.0;\n    var normal = select(\n        step(vec3<f32>(tN), t1),\n        step(t2, vec3<f32>(tF)),\n        tN < 0.0,\n    );\n    normal *= -sign(rd);\n    // Check if the intersection is in the correct direction, only if inside the volume\n    if (insideVolume && dot(normal, rd) < 0.0) {\n        return result;\n    }\n    result.tNear = tN;\n    result.tFar = tF;\n    result.normal = normal;\n    result.isHit = true;\n    return result;\n}\n\nfn get3x3From4x4(m: mat4x4<f32>) -> mat3x3<f32> {\n    return mat3x3<f32>(\n        m[0].xyz,\n        m[1].xyz,\n        m[2].xyz,\n    );\n}\n\n\nfn intersectOBB(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n    boxOrientation: mat3x3<f32>,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    result.isHit = false;\n    result.tNear = -1.0;\n    result.tFar = -1.0;\n\n    let offsetRayOrigin = ro - boxSize;\n    let m: vec3<f32> = 1.0 / rd;\n    let n: vec3<f32> = m * offsetRayOrigin;\n    let k: vec3<f32> = abs(m) * boxSize;\n    let t1: vec3<f32> = -n - k;\n    let t2: vec3<f32> = -n + k;\n    let tN: f32 = max(max(t1.x, t1.y), t1.z);\n    let tF: f32 = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) {\n        return result;\n    }\n    // Check if the ray starts inside the volume\n    let insideVolume = tN < 0.0;\n    var normal = select(\n        step(vec3<f32>(tN), t1),\n        step(t2, vec3<f32>(tF)),\n        tN < 0.0,\n    );\n    normal *= -sign(rd);\n    // Check if the intersection is in the correct direction, only if inside the volume\n    if (insideVolume && dot(normal, rd) < 0.0) {\n        return result;\n    }\n    result.tNear = tN;\n    result.tFar = tF;\n    result.normal = normal;\n    result.isHit = true;\n    return result;\n}"},8108:e=>{e.exports="const BRICK_SIZE = 8;\nconst MAX_STEPS = 256;\n\n\nstruct BVHNode {\n  leftIndex: i32,\n  rightIndex: i32,\n  objectCount: u32,\n  AABBMin: vec3<f32>,\n  AABBMax: vec3<f32>\n}\n\nfn getDistanceToNode(rayOrigin: vec3<f32>, rayDirection: vec3<f32>, node: BVHNode) -> f32 {\n  if(all(rayOrigin >= node.AABBMin) && all(rayOrigin <= node.AABBMax)){\n    return 0.0;\n  }\n  let boxSize = (node.AABBMax - node.AABBMin) / 2;\n  let intersection = boxIntersection(rayOrigin - node.AABBMin, rayDirection, boxSize);\n  if(intersection.isHit){\n    return intersection.tNear;\n  }\n  return -1.0;\n\n}\n\n// Stack-based BVH traversal\nfn rayMarchBVH(rayOrigin: vec3<f32>, rayDirection: vec3<f32>) -> RayMarchResult {\n  var closestIntersection = RayMarchResult();\n closestIntersection.t = FAR_PLANE;\n\n  // Create a stack to store the nodes to visit\n  var stack = stack_new();\n  stack_push(&stack, 0);\n\n  var iterations = 0;\n  var nodeIndex = 0;\n  var closestRayMarchDistance = FAR_PLANE;\n\n  while (stack.head > 0u && iterations < MAX_STEPS) {\n    let node = bvhNodes[nodeIndex];\n    if(node.objectCount > 1){\n      let leftNode = bvhNodes[node.leftIndex];\n      let rightNode = bvhNodes[node.rightIndex];\n      let leftDist = getDistanceToNode(rayOrigin, rayDirection, leftNode);\n      let rightDist = getDistanceToNode(rayOrigin, rayDirection, rightNode);\n      let hitLeft = leftDist >= 0.0;\n      let hitRight = rightDist >= 0.0;\n      if(hitLeft){\n        var nearIndex = node.leftIndex;\n        // We hit both left and right, choose the closest one\n        if(hitRight){\n          if(leftDist < rightDist){\n            // left is closer, push right to stack\n            stack_push(&stack, node.rightIndex);\n          } else {\n            // right is closer, push left to stack\n            stack_push(&stack, node.leftIndex);\n            nearIndex = node.rightIndex;\n          }\n        }\n        nodeIndex = nearIndex;\n      }\n      // We only hit the right Node\n      else if(hitRight){\n        nodeIndex = node.rightIndex;\n      }\n      // We didn't hit any node, pop the stack\n      else{\n        nodeIndex = stack_pop(&stack);\n      }\n    }\n    // valid leaf, raymarch it\n    else if(node.objectCount == 1){\n        let distanceToLeaf = getDistanceToNode(rayOrigin, rayDirection, node);\n        if(distanceToLeaf > closestRayMarchDistance){\n          nodeIndex = stack_pop(&stack);\n          continue;\n        }\n        let worldPos = rayOrigin + rayDirection * distanceToLeaf;\n        let voxelObject = voxelObjects[node.leftIndex];\n//         var rayMarchResult = rayMarchTransformed(voxelObject, rayDirection, worldPos, 0);\n        var rayMarchResult = rayMarchOctree(voxelObject, rayDirection, rayOrigin);\n        rayMarchResult.voxelObjectIndex = node.leftIndex;\n        rayMarchResult.t += distanceToLeaf;\n\n        let totalDistance = rayMarchResult.t;\n//        if(rayMarchResult.hit && totalDistance < closestRayMarchDistance){\n          closestIntersection = rayMarchResult;\n          closestRayMarchDistance = totalDistance;\n//        }\n\n        nodeIndex = stack_pop(&stack);\n    }\n\n    iterations += 1;\n//    closestIntersection.colour += vec3<f32>(0.0075);\n  }\n\n  return closestIntersection;\n}\n\nconst MAX_SHADOW_BVH_VISITS = 32;\n\nfn rayMarchBVHShadows(rayOrigin: vec3<f32>, rayDirection: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n   var closestIntersection = RayMarchResult();\n   closestIntersection.t = FAR_PLANE;\n\n   // Create a stack to store the nodes to visit\n   var stack = stack_new();\n   stack_push(&stack, 0);\n\n   var iterations = 0;\n   var nodeIndex = 0;\n\n   while (stack.head > 0u && iterations < MAX_SHADOW_BVH_VISITS) {\n     let node = bvhNodes[nodeIndex];\n     if(node.objectCount > 1){\n       let leftNode = bvhNodes[node.leftIndex];\n       let rightNode = bvhNodes[node.rightIndex];\n       let leftDist = getDistanceToNode(rayOrigin, rayDirection, leftNode);\n       let rightDist = getDistanceToNode(rayOrigin, rayDirection, rightNode);\n       let hitLeft = leftDist >= 0.0;\n       let hitRight = rightDist >= 0.0;\n       if(hitLeft){\n         var nearIndex = node.leftIndex;\n         // We hit both left and right, choose the closest one\n         if(hitRight){\n           if(leftDist < rightDist){\n             // left is closer, push right to stack\n             stack_push(&stack, node.rightIndex);\n           } else {\n             // right is closer, push left to stack\n             stack_push(&stack, node.leftIndex);\n             nearIndex = node.rightIndex;\n           }\n         }\n         nodeIndex = nearIndex;\n       }\n       // We only hit the right Node\n       else if(hitRight){\n         nodeIndex = node.rightIndex;\n       }\n       // We didn't hit any node, pop the stack\n       else{\n         nodeIndex = stack_pop(&stack);\n       }\n     }\n     // valid leaf, raymarch it\n     else if(node.objectCount == 1){\n         let distanceToLeaf = getDistanceToNode(rayOrigin, rayDirection, node);\n         if(distanceToLeaf < 0.0){\n           nodeIndex = stack_pop(&stack);\n           continue;\n         }\n         let worldPos = rayOrigin + rayDirection * distanceToLeaf;\n         let voxelObject = voxelObjects[node.leftIndex];\n//         var rayMarchResult = rayMarchOctree(voxelObject, rayDirection, worldPos, 3);\n         var rayMarchResult = rayMarchTransformed(voxelObject, rayDirection, worldPos, mipLevel);\n         rayMarchResult.t += distanceToLeaf;\n//\n         rayMarchResult.voxelObjectIndex = node.leftIndex;\n         if(rayMarchResult.hit){\n           return rayMarchResult;\n         }\n\n         nodeIndex = stack_pop(&stack);\n     }\n\n     iterations += 1;\n //    closestIntersection.colour += vec3<f32>(0.0075);\n   }\n\n   return closestIntersection;\n }"},9133:e=>{e.exports="// TODO: actually make linear\nfn distanceToReversedLinearDepth(cameraDistance: f32, near: f32, far: f32) -> f32 {\n  return (far - cameraDistance) / (far - near);//Reversed\n}\n\nfn reversedLinearDepthToDistance(linearDepth: f32, near: f32, far: f32) -> f32 {\n    return far - linearDepth * (far - near); //Reversed\n}\n\nfn distanceToLogarithmicDepth(cameraDistance: f32, near: f32, far: f32) -> f32 {\n    return log2(cameraDistance / near + 1.0) / log2(far / near + 1.0);\n}\n\nfn logarithmicDepthToDistance(logDepth: f32, near: f32, far: f32) -> f32 {\n    let base = far / near + 1.0;\n    return near * (pow(base, logDepth) - 1.0);\n}"},5805:e=>{e.exports="fn calculateRayDirection(uv: vec2<f32>, inverseProjection: mat4x4<f32>) -> vec3<f32> {\n  let clipSpace = vec2(1.0 - uv.x, 1.0 - uv.y) * 2.0 - 1.0;\n  let viewRay = vec3<f32>(clipSpace, 1.0);\n  let viewRayView = inverseProjection * vec4(viewRay, 1.0);\n  return normalize(viewRayView.xyz);\n}\n\nfn normaliseValue(min: f32, max: f32, value: f32) -> f32 {\n  return (value - min) / (max - min);\n}"},3307:e=>{e.exports="const EPSILON = 0.001;\nconst MAX_RAY_STEPS = 256;\nconst FAR_PLANE = 10000.0;\nconst NEAR_PLANE = 0.5;\nconst STACK_LEN: u32 = 32u;\n\n// Function to transform a normal vector from object to world space\nfn transformNormal(inverseTransform: mat4x4<f32>, normal: vec3<f32>) -> vec3<f32> {\n    let worldNormal = normalize((vec4<f32>(normal, 0.0) * inverseTransform).xyz);\n    return worldNormal;\n}\n\n// Function to transform an object space position to world space\nfn transformPosition(transform: mat4x4<f32>, position: vec3<f32>) -> vec3<f32> {\n    let worldPosition = (transform * vec4<f32>(position, 1.0)).xyz;\n    return worldPosition;\n}\n\nfn getMaxMipLevel(size: vec3<f32>) -> u32 {\n  return u32(log2(max(size.x, max(size.y, size.z))));\n}\n\nstruct Brick {\n  voxels: array<u32, 16>\n}\nstruct VoxelObject {\n  transform: mat4x4<f32>,\n  inverseTransform: mat4x4<f32>,\n  previousTransform: mat4x4<f32>,\n  previousInverseTransform: mat4x4<f32>,\n  size : vec3<f32>,\n  atlasLocation : vec3<f32>,\n  paletteIndex : f32,\n  octreeBufferIndex: u32\n}\n\nstruct RayMarchResult {\n  voxelObjectIndex: i32,\n  palettePosition: f32,\n  normal: vec3<f32>,\n  hit: bool,\n  t: f32,\n  iterations: u32,\n}\n\nfn isInBounds(position: vec3<i32>, size: vec3<i32>) -> bool {\n  return all(position >= vec3(0)) && all(position <= size - vec3(1));\n}\n\nfn getMipLevelFromVoxelSize(voxelSize: vec3<f32>) -> u32 {\n  return u32(log2(max(voxelSize.x, max(voxelSize.y, voxelSize.z))));\n}\n\nfn convert1DTo3D(size: vec3<u32>, index: u32) -> vec3<u32> {\n  return vec3(\n    index % size.x,\n    index / size.y,\n    index / (size.x * size.y)\n  );\n}\n\nfn convert3DTo1D(size: vec3<u32>, position: vec3<u32>) -> u32 {\n  return position.x + position.y * size.x + position.z * (size.x * size.y);\n}\n\n\nfn doesBrickContainVoxels(brick: Brick) -> bool {\n  for(var i = 0; i < 16; i++){\n    if(brick.voxels[i] > 0){\n      return true;\n    }\n  }\n  return false;\n}\n\nfn getBit(value: u32, bitIndex: u32) -> bool {\n  return (value & (1u << bitIndex)) != 0;\n}\n\n// gets bit in 512bit bitmask in a brick\n// bitIndex is the index of the bit in the bitmask, 0-511\nfn getBitInBrick(brick: Brick, bitIndex: u32) -> bool {\n  let maskIndex = bitIndex / 32;\n  let bitIndexInMask = bitIndex % 32;\n  return getBit(brick.voxels[maskIndex], bitIndexInMask);\n}\n\nfn getScaleFromMatrix(transform: mat4x4<f32>) -> vec3<f32> {\n  return vec3<f32>(length(transform[0].xyz), length(transform[1].xyz), length(transform[2].xyz));\n}\n\n\nfn rayMarchAtMip(voxelObject: VoxelObject, objectRayDirection: vec3<f32>, objectRayOrigin: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n  var output = RayMarchResult();\n  let rayDirSign = sign(objectRayDirection);\n  let atlasLocation = vec3<u32>(voxelObject.atlasLocation);\n  var voxelSize = vec3(f32(1 << mipLevel));\n  var shiftedRayOrigin = objectRayOrigin - objectRayDirection * EPSILON;\n  var objectPos = shiftedRayOrigin;\n  var currentIndex = vec3<i32>(floor(objectPos));\n  var scaledRayOrigin =  objectRayOrigin / voxelSize;\n  var scaledObjectPos = floor(objectPos / voxelSize);\n  var scaledOriginDifference = scaledObjectPos - scaledRayOrigin;\n  var tMax = voxelSize * (rayDirSign * scaledOriginDifference + (rayDirSign * 0.5) + 0.5) / abs(objectRayDirection);\n  let mask = vec3<f32>(tMax.xyz <= min(tMax.yzx, tMax.zxy));\n  var objectNormal = mask * -rayDirSign;\n  var tCurrent = min(tMax.x, min(tMax.y, tMax.z));\n\n  // RAYMARCH\n  for(var i = 0; i < MAX_RAY_STEPS; i++)\n  {\n    let samplePosition = vec3<u32>(currentIndex) + atlasLocation;\n    let mipSample0 = textureLoad(voxels, samplePosition / vec3((1u << mipLevel)), mipLevel);\n\n    if(mipSample0.r > 0.0 && isInBounds(currentIndex, vec3<i32>(voxelObject.size))){\n        output.normal = objectNormal;\n        output.hit = true;\n        output.t = tCurrent + EPSILON;\n        output.palettePosition = mipSample0.r;\n        return output;\n    }\n\n    var scaledRayOrigin = shiftedRayOrigin / voxelSize;\n    var scaledObjectPos = floor(objectPos / voxelSize);\n    var scaledOriginDifference = scaledObjectPos - scaledRayOrigin;\n    var tMax = voxelSize * (rayDirSign * scaledOriginDifference + (rayDirSign * 0.5) + 0.5) / abs(objectRayDirection);\n    let mask = vec3<f32>(tMax.xyz <= min(tMax.yzx, tMax.zxy));\n\n    tCurrent = min(tMax.x, min(tMax.y, tMax.z));\n    objectPos = objectRayOrigin + objectRayDirection * tCurrent;\n    currentIndex = vec3<i32>(floor(objectPos / voxelSize) * voxelSize);\n    objectNormal = mask * -rayDirSign;\n\n    if(!isInBounds(currentIndex, vec3<i32>(voxelObject.size))){\n        break;\n    }\n  }\n  return output;\n}\n\nfn rayMarchTransformed(voxelObject: VoxelObject, rayDirection: vec3<f32>, rayOrigin: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n      var objectRayOrigin = (voxelObject.inverseTransform * vec4<f32>(rayOrigin, 1.0)).xyz;\n      let objectRayDirection = (voxelObject.inverseTransform * vec4<f32>(rayDirection, 0.0)).xyz;\n      return  rayMarchAtMip(voxelObject, objectRayDirection, objectRayOrigin, mipLevel);\n}\n\nstruct Stack {\n  arr: array<i32, STACK_LEN>,\n\thead: u32,\n}\n\nfn stack_new() -> Stack {\n    var arr: array<i32, STACK_LEN>;\n    return Stack(arr, 0u);\n}\n\nfn stack_push(stack: ptr<function, Stack>, val: i32) {\n    (*stack).arr[(*stack).head] = val;\n    (*stack).head += 1u;\n}\n\nfn stack_pop(stack: ptr<function, Stack>) -> i32 {\n    (*stack).head -= 1u;\n    return (*stack).arr[(*stack).head];\n}\n\nstruct Stack3 {\n  arr: array<vec3<i32>, STACK_LEN>,\n\thead: u32,\n}\n\nfn stack3_new() -> Stack3 {\n    var arr: array<vec3<i32>, STACK_LEN>;\n    return Stack3(arr, 0u);\n}\n\nfn stack3_push(stack: ptr<function, Stack3>, val: vec3<i32>) {\n    (*stack).arr[(*stack).head] = val;\n    (*stack).head += 1u;\n}\n\nfn stack3_pop(stack: ptr<function, Stack3>) -> vec3<i32> {\n    (*stack).head -= 1u;\n    return (*stack).arr[(*stack).head];\n}\n\nstruct InternalNode {\n  childMask: u32,\n  firstChildOffset: u32,\n  leafMask: u32,\n  hasFarBit: bool\n}\n\nfn getFirstChildIndexFromInternalNode(node: InternalNode, index: u32) -> u32 {\n//  if(node.hasFarBit){\n//    return octreeBuffer[index + node.firstChildOffset];\n//  }\n  return index + node.firstChildOffset;\n}\n\nconst mask8 = 0xFFu;\nconst mask16 = 0xFFFFu;\nconst mask15 = 0x7FFFu;\n\n// if childMask is full, then the node is a leaf\nfn isLeaf(node: u32) -> bool {\n  let firstByte = node & mask8;\n  return firstByte == 255;\n}\n\n// second 8 bits are the palette index\nfn unpackLeaf(node: u32) -> u32 {\n  return (node >> 8u) & mask8;\n}\n\n/**\n  * Unpacks an internal node from a 32 bit integer\n  * First 8 bits are the child mask\n  * The next 16 bits are the first child offset, with the far bit in the 16th bit\n  * The next 8 bits are the leaf mask\n  */\nfn unpackInternal(node: u32) -> InternalNode {\n  var output = InternalNode();\n  output.childMask = node & mask8;\n//  output.firstChildOffset = (node >> 8u) & mask15;\n//  output.hasFarBit = (output.firstChildOffset & 0x8000u) != 0u;\n  output.firstChildOffset = (node >> 8u) & mask16;\n  output.leafMask = (node >> 24u) & mask8;\n  return output;\n}\n\nfn getNodeSizeAtDepth(rootSize: u32, depth: u32) -> u32 {\n  return rootSize >> depth;\n}\n\nfn octantIndexToOffset(index: u32) -> vec3<u32> {\n  return vec3<u32>(\n    select(0u, 1u, (index & 1u) != 0u),\n    select(0u, 1u, (index & 2u) != 0u),\n    select(0u, 1u, (index & 4u) != 0u)\n  );\n}\n\nfn octantOffsetToIndex(offset: vec3<u32>) -> u32 {\n  return offset.x + offset.y * 2u + offset.z * 4u;\n}\n\nfn ceilToPowerOfTwo(value: f32) -> f32 {\n  return pow(2.0, ceil(log2(value)));\n}\n\nfn max3(value: vec3<f32>) -> f32 {\n  return max(value.x, max(value.y, value.z));\n}\n\nfn planeIntersection(rayOrigin: vec3<f32>, rayDirection: vec3<f32>, planeNormal: vec3<f32>, planeDistance: f32) -> f32 {\n  return -(dot(rayOrigin,planeNormal)+planeDistance)/dot(rayDirection,planeNormal);\n}\n\n// https://bertolami.com/files/octrees.pdf\nfn rayMarchOctree(voxelObject: VoxelObject, rayDirection: vec3<f32>, rayOrigin: vec3<f32>) -> RayMarchResult {\n    let objectRayOrigin = (voxelObject.inverseTransform * vec4<f32>(rayOrigin, 1.0)).xyz;\n    let objectRayDirection = (voxelObject.inverseTransform * vec4<f32>(rayDirection, 0.0)).xyz;\n    var output = RayMarchResult();\n    output.t = FAR_PLANE;\n\n    var nodeStack = stack_new();\n    var depthStack = stack_new();\n    var offsetsStack = stack3_new();\n    stack_push(&nodeStack, 0);\n    stack_push(&depthStack, 0);\n    stack3_push(&offsetsStack, vec3(0));\n\n    var depth = 0u;\n    var parentOffset = vec3(0);\n\n    let rootNodeSize = ceilToPowerOfTwo(max3(voxelObject.size));\n    var size = getNodeSizeAtDepth(u32(rootNodeSize), depth);\n    var nodeIndex = 0u;\n    var iterations = 0;\n\n\n    while (nodeStack.head > 0u && iterations < 33) {\n      let node = octreeBuffer[nodeIndex];\n      let internalNode = unpackInternal(node);\n      var firstChildIndex = nodeIndex + internalNode.firstChildOffset;\n      // if this has the far bit set, we need to get the 32 bit address node\n      if(internalNode.hasFarBit){\n        firstChildIndex = octreeBuffer[firstChildIndex];\n      }\n      var closestLeafIndex = 0u;\n      let nodeSize = getNodeSizeAtDepth(size, depth);\n\n      var nodeRayOrigin = objectRayOrigin - vec3<f32>(parentOffset);\n      var rayOrigin = nodeRayOrigin;\n\n      // Check if each child is filled via the bitmask\n      for(var i = 0u; i < 1; i++){\n//        let octantPos = vec3<u32>(max(vec3(1), ceil(rayOrigin)));\n//        let octantIndex = octantOffsetToIndex(octantPos);\n        let octantIndex = i;\n\n        let offsetWithinOctant = octantIndexToOffset(i);\n        let octantDepth = depth + 1u;\n        let octantSize = getNodeSizeAtDepth(size, octantDepth);\n        let childNodeIndex = firstChildIndex + octantIndex;\n\n        // If the child is filled, check it for intersection\n        if(getBit(internalNode.childMask, octantIndex)){\n          // Transform the ray into the child node's space\n          let childOffset = vec3<u32>(parentOffset) + offsetWithinOctant * octantSize;\n          let childRayOrigin = objectRayOrigin - vec3<f32>(childOffset);\n          let boxSize = vec3(f32(octantSize)) / 2;\n          let octantIntersection = boxIntersection(childRayOrigin, objectRayDirection, boxSize);\n          if(!octantIntersection.isHit){\n            continue;\n          }\n\n          // Advance the ray to the intersection point\n          rayOrigin = nodeRayOrigin + objectRayDirection * octantIntersection.tNear;\n\n          // If we hit a leaf node, check if it is the closest hit\n          if(getBit(internalNode.leafMask, octantIndex)){\n            return output;\n          }\n          // If we hit an internal child node, so push it onto the stack to check its children\n          else{\n            stack_push(&nodeStack, i32(childNodeIndex));\n            stack_push(&depthStack, i32(octantDepth));\n            stack3_push(&offsetsStack, vec3<i32>(childOffset));\n          }\n        }\n      }\n      // If we hit a leaf node, break out of the loop\n      if(closestLeafIndex > 0){\n        break;\n      }\n\n      nodeIndex = u32(stack_pop(&nodeStack));\n      depth = u32(stack_pop(&depthStack));\n      parentOffset = stack3_pop(&offsetsStack);\n      output.iterations += 1;\n    }\n\n    return output;\n}\n\n\nconst colours = array<vec3<f32>, 6>(\n  vec3<f32>(1.0, 0.0, 0.0),\n  vec3<f32>(0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 1.0),\n  vec3<f32>(1.0, 1.0, 0.0),\n  vec3<f32>(1.0, 0.0, 1.0),\n  vec3<f32>(0.0, 1.0, 1.0)\n);\n\nfn debugColourFromIndex(index: i32) -> vec3<f32> {\n  return colours[index % 6];\n}\n"},4578:(e,t,n)=>{n.d(t,{Ay:()=>v});class r{constructor(e,t,n,i,s="div"){this.parent=e,this.object=t,this.property=n,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(s),this.domElement.classList.add("controller"),this.domElement.classList.add(i),this.$name=document.createElement("div"),this.$name.classList.add("name"),r.nextNameID=r.nextNameID||0,this.$name.id="lil-gui-name-"+ ++r.nextNameID,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",(e=>e.stopPropagation())),this.domElement.addEventListener("keyup",(e=>e.stopPropagation())),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(n)}name(e){return this._name=e,this.$name.textContent=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.getValue()!==e&&(this.object[this.property]=e,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class i extends r{constructor(e,t,n){super(e,t,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",(()=>{this.setValue(this.$input.checked),this._callOnFinishChange()})),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function s(e){let t,n;return(t=e.match(/(#|0x)?([a-f0-9]{6})/i))?n=t[2]:(t=e.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?n=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=e.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(n=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!n&&"#"+n}const a={isPrimitive:!0,match:e=>"number"==typeof e,fromHexString:e=>parseInt(e.substring(1),16),toHexString:e=>"#"+e.toString(16).padStart(6,0)},o={isPrimitive:!1,match:e=>Array.isArray(e),fromHexString(e,t,n=1){const r=a.fromHexString(e);t[0]=(r>>16&255)/255*n,t[1]=(r>>8&255)/255*n,t[2]=(255&r)/255*n},toHexString:([e,t,n],r=1)=>a.toHexString(e*(r=255/r)<<16^t*r<<8^n*r<<0)},l={isPrimitive:!1,match:e=>Object(e)===e,fromHexString(e,t,n=1){const r=a.fromHexString(e);t.r=(r>>16&255)/255*n,t.g=(r>>8&255)/255*n,t.b=(255&r)/255*n},toHexString:({r:e,g:t,b:n},r=1)=>a.toHexString(e*(r=255/r)<<16^t*r<<8^n*r<<0)},u=[{isPrimitive:!0,match:e=>"string"==typeof e,fromHexString:s,toHexString:s},a,o,l];class c extends r{constructor(e,t,n,r){var i;super(e,t,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(i=this.initialValue,u.find((e=>e.match(i)))),this._rgbScale=r,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",(()=>{this._setValueFromHexString(this.$input.value)})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$text.addEventListener("input",(()=>{const e=s(this.$text.value);e&&this._setValueFromHexString(e)})),this.$text.addEventListener("focus",(()=>{this._textFocused=!0,this.$text.select()})),this.$text.addEventListener("blur",(()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()})),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class h extends r{constructor(e,t,n){super(e,t,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",(e=>{e.preventDefault(),this.getValue().call(this.object),this._callOnChange()})),this.$button.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$disable=this.$button}}class d extends r{constructor(e,t,n,r,i,s){super(e,t,n,"number"),this._initInput(),this.min(r),this.max(i);const a=void 0!==s;this.step(a?s:this._getImplicitStep(),a),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=e=>{const t=parseFloat(this.$input.value);isNaN(t)||(this._snapClampSetValue(t+e),this.$input.value=this.getValue())};let t,n,r,i,s,a=!1;const o=e=>{if(a){const r=e.clientX-t,i=e.clientY-n;Math.abs(i)>5?(e.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(r)>5&&l()}if(!a){const t=e.clientY-r;s-=t*this._step*this._arrowKeyMultiplier(e),i+s>this._max?s=this._max-i:i+s<this._min&&(s=this._min-i),this._snapClampSetValue(i+s)}r=e.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",o),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",(()=>{let e=parseFloat(this.$input.value);isNaN(e)||(this._stepExplicit&&(e=this._snap(e)),this.setValue(this._clamp(e)))})),this.$input.addEventListener("keydown",(t=>{"Enter"===t.key&&this.$input.blur(),"ArrowUp"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t))),"ArrowDown"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t)*-1))})),this.$input.addEventListener("wheel",(t=>{this._inputFocused&&(t.preventDefault(),e(this._step*this._normalizeMouseWheel(t)))}),{passive:!1}),this.$input.addEventListener("mousedown",(e=>{t=e.clientX,n=r=e.clientY,a=!0,i=this.getValue(),s=0,window.addEventListener("mousemove",o),window.addEventListener("mouseup",l)})),this.$input.addEventListener("focus",(()=>{this._inputFocused=!0})),this.$input.addEventListener("blur",(()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()}))}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=e=>{const t=this.$slider.getBoundingClientRect();let n=(r=e,i=t.left,s=t.right,a=this._min,(r-i)/(s-i)*(this._max-a)+a);var r,i,s,a;this._snapClampSetValue(n)},t=t=>{e(t.clientX)},n=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",t),window.removeEventListener("mouseup",n)};let r,i,s=!1;const a=t=>{t.preventDefault(),this._setDraggingStyle(!0),e(t.touches[0].clientX),s=!1},o=t=>{if(s){const e=t.touches[0].clientX-r,n=t.touches[0].clientY-i;Math.abs(e)>Math.abs(n)?a(t):(window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l))}else t.preventDefault(),e(t.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l)},u=this._callOnFinishChange.bind(this);let c;this.$slider.addEventListener("mousedown",(r=>{this._setDraggingStyle(!0),e(r.clientX),window.addEventListener("mousemove",t),window.addEventListener("mouseup",n)})),this.$slider.addEventListener("touchstart",(e=>{e.touches.length>1||(this._hasScrollBar?(r=e.touches[0].clientX,i=e.touches[0].clientY,s=!0):a(e),window.addEventListener("touchmove",o,{passive:!1}),window.addEventListener("touchend",l))}),{passive:!1}),this.$slider.addEventListener("wheel",(e=>{if(Math.abs(e.deltaX)<Math.abs(e.deltaY)&&this._hasScrollBar)return;e.preventDefault();const t=this._normalizeMouseWheel(e)*this._step;this._snapClampSetValue(this.getValue()+t),this.$input.value=this.getValue(),clearTimeout(c),c=setTimeout(u,400)}),{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle(`lil-gui-${t}`,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:n}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,n=-e.wheelDelta/120,n*=this._stepExplicit?1:10),t+-n}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class f extends r{constructor(e,t,n,r){super(e,t,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",(()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()})),this.$select.addEventListener("focus",(()=>{this.$display.classList.add("focus")})),this.$select.addEventListener("blur",(()=>{this.$display.classList.remove("focus")})),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(r)}options(e){return this._values=Array.isArray(e)?e:Object.values(e),this._names=Array.isArray(e)?e:Object.keys(e),this.$select.replaceChildren(),this._names.forEach((e=>{const t=document.createElement("option");t.textContent=e,this.$select.appendChild(t)})),this.updateDisplay(),this}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.textContent=-1===t?e:this._names[t],this}}class p extends r{constructor(e,t,n){super(e,t,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",(()=>{this.setValue(this.$input.value)})),this.$input.addEventListener("keydown",(e=>{"Enter"===e.code&&this.$input.blur()})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let m=!1;class g{constructor({parent:e,autoPlace:t=void 0===e,container:n,width:r,title:i="Controls",closeFolders:s=!1,injectStyles:a=!0,touchStyles:o=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",(()=>this.openAnimated(this._closed))),this.$title.addEventListener("keydown",(e=>{"Enter"!==e.code&&"Space"!==e.code||(e.preventDefault(),this.$title.click())})),this.$title.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(i),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),o&&this.domElement.classList.add("allow-touch-styles"),!m&&a&&(function(e){const t=document.createElement("style");t.innerHTML='.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: " ";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: "lil-gui";\n  content: "↕";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: "lil-gui";\n  content: "▾";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: "▸";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: "Empty";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: "lil-gui";\n  content: "✓";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: none;\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: "lil-gui";\n  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");\n}';const n=document.querySelector("head link[rel=stylesheet], head style");n?document.head.insertBefore(t,n):document.head.appendChild(t)}(),m=!0),n?n.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),r&&this.domElement.style.setProperty("--width",r+"px"),this._closeFolders=s}add(e,t,n,r,s){if(Object(n)===n)return new f(this,e,t,n);const a=e[t];switch(typeof a){case"number":return new d(this,e,t,n,r,s);case"boolean":return new i(this,e,t);case"string":return new p(this,e,t);case"function":return new h(this,e,t)}console.error("gui.add failed\n\tproperty:",t,"\n\tobject:",e,"\n\tvalue:",a)}addColor(e,t,n=1){return new c(this,e,t,n)}addFolder(e){const t=new g({parent:this,title:e});return this.root._closeFolders&&t.close(),t}load(e,t=!0){return e.controllers&&this.controllers.forEach((t=>{t instanceof h||t._name in e.controllers&&t.load(e.controllers[t._name])})),t&&e.folders&&this.folders.forEach((t=>{t._title in e.folders&&t.load(e.folders[t._title])})),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach((e=>{if(!(e instanceof h)){if(e._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${e._name}"`);t.controllers[e._name]=e.save()}})),e&&this.folders.forEach((e=>{if(e._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${e._title}"`);t.folders[e._title]=e.save()})),t}open(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(e){this._closed!==e&&(this._closed=e,this._callOnOpenClose(this))}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const n=e=>{e.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const r=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame((()=>{this.$children.style.height=r+"px"}))})),this}title(e){return this._title=e,this.$title.textContent=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach((e=>e.reset())),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),void 0!==this._onChange&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onOpenClose(e){return this._onOpenClose=e,this}_callOnOpenClose(e){this.parent&&this.parent._callOnOpenClose(e),void 0!==this._onOpenClose&&this._onOpenClose.call(this,e)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((e=>e.destroy()))}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach((t=>{e=e.concat(t.controllersRecursive())})),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach((t=>{e=e.concat(t.foldersRecursive())})),e}}const v=g},6273:(e,t,n)=>{n.d(t,{$L:()=>Ge});const r=e=>e&&"number"==typeof e.length&&e.buffer instanceof ArrayBuffer&&"number"==typeof e.byteLength,i={i32:{numElements:1,align:4,size:4,type:"i32",View:Int32Array},u32:{numElements:1,align:4,size:4,type:"u32",View:Uint32Array},f32:{numElements:1,align:4,size:4,type:"f32",View:Float32Array},f16:{numElements:1,align:2,size:2,type:"u16",View:Uint16Array},vec2f:{numElements:2,align:8,size:8,type:"f32",View:Float32Array},vec2i:{numElements:2,align:8,size:8,type:"i32",View:Int32Array},vec2u:{numElements:2,align:8,size:8,type:"u32",View:Uint32Array},vec2h:{numElements:2,align:4,size:4,type:"u16",View:Uint16Array},vec3i:{numElements:3,align:16,size:12,type:"i32",View:Int32Array},vec3u:{numElements:3,align:16,size:12,type:"u32",View:Uint32Array},vec3f:{numElements:3,align:16,size:12,type:"f32",View:Float32Array},vec3h:{numElements:3,align:8,size:6,type:"u16",View:Uint16Array},vec4i:{numElements:4,align:16,size:16,type:"i32",View:Int32Array},vec4u:{numElements:4,align:16,size:16,type:"u32",View:Uint32Array},vec4f:{numElements:4,align:16,size:16,type:"f32",View:Float32Array},vec4h:{numElements:4,align:8,size:8,type:"u16",View:Uint16Array},mat2x2f:{numElements:4,align:8,size:16,type:"f32",View:Float32Array},mat2x2h:{numElements:4,align:4,size:8,type:"u16",View:Uint16Array},mat3x2f:{numElements:6,align:8,size:24,type:"f32",View:Float32Array},mat3x2h:{numElements:6,align:4,size:12,type:"u16",View:Uint16Array},mat4x2f:{numElements:8,align:8,size:32,type:"f32",View:Float32Array},mat4x2h:{numElements:8,align:4,size:16,type:"u16",View:Uint16Array},mat2x3f:{numElements:8,align:16,size:32,pad:[3,1],type:"f32",View:Float32Array},mat2x3h:{numElements:8,align:8,size:16,pad:[3,1],type:"u16",View:Uint16Array},mat3x3f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x3h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x3f:{numElements:16,align:16,size:64,pad:[3,1],type:"f32",View:Float32Array},mat4x3h:{numElements:16,align:8,size:32,pad:[3,1],type:"u16",View:Uint16Array},mat2x4f:{numElements:8,align:16,size:32,type:"f32",View:Float32Array},mat2x4h:{numElements:8,align:8,size:16,type:"u16",View:Uint16Array},mat3x4f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x4h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x4f:{numElements:16,align:16,size:64,type:"f32",View:Float32Array},mat4x4h:{numElements:16,align:8,size:32,type:"u16",View:Uint16Array},bool:{numElements:0,align:1,size:0,type:"bool",View:Uint32Array}},s={...i,"atomic<i32>":i.i32,"atomic<u32>":i.u32,"vec2<i32>":i.vec2i,"vec2<u32>":i.vec2u,"vec2<f32>":i.vec2f,"vec2<f16>":i.vec2h,"vec3<i32>":i.vec3i,"vec3<u32>":i.vec3u,"vec3<f32>":i.vec3f,"vec3<f16>":i.vec3h,"vec4<i32>":i.vec4i,"vec4<u32>":i.vec4u,"vec4<f32>":i.vec4f,"vec4<f16>":i.vec4h,"mat2x2<f32>":i.mat2x2f,"mat2x2<f16>":i.mat2x2h,"mat3x2<f32>":i.mat3x2f,"mat3x2<f16>":i.mat3x2h,"mat4x2<f32>":i.mat4x2f,"mat4x2<f16>":i.mat4x2h,"mat2x3<f32>":i.mat2x3f,"mat2x3<f16>":i.mat2x3h,"mat3x3<f32>":i.mat3x3f,"mat3x3<f16>":i.mat3x3h,"mat4x3<f32>":i.mat4x3f,"mat4x3<f16>":i.mat4x3h,"mat2x4<f32>":i.mat2x4f,"mat2x4<f16>":i.mat2x4h,"mat3x4<f32>":i.mat3x4f,"mat3x4<f16>":i.mat3x4h,"mat4x4<f32>":i.mat4x4f,"mat4x4<f16>":i.mat4x4h},a=(o=s,Object.keys(o));var o,l,u,c,h,d;!function(e=[],t){const n=new Set;for(const r of a){const i=s[r];n.has(i)||(n.add(i),i.flatten=e.includes(r)?t:!t)}}(),new WeakMap;class f{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class p{constructor(){}get isAstNode(){return!0}get astNodeType(){return""}evaluate(e){throw new Error("Cannot evaluate node")}evaluateString(e){return this.evaluate(e).toString()}search(e){}searchBlock(e,t){if(e){t(m.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(g.instance)}}}class m extends p{}m.instance=new m;class g extends p{}g.instance=new g;class v extends p{constructor(){super()}}class x extends v{constructor(e,t,n,r){super(),this.name=e,this.args=t,this.returnType=n,this.body=r}get astNodeType(){return"function"}search(e){this.searchBlock(this.body,e)}}class y extends v{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}search(e){this.expression.search(e)}}class _ extends v{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class b extends v{constructor(e){super(),this.body=e}get astNodeType(){return"continuing"}search(e){this.searchBlock(this.body,e)}}class w extends v{constructor(e,t,n,r){super(),this.init=e,this.condition=t,this.increment=n,this.body=r}get astNodeType(){return"for"}search(e){var t,n,r;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(r=this.increment)||void 0===r||r.search(e),this.searchBlock(this.body,e)}}class k extends v{constructor(e,t,n,r,i){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=i}get astNodeType(){return"var"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class A extends v{constructor(e,t,n){super(),this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class T extends v{constructor(e,t,n,r,i){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=i}get astNodeType(){return"let"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class S extends v{constructor(e,t,n,r,i){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=i}get astNodeType(){return"const"}evaluate(e){return this.value.evaluate(e)}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}!function(e){e.increment="++",e.decrement="--"}(l||(l={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}}(l||(l={}));class P extends v{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}search(e){this.variable.search(e)}}!function(e){e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="}(u||(u={})),function(e){e.parse=function(e){const t=e;if("parse"==t)throw new Error("Invalid value for AssignOperator");return t}}(u||(u={}));class M extends v{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}search(e){this.value.search(e)}}class E extends v{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}}class O extends v{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class I extends v{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"body"}}class U extends v{constructor(e,t,n,r){super(),this.condition=e,this.body=t,this.elseif=n,this.else=r}get astNodeType(){return"if"}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class C extends v{constructor(e){super(),this.value=e}get astNodeType(){return"return"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class B extends v{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class z extends v{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class R extends v{constructor(){super()}get astNodeType(){return"discard"}}class D extends v{constructor(){super()}get astNodeType(){return"break"}}class j extends v{constructor(){super()}get astNodeType(){return"continue"}}class L extends v{constructor(e){super(),this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}}class V extends L{constructor(e,t){super(e),this.members=t}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}}class N extends L{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}}class G extends L{constructor(e,t,n,r){super(e),this.storage=t,this.type=n,this.access=r}get astNodeType(){return"pointer"}}class F extends L{constructor(e,t,n,r){super(e),this.attributes=t,this.format=n,this.count=r}get astNodeType(){return"array"}get isArray(){return!0}}class $ extends L{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class q extends p{constructor(){super()}}class Y extends q{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}evaluateString(){return this.value}}class W extends q{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}}class X extends q{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"callExpr"}evaluate(e){switch(this.name){case"abs":return Math.abs(this.args[0].evaluate(e));case"acos":return Math.acos(this.args[0].evaluate(e));case"acosh":return Math.acosh(this.args[0].evaluate(e));case"asin":return Math.asin(this.args[0].evaluate(e));case"asinh":return Math.asinh(this.args[0].evaluate(e));case"atan":return Math.atan(this.args[0].evaluate(e));case"atan2":return Math.atan2(this.args[0].evaluate(e),this.args[1].evaluate(e));case"atanh":return Math.atanh(this.args[0].evaluate(e));case"ceil":return Math.ceil(this.args[0].evaluate(e));case"clamp":return Math.min(Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e)),this.args[2].evaluate(e));case"cos":return Math.cos(this.args[0].evaluate(e));case"degrees":return 180*this.args[0].evaluate(e)/Math.PI;case"distance":return Math.sqrt(Math.pow(this.args[0].evaluate(e)-this.args[1].evaluate(e),2));case"dot":case"exp":return Math.exp(this.args[0].evaluate(e));case"exp2":return Math.pow(2,this.args[0].evaluate(e));case"floor":return Math.floor(this.args[0].evaluate(e));case"fma":return this.args[0].evaluate(e)*this.args[1].evaluate(e)+this.args[2].evaluate(e);case"fract":case"modf":return this.args[0].evaluate(e)-Math.floor(this.args[0].evaluate(e));case"inverseSqrt":return 1/Math.sqrt(this.args[0].evaluate(e));case"log":return Math.log(this.args[0].evaluate(e));case"log2":return Math.log2(this.args[0].evaluate(e));case"max":return Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e));case"min":return Math.min(this.args[0].evaluate(e),this.args[1].evaluate(e));case"mix":return this.args[0].evaluate(e)*(1-this.args[2].evaluate(e))+this.args[1].evaluate(e)*this.args[2].evaluate(e);case"pow":return Math.pow(this.args[0].evaluate(e),this.args[1].evaluate(e));case"radians":return this.args[0].evaluate(e)*Math.PI/180;case"round":return Math.round(this.args[0].evaluate(e));case"sign":return Math.sign(this.args[0].evaluate(e));case"sin":return Math.sin(this.args[0].evaluate(e));case"sinh":return Math.sinh(this.args[0].evaluate(e));case"saturate":return Math.min(Math.max(this.args[0].evaluate(e),0),1);case"smoothstep":return this.args[0].evaluate(e)*this.args[0].evaluate(e)*(3-2*this.args[0].evaluate(e));case"sqrt":return Math.sqrt(this.args[0].evaluate(e));case"step":return this.args[0].evaluate(e)<this.args[1].evaluate(e)?0:1;case"tan":return Math.tan(this.args[0].evaluate(e));case"tanh":return Math.tanh(this.args[0].evaluate(e));case"trunc":return Math.trunc(this.args[0].evaluate(e));default:throw new Error("Non const function: "+this.name)}}search(e){for(const t of this.args)t.search(e);e(this)}}class H extends q{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}search(e){e(this)}}class Z extends q{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}evaluate(e){var t,n;if(this.initializer instanceof W){const r=null===(t=this.postfix)||void 0===t?void 0:t.evaluateString(e),i=null===(n=this.initializer.type)||void 0===n?void 0:n.name,s=e.structs.get(i),a=null==s?void 0:s.getMemberIndex(r);if(-1!=a)return this.initializer.args[a].evaluate(e);console.log(a)}return this.initializer.evaluate(e)}search(e){this.initializer.search(e)}}class K extends q{constructor(e){super(),this.value=e}get astNodeType(){return"literalExpr"}evaluate(){return this.value}}class Q extends q{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}search(e){this.value.search(e)}}class J extends q{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"typecastExpr"}evaluate(e){return this.args[0].evaluate(e)}search(e){this.searchBlock(this.args,e)}}class ee extends q{constructor(e){super(),this.contents=e}get astNodeType(){return"groupExpr"}evaluate(e){return this.contents[0].evaluate(e)}search(e){this.searchBlock(this.contents,e)}}class te extends q{constructor(){super()}}class ne extends te{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}evaluate(e){switch(this.operator){case"+":return this.right.evaluate(e);case"-":return-this.right.evaluate(e);case"!":return this.right.evaluate(e)?0:1;case"~":return~this.right.evaluate(e);default:throw new Error("Unknown unary operator: "+this.operator)}}search(e){this.right.search(e)}}class re extends te{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}evaluate(e){switch(this.operator){case"+":return this.left.evaluate(e)+this.right.evaluate(e);case"-":return this.left.evaluate(e)-this.right.evaluate(e);case"*":return this.left.evaluate(e)*this.right.evaluate(e);case"/":return this.left.evaluate(e)/this.right.evaluate(e);case"%":return this.left.evaluate(e)%this.right.evaluate(e);case"==":return this.left.evaluate(e)==this.right.evaluate(e)?1:0;case"!=":return this.left.evaluate(e)!=this.right.evaluate(e)?1:0;case"<":return this.left.evaluate(e)<this.right.evaluate(e)?1:0;case">":return this.left.evaluate(e)>this.right.evaluate(e)?1:0;case"<=":return this.left.evaluate(e)<=this.right.evaluate(e)?1:0;case">=":return this.left.evaluate(e)>=this.right.evaluate(e)?1:0;case"&&":return this.left.evaluate(e)&&this.right.evaluate(e)?1:0;case"||":return this.left.evaluate(e)||this.right.evaluate(e)?1:0;default:throw new Error(`Unknown operator ${this.operator}`)}}search(e){this.left.search(e),this.right.search(e)}}class ie extends p{constructor(){super()}}class se extends ie{constructor(e,t){super(),this.selector=e,this.body=t}get astNodeType(){return"case"}search(e){this.searchBlock(this.body,e)}}class ae extends ie{constructor(e){super(),this.body=e}get astNodeType(){return"default"}search(e){this.searchBlock(this.body,e)}}class oe extends p{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class le extends p{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class ue extends p{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class ce extends p{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}!function(e){e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"}(h||(h={}));class he{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class de{}c=de,de.none=new he("",h.reserved,""),de.eof=new he("EOF",h.token,""),de.reserved={asm:new he("asm",h.reserved,"asm"),bf16:new he("bf16",h.reserved,"bf16"),do:new he("do",h.reserved,"do"),enum:new he("enum",h.reserved,"enum"),f16:new he("f16",h.reserved,"f16"),f64:new he("f64",h.reserved,"f64"),handle:new he("handle",h.reserved,"handle"),i8:new he("i8",h.reserved,"i8"),i16:new he("i16",h.reserved,"i16"),i64:new he("i64",h.reserved,"i64"),mat:new he("mat",h.reserved,"mat"),premerge:new he("premerge",h.reserved,"premerge"),regardless:new he("regardless",h.reserved,"regardless"),typedef:new he("typedef",h.reserved,"typedef"),u8:new he("u8",h.reserved,"u8"),u16:new he("u16",h.reserved,"u16"),u64:new he("u64",h.reserved,"u64"),unless:new he("unless",h.reserved,"unless"),using:new he("using",h.reserved,"using"),vec:new he("vec",h.reserved,"vec"),void:new he("void",h.reserved,"void")},de.keywords={array:new he("array",h.keyword,"array"),atomic:new he("atomic",h.keyword,"atomic"),bool:new he("bool",h.keyword,"bool"),f32:new he("f32",h.keyword,"f32"),i32:new he("i32",h.keyword,"i32"),mat2x2:new he("mat2x2",h.keyword,"mat2x2"),mat2x3:new he("mat2x3",h.keyword,"mat2x3"),mat2x4:new he("mat2x4",h.keyword,"mat2x4"),mat3x2:new he("mat3x2",h.keyword,"mat3x2"),mat3x3:new he("mat3x3",h.keyword,"mat3x3"),mat3x4:new he("mat3x4",h.keyword,"mat3x4"),mat4x2:new he("mat4x2",h.keyword,"mat4x2"),mat4x3:new he("mat4x3",h.keyword,"mat4x3"),mat4x4:new he("mat4x4",h.keyword,"mat4x4"),ptr:new he("ptr",h.keyword,"ptr"),sampler:new he("sampler",h.keyword,"sampler"),sampler_comparison:new he("sampler_comparison",h.keyword,"sampler_comparison"),struct:new he("struct",h.keyword,"struct"),texture_1d:new he("texture_1d",h.keyword,"texture_1d"),texture_2d:new he("texture_2d",h.keyword,"texture_2d"),texture_2d_array:new he("texture_2d_array",h.keyword,"texture_2d_array"),texture_3d:new he("texture_3d",h.keyword,"texture_3d"),texture_cube:new he("texture_cube",h.keyword,"texture_cube"),texture_cube_array:new he("texture_cube_array",h.keyword,"texture_cube_array"),texture_multisampled_2d:new he("texture_multisampled_2d",h.keyword,"texture_multisampled_2d"),texture_storage_1d:new he("texture_storage_1d",h.keyword,"texture_storage_1d"),texture_storage_2d:new he("texture_storage_2d",h.keyword,"texture_storage_2d"),texture_storage_2d_array:new he("texture_storage_2d_array",h.keyword,"texture_storage_2d_array"),texture_storage_3d:new he("texture_storage_3d",h.keyword,"texture_storage_3d"),texture_depth_2d:new he("texture_depth_2d",h.keyword,"texture_depth_2d"),texture_depth_2d_array:new he("texture_depth_2d_array",h.keyword,"texture_depth_2d_array"),texture_depth_cube:new he("texture_depth_cube",h.keyword,"texture_depth_cube"),texture_depth_cube_array:new he("texture_depth_cube_array",h.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new he("texture_depth_multisampled_2d",h.keyword,"texture_depth_multisampled_2d"),texture_external:new he("texture_external",h.keyword,"texture_external"),u32:new he("u32",h.keyword,"u32"),vec2:new he("vec2",h.keyword,"vec2"),vec3:new he("vec3",h.keyword,"vec3"),vec4:new he("vec4",h.keyword,"vec4"),bitcast:new he("bitcast",h.keyword,"bitcast"),block:new he("block",h.keyword,"block"),break:new he("break",h.keyword,"break"),case:new he("case",h.keyword,"case"),continue:new he("continue",h.keyword,"continue"),continuing:new he("continuing",h.keyword,"continuing"),default:new he("default",h.keyword,"default"),discard:new he("discard",h.keyword,"discard"),else:new he("else",h.keyword,"else"),enable:new he("enable",h.keyword,"enable"),fallthrough:new he("fallthrough",h.keyword,"fallthrough"),false:new he("false",h.keyword,"false"),fn:new he("fn",h.keyword,"fn"),for:new he("for",h.keyword,"for"),function:new he("function",h.keyword,"function"),if:new he("if",h.keyword,"if"),let:new he("let",h.keyword,"let"),const:new he("const",h.keyword,"const"),loop:new he("loop",h.keyword,"loop"),while:new he("while",h.keyword,"while"),private:new he("private",h.keyword,"private"),read:new he("read",h.keyword,"read"),read_write:new he("read_write",h.keyword,"read_write"),return:new he("return",h.keyword,"return"),storage:new he("storage",h.keyword,"storage"),switch:new he("switch",h.keyword,"switch"),true:new he("true",h.keyword,"true"),alias:new he("alias",h.keyword,"alias"),type:new he("type",h.keyword,"type"),uniform:new he("uniform",h.keyword,"uniform"),var:new he("var",h.keyword,"var"),override:new he("override",h.keyword,"override"),workgroup:new he("workgroup",h.keyword,"workgroup"),write:new he("write",h.keyword,"write"),r8unorm:new he("r8unorm",h.keyword,"r8unorm"),r8snorm:new he("r8snorm",h.keyword,"r8snorm"),r8uint:new he("r8uint",h.keyword,"r8uint"),r8sint:new he("r8sint",h.keyword,"r8sint"),r16uint:new he("r16uint",h.keyword,"r16uint"),r16sint:new he("r16sint",h.keyword,"r16sint"),r16float:new he("r16float",h.keyword,"r16float"),rg8unorm:new he("rg8unorm",h.keyword,"rg8unorm"),rg8snorm:new he("rg8snorm",h.keyword,"rg8snorm"),rg8uint:new he("rg8uint",h.keyword,"rg8uint"),rg8sint:new he("rg8sint",h.keyword,"rg8sint"),r32uint:new he("r32uint",h.keyword,"r32uint"),r32sint:new he("r32sint",h.keyword,"r32sint"),r32float:new he("r32float",h.keyword,"r32float"),rg16uint:new he("rg16uint",h.keyword,"rg16uint"),rg16sint:new he("rg16sint",h.keyword,"rg16sint"),rg16float:new he("rg16float",h.keyword,"rg16float"),rgba8unorm:new he("rgba8unorm",h.keyword,"rgba8unorm"),rgba8unorm_srgb:new he("rgba8unorm_srgb",h.keyword,"rgba8unorm_srgb"),rgba8snorm:new he("rgba8snorm",h.keyword,"rgba8snorm"),rgba8uint:new he("rgba8uint",h.keyword,"rgba8uint"),rgba8sint:new he("rgba8sint",h.keyword,"rgba8sint"),bgra8unorm:new he("bgra8unorm",h.keyword,"bgra8unorm"),bgra8unorm_srgb:new he("bgra8unorm_srgb",h.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new he("rgb10a2unorm",h.keyword,"rgb10a2unorm"),rg11b10float:new he("rg11b10float",h.keyword,"rg11b10float"),rg32uint:new he("rg32uint",h.keyword,"rg32uint"),rg32sint:new he("rg32sint",h.keyword,"rg32sint"),rg32float:new he("rg32float",h.keyword,"rg32float"),rgba16uint:new he("rgba16uint",h.keyword,"rgba16uint"),rgba16sint:new he("rgba16sint",h.keyword,"rgba16sint"),rgba16float:new he("rgba16float",h.keyword,"rgba16float"),rgba32uint:new he("rgba32uint",h.keyword,"rgba32uint"),rgba32sint:new he("rgba32sint",h.keyword,"rgba32sint"),rgba32float:new he("rgba32float",h.keyword,"rgba32float"),static_assert:new he("static_assert",h.keyword,"static_assert")},de.tokens={decimal_float_literal:new he("decimal_float_literal",h.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)|([0-9]+f)/),hex_float_literal:new he("hex_float_literal",h.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/),int_literal:new he("int_literal",h.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new he("uint_literal",h.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),ident:new he("ident",h.token,/[a-zA-Z][0-9a-zA-Z_]*/),and:new he("and",h.token,"&"),and_and:new he("and_and",h.token,"&&"),arrow:new he("arrow ",h.token,"->"),attr:new he("attr",h.token,"@"),attr_left:new he("attr_left",h.token,"[["),attr_right:new he("attr_right",h.token,"]]"),forward_slash:new he("forward_slash",h.token,"/"),bang:new he("bang",h.token,"!"),bracket_left:new he("bracket_left",h.token,"["),bracket_right:new he("bracket_right",h.token,"]"),brace_left:new he("brace_left",h.token,"{"),brace_right:new he("brace_right",h.token,"}"),colon:new he("colon",h.token,":"),comma:new he("comma",h.token,","),equal:new he("equal",h.token,"="),equal_equal:new he("equal_equal",h.token,"=="),not_equal:new he("not_equal",h.token,"!="),greater_than:new he("greater_than",h.token,">"),greater_than_equal:new he("greater_than_equal",h.token,">="),shift_right:new he("shift_right",h.token,">>"),less_than:new he("less_than",h.token,"<"),less_than_equal:new he("less_than_equal",h.token,"<="),shift_left:new he("shift_left",h.token,"<<"),modulo:new he("modulo",h.token,"%"),minus:new he("minus",h.token,"-"),minus_minus:new he("minus_minus",h.token,"--"),period:new he("period",h.token,"."),plus:new he("plus",h.token,"+"),plus_plus:new he("plus_plus",h.token,"++"),or:new he("or",h.token,"|"),or_or:new he("or_or",h.token,"||"),paren_left:new he("paren_left",h.token,"("),paren_right:new he("paren_right",h.token,")"),semicolon:new he("semicolon",h.token,";"),star:new he("star",h.token,"*"),tilde:new he("tilde",h.token,"~"),underscore:new he("underscore",h.token,"_"),xor:new he("xor",h.token,"^"),plus_equal:new he("plus_equal",h.token,"+="),minus_equal:new he("minus_equal",h.token,"-="),times_equal:new he("times_equal",h.token,"*="),division_equal:new he("division_equal",h.token,"/="),modulo_equal:new he("modulo_equal",h.token,"%="),and_equal:new he("and_equal",h.token,"&="),or_equal:new he("or_equal",h.token,"|="),xor_equal:new he("xor_equal",h.token,"^="),shift_right_equal:new he("shift_right_equal",h.token,">>="),shift_left_equal:new he("shift_left_equal",h.token,"<<=")},de.storage_class=[c.keywords.function,c.keywords.private,c.keywords.workgroup,c.keywords.uniform,c.keywords.storage],de.access_mode=[c.keywords.read,c.keywords.write,c.keywords.read_write],de.sampler_type=[c.keywords.sampler,c.keywords.sampler_comparison],de.sampled_texture_type=[c.keywords.texture_1d,c.keywords.texture_2d,c.keywords.texture_2d_array,c.keywords.texture_3d,c.keywords.texture_cube,c.keywords.texture_cube_array],de.multisampled_texture_type=[c.keywords.texture_multisampled_2d],de.storage_texture_type=[c.keywords.texture_storage_1d,c.keywords.texture_storage_2d,c.keywords.texture_storage_2d_array,c.keywords.texture_storage_3d],de.depth_texture_type=[c.keywords.texture_depth_2d,c.keywords.texture_depth_2d_array,c.keywords.texture_depth_cube,c.keywords.texture_depth_cube_array,c.keywords.texture_depth_multisampled_2d],de.texture_external_type=[c.keywords.texture_external],de.any_texture_type=[...c.sampled_texture_type,...c.multisampled_texture_type,...c.storage_texture_type,...c.depth_texture_type,...c.texture_external_type],de.texel_format=[c.keywords.r8unorm,c.keywords.r8snorm,c.keywords.r8uint,c.keywords.r8sint,c.keywords.r16uint,c.keywords.r16sint,c.keywords.r16float,c.keywords.rg8unorm,c.keywords.rg8snorm,c.keywords.rg8uint,c.keywords.rg8sint,c.keywords.r32uint,c.keywords.r32sint,c.keywords.r32float,c.keywords.rg16uint,c.keywords.rg16sint,c.keywords.rg16float,c.keywords.rgba8unorm,c.keywords.rgba8unorm_srgb,c.keywords.rgba8snorm,c.keywords.rgba8uint,c.keywords.rgba8sint,c.keywords.bgra8unorm,c.keywords.bgra8unorm_srgb,c.keywords.rgb10a2unorm,c.keywords.rg11b10float,c.keywords.rg32uint,c.keywords.rg32sint,c.keywords.rg32float,c.keywords.rgba16uint,c.keywords.rgba16sint,c.keywords.rgba16float,c.keywords.rgba32uint,c.keywords.rgba32sint,c.keywords.rgba32float],de.const_literal=[c.tokens.int_literal,c.tokens.uint_literal,c.tokens.decimal_float_literal,c.tokens.hex_float_literal,c.keywords.true,c.keywords.false],de.literal_or_ident=[c.tokens.ident,c.tokens.int_literal,c.tokens.uint_literal,c.tokens.decimal_float_literal,c.tokens.hex_float_literal],de.element_count_expression=[c.tokens.int_literal,c.tokens.uint_literal,c.tokens.ident],de.template_types=[c.keywords.vec2,c.keywords.vec3,c.keywords.vec4,c.keywords.mat2x2,c.keywords.mat2x3,c.keywords.mat2x4,c.keywords.mat3x2,c.keywords.mat3x3,c.keywords.mat3x4,c.keywords.mat4x2,c.keywords.mat4x3,c.keywords.mat4x4,c.keywords.atomic,c.keywords.bitcast,...c.any_texture_type],de.attribute_name=[c.tokens.ident,c.keywords.block],de.assignment_operators=[c.tokens.equal,c.tokens.plus_equal,c.tokens.minus_equal,c.tokens.times_equal,c.tokens.division_equal,c.tokens.modulo_equal,c.tokens.and_equal,c.tokens.or_equal,c.tokens.xor_equal,c.tokens.shift_right_equal,c.tokens.shift_left_equal],de.increment_operators=[c.tokens.plus_plus,c.tokens.minus_minus];class fe{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}isTemplateType(){return-1!=de.template_types.indexOf(this.type)}isArrayType(){return this.type==de.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class pe{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new fe(de.eof,"",this._line)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}let t=de.none;for(;;){let n=this._findType(e);const r=this._peekAhead();if(">"==e&&(">"==r||"="==r)){let e=!1,t=this._tokens.length-1;for(let n=0;n<5&&t>=0;++n,--t)if(this._tokens[t].type===de.tokens.less_than){t>0&&this._tokens[t-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(n),!0}if(n===de.none){let r=e,i=0;const s=2;for(let e=0;e<s;++e)if(r+=this._peekAhead(e),n=this._findType(r),n!==de.none){i=e;break}if(n===de.none)return t!==de.none&&(this._current--,this._addToken(t),!0);e=r,this._current+=i+1}if(t=n,this._isAtEnd())break;e+=this._advance()}return t!==de.none&&(this._addToken(t),!0)}_findType(e){for(const t in de.keywords){const n=de.keywords[t];if(this._match(e,n.rule))return n}for(const t in de.tokens){const n=de.tokens[t];if(this._match(e,n.rule))return n}return de.none}_match(e,t){if("string"==typeof t){if(t==e)return!0}else{const n=t.exec(e);if(n&&0==n.index&&n[0]==e)return!0}return!1}_isAtEnd(){return this._current>=this._source.length}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new fe(e,t,this._line))}}class me{constructor(){this._tokens=[],this._current=0,this._context=new f}parse(e){this._initialize(e);let t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}return t}_initialize(e){if(e)if("string"==typeof e){const t=new pe(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_error(e,t){return console.error(e,t),{token:e,message:t,toString:function(){return`${t}`}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==de.eof}_match(e){if(e instanceof he)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),t)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){let n=t.type;return-1!=e.indexOf(n)}return t.type==e}_advance(){return this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(de.tokens.semicolon)&&!this._isAtEnd(););if(this._match(de.keywords.alias)){const e=this._type_alias();return this._consume(de.tokens.semicolon,"Expected ';'"),e}if(this._match(de.keywords.enable)){const e=this._enable_directive();return this._consume(de.tokens.semicolon,"Expected ';'"),e}const e=this._attribute();if(this._check(de.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(de.tokens.semicolon,"Expected ';'."),t}if(this._check(de.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(de.tokens.semicolon,"Expected ';'."),t}if(this._check(de.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(de.tokens.semicolon,"Expected ';'."),t}if(this._check(de.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(de.tokens.semicolon,"Expected ';'."),t}if(this._check(de.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),t}if(this._check(de.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),t}return null}_function_decl(){if(!this._match(de.keywords.fn))return null;const e=this._consume(de.tokens.ident,"Expected function name.").toString();this._consume(de.tokens.paren_left,"Expected '(' for function arguments.");const t=[];if(!this._check(de.tokens.paren_right))do{if(this._check(de.tokens.paren_right))break;const e=this._attribute(),n=this._consume(de.tokens.ident,"Expected argument name.").toString();this._consume(de.tokens.colon,"Expected ':' for argument type.");const r=this._attribute(),i=this._type_decl();null!=i&&(i.attributes=r,t.push(new oe(n,i,e)))}while(this._match(de.tokens.comma));this._consume(de.tokens.paren_right,"Expected ')' after function arguments.");let n=null;if(this._match(de.tokens.arrow)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}const r=this._compound_statement();return new x(e,t,n,r)}_compound_statement(){const e=[];for(this._consume(de.tokens.brace_left,"Expected '{' for block.");!this._check(de.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(de.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(de.tokens.semicolon)&&!this._isAtEnd(););if(this._check(de.keywords.if))return this._if_statement();if(this._check(de.keywords.switch))return this._switch_statement();if(this._check(de.keywords.loop))return this._loop_statement();if(this._check(de.keywords.for))return this._for_statement();if(this._check(de.keywords.while))return this._while_statement();if(this._check(de.keywords.continuing))return this._continuing_statement();if(this._check(de.keywords.static_assert))return this._static_assert_statement();if(this._check(de.tokens.brace_left))return this._compound_statement();let e=null;return e=this._check(de.keywords.return)?this._return_statement():this._check([de.keywords.var,de.keywords.let,de.keywords.const])?this._variable_statement():this._match(de.keywords.discard)?new R:this._match(de.keywords.break)?new D:this._match(de.keywords.continue)?new j:this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=e&&this._consume(de.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(de.keywords.static_assert))return null;let e=this._optional_paren_expression();return new y(e)}_while_statement(){if(!this._match(de.keywords.while))return null;let e=this._optional_paren_expression();const t=this._compound_statement();return new _(e,t)}_continuing_statement(){if(!this._match(de.keywords.continuing))return null;const e=this._compound_statement();return new b(e)}_for_statement(){if(!this._match(de.keywords.for))return null;this._consume(de.tokens.paren_left,"Expected '('.");const e=this._check(de.tokens.semicolon)?null:this._for_init();this._consume(de.tokens.semicolon,"Expected ';'.");const t=this._check(de.tokens.semicolon)?null:this._short_circuit_or_expression();this._consume(de.tokens.semicolon,"Expected ';'.");const n=this._check(de.tokens.paren_right)?null:this._for_increment();this._consume(de.tokens.paren_right,"Expected ')'.");const r=this._compound_statement();return new w(e,t,n,r)}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(de.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(de.tokens.equal)&&(t=this._short_circuit_or_expression()),new k(e.name,e.type,e.storage,e.access,t)}if(this._match(de.keywords.let)){const e=this._consume(de.tokens.ident,"Expected name for let.").toString();let t=null;if(this._match(de.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(de.tokens.equal,"Expected '=' for let.");const n=this._short_circuit_or_expression();return new T(e,t,null,null,n)}if(this._match(de.keywords.const)){const e=this._consume(de.tokens.ident,"Expected name for const.").toString();let t=null;if(this._match(de.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(de.tokens.equal,"Expected '=' for const.");const n=this._short_circuit_or_expression();return new S(e,t,null,null,n)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(de.increment_operators))return this._current=e,null;const n=this._consume(de.increment_operators,"Expected increment operator");return new P(n.type===de.tokens.plus_plus?l.increment:l.decrement,t)}_assignment_statement(){let e=null;if(this._check(de.tokens.brace_right))return null;let t=this._match(de.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(de.assignment_operators,"Expected assignment operator."),r=this._short_circuit_or_expression();return new M(u.parse(n.lexeme),e,r)}_func_call_statement(){if(!this._check(de.tokens.ident))return null;const e=this._current,t=this._consume(de.tokens.ident,"Expected function name."),n=this._argument_expression_list();return null===n?(this._current=e,null):new E(t.lexeme,n)}_loop_statement(){if(!this._match(de.keywords.loop))return null;this._consume(de.tokens.brace_left,"Expected '{' for loop.");const e=[];let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.push(n);else e.push(t);t=this._statement()}let n=null;return this._match(de.keywords.continuing)&&(n=this._compound_statement()),this._consume(de.tokens.brace_right,"Expected '}' for loop."),new O(e,n)}_switch_statement(){if(!this._match(de.keywords.switch))return null;const e=this._optional_paren_expression();this._consume(de.tokens.brace_left,"Expected '{' for switch.");const t=this._switch_body();if(null==t||0==t.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(de.tokens.brace_right,"Expected '}' for switch."),new I(e,t)}_switch_body(){const e=[];if(this._match(de.keywords.case)){const t=this._case_selectors();this._match(de.tokens.colon),this._consume(de.tokens.brace_left,"Exected '{' for switch case.");const n=this._case_body();this._consume(de.tokens.brace_right,"Exected '}' for switch case."),e.push(new se(t,n))}if(this._match(de.keywords.default)){this._match(de.tokens.colon),this._consume(de.tokens.brace_left,"Exected '{' for switch default.");const t=this._case_body();this._consume(de.tokens.brace_right,"Exected '}' for switch default."),e.push(new ae(t))}if(this._check([de.keywords.default,de.keywords.case])){const t=this._switch_body();e.push(t[0])}return e}_case_selectors(){var e,t,n,r;const i=[null!==(t=null===(e=this._shift_expression())||void 0===e?void 0:e.evaluate(this._context).toString())&&void 0!==t?t:""];for(;this._match(de.tokens.comma);)i.push(null!==(r=null===(n=this._shift_expression())||void 0===n?void 0:n.evaluate(this._context).toString())&&void 0!==r?r:"");return i}_case_body(){if(this._match(de.keywords.fallthrough))return this._consume(de.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(de.keywords.if))return null;const e=this._optional_paren_expression(),t=this._compound_statement();let n=[];this._match_elseif()&&(n=this._elseif_statement(n));let r=null;return this._match(de.keywords.else)&&(r=this._compound_statement()),new U(e,t,n,r)}_match_elseif(){return this._tokens[this._current].type===de.keywords.else&&this._tokens[this._current+1].type===de.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(new le(t,n)),this._match_elseif()&&this._elseif_statement(e),e}_return_statement(){if(!this._match(de.keywords.return))return null;const e=this._short_circuit_or_expression();return new C(e)}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(de.tokens.or_or);)e=new re(this._previous().toString(),e,this._short_circuit_and_expr());return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(de.tokens.and_and);)e=new re(this._previous().toString(),e,this._inclusive_or_expression());return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(de.tokens.or);)e=new re(this._previous().toString(),e,this._exclusive_or_expression());return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(de.tokens.xor);)e=new re(this._previous().toString(),e,this._and_expression());return e}_and_expression(){let e=this._equality_expression();for(;this._match(de.tokens.and);)e=new re(this._previous().toString(),e,this._equality_expression());return e}_equality_expression(){const e=this._relational_expression();return this._match([de.tokens.equal_equal,de.tokens.not_equal])?new re(this._previous().toString(),e,this._relational_expression()):e}_relational_expression(){let e=this._shift_expression();for(;this._match([de.tokens.less_than,de.tokens.greater_than,de.tokens.less_than_equal,de.tokens.greater_than_equal]);)e=new re(this._previous().toString(),e,this._shift_expression());return e}_shift_expression(){let e=this._additive_expression();for(;this._match([de.tokens.shift_left,de.tokens.shift_right]);)e=new re(this._previous().toString(),e,this._additive_expression());return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([de.tokens.plus,de.tokens.minus]);)e=new re(this._previous().toString(),e,this._multiplicative_expression());return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([de.tokens.star,de.tokens.forward_slash,de.tokens.modulo]);)e=new re(this._previous().toString(),e,this._unary_expression());return e}_unary_expression(){return this._match([de.tokens.minus,de.tokens.bang,de.tokens.tilde,de.tokens.star,de.tokens.and])?new ne(this._previous().toString(),this._unary_expression()):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(de.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(de.tokens.bracket_right,"Expected ']'.");const t=this._postfix_expression();return t&&(e.postfix=t),e}if(this._match(de.tokens.period)){const e=this._consume(de.tokens.ident,"Expected member name."),t=this._postfix_expression(),n=new Y(e.lexeme);return t&&(n.postfix=t),n}return null}_getStruct(e){return this._context.aliases.has(e)?this._context.aliases.get(e).type:this._context.structs.has(e)?this._context.structs.get(e):null}_primary_expression(){if(this._match(de.tokens.ident)){const e=this._previous().toString();if(this._check(de.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getStruct(e);return null!=n?new W(n,t):new X(e,t)}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return new Z(e,t.value)}return new H(e)}if(this._match(de.const_literal))return new K(parseFloat(this._previous().toString()));if(this._check(de.tokens.paren_left))return this._paren_expression();if(this._match(de.keywords.bitcast)){this._consume(de.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(de.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return new Q(e,t)}const e=this._type_decl(),t=this._argument_expression_list();return new J(e,t)}_argument_expression_list(){if(!this._match(de.tokens.paren_left))return null;const e=[];do{if(this._check(de.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(de.tokens.comma));return this._consume(de.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(de.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(de.tokens.paren_right),new ee([e])}_paren_expression(){this._consume(de.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(de.tokens.paren_right,"Expected ')'."),new ee([e])}_struct_decl(){if(!this._match(de.keywords.struct))return null;const e=this._consume(de.tokens.ident,"Expected name for struct.").toString();this._consume(de.tokens.brace_left,"Expected '{' for struct body.");const t=[];for(;!this._check(de.tokens.brace_right);){const e=this._attribute(),n=this._consume(de.tokens.ident,"Expected variable name.").toString();this._consume(de.tokens.colon,"Expected ':' for struct member type.");const r=this._attribute(),i=this._type_decl();null!=i&&(i.attributes=r),this._check(de.tokens.brace_right)?this._match(de.tokens.comma):this._consume(de.tokens.comma,"Expected ',' for struct member."),t.push(new ue(n,i,e))}this._consume(de.tokens.brace_right,"Expected '}' after struct body.");const n=new V(e,t);return this._context.structs.set(e,n),n}_global_variable_decl(){const e=this._variable_decl();return e&&this._match(de.tokens.equal)&&(e.value=this._const_expression()),e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(de.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){if(!this._match(de.keywords.const))return null;const e=this._consume(de.tokens.ident,"Expected variable name");let t=null;if(this._match(de.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;if(this._match(de.tokens.equal)){const e=this._short_circuit_or_expression();if(e instanceof W)n=e;else if(e instanceof Z&&e.initializer instanceof W)n=e.initializer;else try{const t=e.evaluate(this._context);n=new K(t)}catch(t){n=e}}const r=new S(e.toString(),t,"","",n);return this._context.constants.set(r.name,r),r}_global_let_decl(){if(!this._match(de.keywords.let))return null;const e=this._consume(de.tokens.ident,"Expected variable name");let t=null;if(this._match(de.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;return this._match(de.tokens.equal)&&(n=this._const_expression()),new T(e.toString(),t,"","",n)}_const_expression(){if(this._match(de.const_literal))return new Y(this._previous().toString());const e=this._type_decl();this._consume(de.tokens.paren_left,"Expected '('.");let t=[];for(;!this._check(de.tokens.paren_right)&&(t.push(this._const_expression()),this._check(de.tokens.comma));)this._advance();return this._consume(de.tokens.paren_right,"Expected ')'."),new W(e,t)}_variable_decl(){if(!this._match(de.keywords.var))return null;let e="",t="";this._match(de.tokens.less_than)&&(e=this._consume(de.storage_class,"Expected storage_class.").toString(),this._match(de.tokens.comma)&&(t=this._consume(de.access_mode,"Expected access_mode.").toString()),this._consume(de.tokens.greater_than,"Expected '>'."));const n=this._consume(de.tokens.ident,"Expected variable name");let r=null;if(this._match(de.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}return new k(n.toString(),r,e,t,null)}_override_decl(){if(!this._match(de.keywords.override))return null;const e=this._consume(de.tokens.ident,"Expected variable name");let t=null;if(this._match(de.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return new A(e.toString(),t,null)}_enable_directive(){const e=this._consume(de.tokens.ident,"identity expected.");return new B(e.toString())}_type_alias(){const e=this._consume(de.tokens.ident,"identity expected.");this._consume(de.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=new z(e.toString(),t);return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([de.tokens.ident,...de.texel_format,de.keywords.bool,de.keywords.f32,de.keywords.i32,de.keywords.u32])){const e=this._advance(),t=e.toString();return this._context.structs.has(t)?this._context.structs.get(t):this._context.aliases.has(t)?this._context.aliases.get(t).type:new L(e.toString())}let e=this._texture_sampler_types();if(e)return e;if(this._check(de.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(de.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(de.tokens.comma)&&(n=this._consume(de.access_mode,"Expected access_mode for pointer").toString()),this._consume(de.tokens.greater_than,"Expected '>' for type.")),new N(e,t,n)}if(this._match(de.keywords.ptr)){let e=this._previous().toString();this._consume(de.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(de.storage_class,"Expected storage_class for pointer");this._consume(de.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let r=null;return this._match(de.tokens.comma)&&(r=this._consume(de.access_mode,"Expected access_mode for pointer").toString()),this._consume(de.tokens.greater_than,"Expected '>' for pointer."),new G(e,t.toString(),n,r)}const t=this._attribute();if(this._match(de.keywords.array)){let e=null,n=-1;const r=this._previous();if(this._match(de.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t="";this._match(de.tokens.comma)&&(t=this._shift_expression().evaluate(this._context).toString()),this._consume(de.tokens.greater_than,"Expected '>' for array."),n=t?parseInt(t):0}return new F(r.toString(),t,e,n)}return null}_texture_sampler_types(){if(this._match(de.sampler_type))return new $(this._previous().toString(),null,null);if(this._match(de.depth_texture_type))return new $(this._previous().toString(),null,null);if(this._match(de.sampled_texture_type)||this._match(de.multisampled_texture_type)){const e=this._previous();this._consume(de.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(de.tokens.greater_than,"Expected '>' for sampler type."),new $(e.toString(),t,null)}if(this._match(de.storage_texture_type)){const e=this._previous();this._consume(de.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(de.texel_format,"Invalid texel format.").toString();this._consume(de.tokens.comma,"Expected ',' after texel format.");const n=this._consume(de.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(de.tokens.greater_than,"Expected '>' for sampler type."),new $(e.toString(),t,n)}return null}_attribute(){let e=[];for(;this._match(de.tokens.attr);){const t=this._consume(de.attribute_name,"Expected attribute name"),n=new ce(t.toString(),null);if(this._match(de.tokens.paren_left)){if(n.value=this._consume(de.literal_or_ident,"Expected attribute value").toString(),this._check(de.tokens.comma)){this._advance();do{const e=this._consume(de.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(de.tokens.comma))}this._consume(de.tokens.paren_right,"Expected ')'")}e.push(n)}for(;this._match(de.tokens.attr_left);){if(!this._check(de.tokens.attr_right))do{const t=this._consume(de.attribute_name,"Expected attribute name"),n=new ce(t.toString(),null);if(this._match(de.tokens.paren_left)){if(n.value=[this._consume(de.literal_or_ident,"Expected attribute value").toString()],this._check(de.tokens.comma)){this._advance();do{const e=this._consume(de.literal_or_ident,"Expected attribute value").toString();n.value.push(e)}while(this._match(de.tokens.comma))}this._consume(de.tokens.paren_right,"Expected ')'")}e.push(n)}while(this._match(de.tokens.comma));this._consume(de.tokens.attr_right,"Expected ']]' after attribute declarations")}return 0==e.length?null:e}}class ge{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class ve{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class xe extends ge{constructor(e,t){super(e,t),this.members=[],this.align=0}get isStruct(){return!0}}class ye extends ge{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class _e extends ge{constructor(e,t,n,r){super(e,n),this.format=t,this.access=r}get isTemplate(){return!0}}!function(e){e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"}(d||(d={}));class be{constructor(e,t,n,r,i,s,a){this.name=e,this.type=t,this.group=n,this.binding=r,this.attributes=i,this.resourceType=s,this.access=a}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class we{constructor(e,t){this.name=e,this.type=t}}class ke{constructor(e,t){this.align=e,this.size=t}}class Ae{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r,this.interpolation=null}}class Te{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r}}class Se{constructor(e,t=null){this.stage=null,this.inputs=[],this.outputs=[],this.resources=[],this.name=e,this.stage=t}}class Pe{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class Me{constructor(e,t,n,r){this.name=e,this.type=t,this.attributes=n,this.id=r}}class Ee{constructor(e){this.resources=null,this.node=e}}class Oe{constructor(e){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new Pe,this._types=new Map,this._functions=new Map,e&&this.update(e)}_isStorageTexture(e){return"texture_storage_1d"==e.name||"texture_storage_2d"==e.name||"texture_storage_2d_array"==e.name||"texture_storage_3d"==e.name}update(e){const t=(new me).parse(e);for(const e of t)e instanceof x&&this._functions.set(e.name,new Ee(e));for(const e of t)if(e instanceof V){const t=this._getTypeInfo(e,null);t instanceof xe&&this.structs.push(t)}else if(e instanceof z)this.aliases.push(this._getAliasInfo(e));else if(e instanceof A){const t=e,n=this._getAttributeNum(t.attributes,"id",0),r=null!=t.type?this._getTypeInfo(t.type,t.attributes):null;this.overrides.push(new Me(t.name,r,t.attributes,n))}else if(this._isUniformVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),i=this._getTypeInfo(t.type,t.attributes),s=new be(t.name,i,n,r,t.attributes,d.Uniform,t.access);this.uniforms.push(s)}else if(this._isStorageVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),i=this._getTypeInfo(t.type,t.attributes),s=this._isStorageTexture(i),a=new be(t.name,i,n,r,t.attributes,s?d.StorageTexture:d.Storage,t.access);this.storage.push(a)}else if(this._isTextureVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),i=this._getTypeInfo(t.type,t.attributes),s=this._isStorageTexture(i),a=new be(t.name,i,n,r,t.attributes,s?d.StorageTexture:d.Texture,t.access);s?this.storage.push(a):this.textures.push(a)}else if(this._isSamplerVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),i=this._getTypeInfo(t.type,t.attributes),s=new be(t.name,i,n,r,t.attributes,d.Sampler,t.access);this.samplers.push(s)}else if(e instanceof x){const t=this._getAttribute(e,"vertex"),n=this._getAttribute(e,"fragment"),r=this._getAttribute(e,"compute"),i=t||n||r;if(i){const t=new Se(e.name,null==i?void 0:i.name);t.inputs=this._getInputs(e.args),t.outputs=this._getOutputs(e.returnType),t.resources=this._findResources(e),this.entry[i.name].push(t)}}}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_findResources(e){const t=[],n=this,r=[];return e.search((e=>{if(e instanceof m)r.push({});else if(e instanceof g)r.pop();else if(e instanceof k){if(r.length>0){const t=e;r[r.length-1][t.name]=t}}else if(e instanceof T){if(r.length>0){const t=e;r[r.length-1][t.name]=t}}else if(e instanceof H){const i=e;if(r.length>0&&r[r.length-1][i.name])return;const s=n._findResource(i.name);s&&t.push(s)}else if(e instanceof X){const r=e,i=n._functions.get(r.name);i&&(null===i.resources&&(i.resources=n._findResources(i.node)),t.push(...i.resources))}})),[...new Map(t.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.storage)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.textures)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.samplers)t(n.group,n.binding),e[n.group][n.binding]=n;return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof V)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof V)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(null!==e){const r=this._getTypeInfo(n.type,n.type.attributes),i=this._parseInt(e.value),s=new Te(n.name,r,e.name,i);t.push(s)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getTypeInfo(e,e.attributes),r=this._parseInt(t.value);return new Te("",n,t.name,r)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof V)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof V)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getAttribute(e,"interpolation"),r=this._getTypeInfo(e.type,e.attributes),i=this._parseInt(t.value),s=new Ae(e.name,r,t.name,i);return null!==n&&(s.interpolation=this._parseString(n.value)),s}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new we(e.name,this._getTypeInfo(e.type,null))}_getTypeInfo(e,t){if(this._types.has(e))return this._types.get(e);if(e instanceof F){const n=e,r=this._getTypeInfo(n.format,n.attributes),i=new ye(n.name,t);return i.format=r,i.count=n.count,this._types.set(e,i),this._updateTypeInfo(i),i}if(e instanceof V){const n=e,r=new xe(n.name,t);for(const e of n.members){const t=this._getTypeInfo(e.type,e.attributes);r.members.push(new ve(e.name,t,e.attributes))}return this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof $){const n=e,r=n.format instanceof L,i=n.format?r?this._getTypeInfo(n.format,null):new ge(n.format,null):null,s=new _e(n.name,i,t,n.access);return this._types.set(e,s),this._updateTypeInfo(s),s}if(e instanceof N){const n=e,r=n.format?this._getTypeInfo(n.format,null):null,i=new _e(n.name,r,t,n.access);return this._types.set(e,i),this._updateTypeInfo(i),i}const n=new ge(e.name,t);return this._types.set(e,n),this._updateTypeInfo(n),n}_updateTypeInfo(e){var t,n;const r=this._getTypeSize(e);if(e.size=null!==(t=null==r?void 0:r.size)&&void 0!==t?t:0,e instanceof ye){const t=this._getTypeSize(e.format);e.stride=null!==(n=null==t?void 0:t.size)&&void 0!==n?n:0,this._updateTypeInfo(e.format)}e instanceof xe&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,r=0,i=0,s=0;for(let a=0,o=e.members.length;a<o;++a){const o=e.members[a],l=this._getTypeSize(o);if(!l)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const u=l.align,c=l.size;n=this._roundUp(u,n+r),r=c,i=n,s=Math.max(s,u),o.offset=n,o.size=c,this._updateTypeInfo(o.type)}e.size=this._roundUp(s,i+r),e.align=s}_getTypeSize(e){var t;if(null==e)return null;const n=this._getAttributeNum(e.attributes,"size",0),r=this._getAttributeNum(e.attributes,"align",0);if(e instanceof ve&&(e=e.type),e instanceof ge){const t=this._getAlias(e.name);null!==t&&(e=t)}{const t=Oe._typeInfo[e.name];if(void 0!==t){const i="f16"===e.format?2:1;return new ke(Math.max(r,t.align/i),Math.max(n,t.size/i))}}{const t=Oe._typeInfo[e.name.substring(0,e.name.length-1)];if(t){const i="h"===e.name[e.name.length-1]?2:1;return new ke(Math.max(r,t.align/i),Math.max(n,t.size/i))}}if(e instanceof ye){let i=e,s=8,a=8;const o=this._getTypeSize(i.format);return null!==o&&(a=o.size,s=o.align),a=i.count*this._getAttributeNum(null!==(t=null==e?void 0:e.attributes)&&void 0!==t?t:null,"stride",this._roundUp(s,a)),n&&(a=n),new ke(Math.max(r,s),Math.max(n,a))}if(e instanceof xe){let t=0,i=0,s=0,a=0,o=0;for(const n of e.members){const e=this._getTypeSize(n.type);null!==e&&(t=Math.max(e.align,t),s=this._roundUp(e.align,s+a),a=e.size,o=s)}return i=this._roundUp(t,o+a),new ke(Math.max(r,t),Math.max(n,i))}return null}_isUniformVar(e){return e instanceof k&&"uniform"==e.storage}_isStorageVar(e){return e instanceof k&&"storage"==e.storage}_isTextureVar(e){return e instanceof k&&null!==e.type&&-1!=Oe._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof k&&null!==e.type&&-1!=Oe._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const r=n.attributes;for(let e of r)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let r of e)if(r.name==t){let e=null!==r&&null!==r.value?r.value:n;return e instanceof Array&&(e=e[0]),"number"==typeof e?e:"string"==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}function Ie(e,t){const n=function(e){return Array.isArray(e)||r(e)?[...e,1,1].slice(0,3):function(e){return[e.width,e.height||1,e.depthOrArrayLayers||1]}(e)}(e),i=Math.max(...n.slice(0,"3d"===t?3:2));return 1+Math.log2(i)|0}Oe._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},Oe._textureTypes=de.any_texture_type.map((e=>e.name)),Oe._samplerTypes=de.sampler_type.map((e=>e.name));const Ue=new WeakMap;const Ce=new Map([[Int8Array,{formats:["sint8","snorm8"],defaultForType:1}],[Uint8Array,{formats:["uint8","unorm8"],defaultForType:1}],[Int16Array,{formats:["sint16","snorm16"],defaultForType:1}],[Uint16Array,{formats:["uint16","unorm16"],defaultForType:1}],[Int32Array,{formats:["sint32","snorm32"],defaultForType:0}],[Uint32Array,{formats:["uint32","unorm32"],defaultForType:0}],[Float32Array,{formats:["float32","float32"],defaultForType:0}]]);function Be(e){return r(e)||Array.isArray(e)||function(e){const t=e;return r(t.data)||Array.isArray(t.data)}(e)}function ze(e){switch(e){case"1d":return"1d";case"3d":return"3d";default:return"2d"}}new Map([...Ce.entries()].map((([e,{formats:[t,n]}])=>[[t,e],[n,e]])).flat());const Re={"8snorm":Int8Array,"8unorm":Uint8Array,"8sint":Int8Array,"8uint":Uint8Array,"16snorm":Int16Array,"16unorm":Uint16Array,"16sint":Int16Array,"16uint":Uint16Array,"32snorm":Int32Array,"32unorm":Uint32Array,"32sint":Int32Array,"32uint":Uint32Array,"16float":Uint16Array,"32float":Float32Array},De=/([a-z]+)(\d+)([a-z]+)/;function je(e){const[,t,n,r]=De.exec(e),i=t.length,s=parseInt(n)/8;return{channels:t,numChannels:i,bytesPerChannel:s,bytesPerElement:i*s,Type:Re[`${n}${r}`]}}function Le(e,t,n,i={}){n.forEach(((n,s)=>{const a=[0,0,s+(i.baseArrayLayer||0)];if(Be(n))!function(e,t,n,i){const s=function(e,t){if(r(e))return e;const{Type:n}=je(t);return new n(e)}(n.data||n,t.format),a=function(e,t){return[e.width,e.height,e.depthOrArrayLayers].map((e=>Math.max(1,Math.floor(e/1))))}(t),{bytesPerElement:o}=je(t.format),l=i.origin||[0,0,0];e.queue.writeTexture({texture:t,origin:l},s,{bytesPerRow:o*a[0],rowsPerImage:a[1]},a)}(e,t,n,{origin:a});else{const r=n,{flipY:s,premultipliedAlpha:o,colorSpace:l}=i;e.queue.copyExternalImageToTexture({source:r,flipY:s},{texture:t,premultipliedAlpha:o,colorSpace:l,origin:a},Ve(r,i))}})),t.mipLevelCount>1&&function(e,t,n){let r=Ue.get(e);r||(r={pipelineByFormatAndView:{},moduleByViewType:{}},Ue.set(e,r));let{sampler:i,uniformBuffer:s,uniformValues:a}=r;const{pipelineByFormatAndView:o,moduleByViewType:l}=r;n=n||function(e){switch(e.dimension){case"1d":return"1d";case"3d":return"3d";default:return e.depthOrArrayLayers>1?"2d-array":"2d"}}(t);let u=l[n];if(!u){const t=function(e){let t,n;switch(e){case"2d":t="texture_2d<f32>",n="textureSample(ourTexture, ourSampler, fsInput.texcoord)";break;case"2d-array":t="texture_2d_array<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              fsInput.texcoord,\n              uni.layer)";break;case"cube":t="texture_cube<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1))";break;case"cube-array":t="texture_cube_array<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1), uni.layer)";break;default:throw new Error(`unsupported view: ${e}`)}return`\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          return vsOutput;\n        }\n\n        struct Uniforms {\n          layer: u32,\n        };\n\n        @group(0) @binding(0) var ourSampler: sampler;\n        @group(0) @binding(1) var ourTexture: ${t};\n        @group(0) @binding(2) var<uniform> uni: Uniforms;\n\n        @fragment fn fs(fsInput: VSOutput) -> @location(0) vec4f {\n          _ = uni.layer; // make sure this is used so all pipelines have the same bindings\n          return ${n};\n        }\n      `}(n);u=e.createShaderModule({label:`mip level generation for ${n}`,code:t}),l[n]=u}i||(i=e.createSampler({minFilter:"linear",magFilter:"linear"}),s=e.createBuffer({size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),a=new Uint32Array(1),Object.assign(r,{sampler:i,uniformBuffer:s,uniformValues:a}));const c=`${t.format}.${n}`;o[c]||(o[c]=e.createRenderPipeline({label:`mip level generator pipeline for ${n}`,layout:"auto",vertex:{module:u,entryPoint:"vs"},fragment:{module:u,entryPoint:"fs",targets:[{format:t.format}]}}));const h=o[c];for(let r=1;r<t.mipLevelCount;++r)for(let o=0;o<t.depthOrArrayLayers;++o){a[0]=o,e.queue.writeBuffer(s,0,a);const l=e.createBindGroup({layout:h.getBindGroupLayout(0),entries:[{binding:0,resource:i},{binding:1,resource:t.createView({dimension:n,baseMipLevel:r-1,mipLevelCount:1})},{binding:2,resource:{buffer:s}}]}),u={label:"mip gen renderPass",colorAttachments:[{view:t.createView({dimension:"2d",baseMipLevel:r,mipLevelCount:1,baseArrayLayer:o,arrayLayerCount:1}),loadOp:"clear",storeOp:"store"}]},c=e.createCommandEncoder({label:"mip gen encoder"}),d=c.beginRenderPass(u);d.setPipeline(h),d.setBindGroup(0,l),d.draw(3),d.end();const f=c.finish();e.queue.submit([f])}}(e,t)}function Ve(e,t){if(e instanceof HTMLVideoElement)return[e.videoWidth,e.videoHeight,1];{const n=e,{width:i,height:s}=n;if(i>0&&s>0&&!Be(e))return[i,s,1];const a=t.format||"rgba8unorm",{bytesPerElement:o,bytesPerChannel:l}=je(a),u=r(e)||Array.isArray(e)?e:e.data;return function(e,t,n,r="2d"){if(n%1!=0)throw new Error("can't guess dimensions");if(e||t){if(t){if(!e&&(e=n/t)%1)throw new Error("can't guess dimensions")}else if((t=n/e)%1)throw new Error("can't guess dimensions")}else{const i=Math.sqrt(n/("cube"===r?6:1));i%1==0?(e=i,t=i):(e=n,t=1)}const i=n/e/t;if(i%1)throw new Error("can't guess dimensions");return[e,t,i]}(i,s,(r(u)?u.byteLength:u.length*l)/o)}}async function Ne(e,t,n={}){const r=await Promise.all(t.map((e=>async function(e,t={}){const n=await fetch(e),r=await n.blob(),i={...t,...void 0!==t.colorSpaceConversion&&{colorSpaceConversion:"none"}};return await createImageBitmap(r,i)}(e))));return function(e,t,n={}){const r=Ve(t[0],n);r[2]=r[2]>1?r[2]:t.length;const i=e.createTexture({dimension:ze(n.dimension),format:n.format||"rgba8unorm",mipLevelCount:n.mipLevelCount?n.mipLevelCount:n.mips?Ie(r):1,size:r,usage:(n.usage??0)|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});return Le(e,i,t,n),i}(e,r,n)}async function Ge(e,t,n={}){return Ne(e,[t],n)}},6300:(e,t,n)=>{n.d(t,{Yu:()=>Ge,Zc:()=>O,eR:()=>te,pB:()=>ve});let r=1e-6,i=Float32Array;function s(e=0,t=0){const n=new i(2);return void 0!==e&&(n[0]=e,void 0!==t&&(n[1]=t)),n}let a=Float32Array;function o(e,t,n){const r=new a(3);return void 0!==e&&(r[0]=e,void 0!==t&&(r[1]=t,void 0!==n&&(r[2]=n))),r}const l=s;function u(e,t,n){return(n=n||new i(2))[0]=e[0]-t[0],n[1]=e[1]-t[1],n}const c=u;function h(e,t,n){return(n=n||new i(2))[0]=e[0]*t,n[1]=e[1]*t,n}const d=h;function f(e,t){return(t=t||new i(2))[0]=1/e[0],t[1]=1/e[1],t}const p=f;function m(e,t){return e[0]*t[0]+e[1]*t[1]}function g(e){const t=e[0],n=e[1];return Math.sqrt(t*t+n*n)}const v=g;function x(e){const t=e[0],n=e[1];return t*t+n*n}const y=x;function _(e,t){const n=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(n*n+r*r)}const b=_;function w(e,t){const n=e[0]-t[0],r=e[1]-t[1];return n*n+r*r}const k=w;function A(e,t){return(t=t||new i(2))[0]=e[0],t[1]=e[1],t}const T=A;function S(e,t,n){return(n=n||new i(2))[0]=e[0]*t[0],n[1]=e[1]*t[1],n}const P=S;function M(e,t,n){return(n=n||new i(2))[0]=e[0]/t[0],n[1]=e[1]/t[1],n}const E=M;var O=Object.freeze({__proto__:null,create:s,setDefaultType:function(e){const t=i;return i=e,t},fromValues:l,set:function(e,t,n){return(n=n||new i(2))[0]=e,n[1]=t,n},ceil:function(e,t){return(t=t||new i(2))[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t},floor:function(e,t){return(t=t||new i(2))[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t},round:function(e,t){return(t=t||new i(2))[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t},clamp:function(e,t=0,n=1,r){return(r=r||new i(2))[0]=Math.min(n,Math.max(t,e[0])),r[1]=Math.min(n,Math.max(t,e[1])),r},add:function(e,t,n){return(n=n||new i(2))[0]=e[0]+t[0],n[1]=e[1]+t[1],n},addScaled:function(e,t,n,r){return(r=r||new i(2))[0]=e[0]+t[0]*n,r[1]=e[1]+t[1]*n,r},angle:function(e,t){const n=e[0],r=e[1],i=e[0],s=e[1],a=Math.sqrt(n*n+r*r)*Math.sqrt(i*i+s*s),o=a&&m(e,t)/a;return Math.acos(o)},subtract:u,sub:c,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<r&&Math.abs(e[1]-t[1])<r},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]},lerp:function(e,t,n,r){return(r=r||new i(2))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r},lerpV:function(e,t,n,r){return(r=r||new i(2))[0]=e[0]+n[0]*(t[0]-e[0]),r[1]=e[1]+n[1]*(t[1]-e[1]),r},max:function(e,t,n){return(n=n||new i(2))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n},min:function(e,t,n){return(n=n||new i(2))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n},mulScalar:h,scale:d,divScalar:function(e,t,n){return(n=n||new i(2))[0]=e[0]/t,n[1]=e[1]/t,n},inverse:f,invert:p,cross:function(e,t,n){n=n||new a(3);const r=e[0]*t[1]-e[1]*t[0];return n[0]=0,n[1]=0,n[2]=r,n},dot:m,length:g,len:v,lengthSq:x,lenSq:y,distance:_,dist:b,distanceSq:w,distSq:k,normalize:function(e,t){t=t||new i(2);const n=e[0],r=e[1],s=Math.sqrt(n*n+r*r);return s>1e-5?(t[0]=n/s,t[1]=r/s):(t[0]=0,t[1]=0),t},negate:function(e,t){return(t=t||new i(2))[0]=-e[0],t[1]=-e[1],t},copy:A,clone:T,multiply:S,mul:P,divide:M,div:E,random:function(e=1,t){t=t||new i(2);const n=2*Math.random()*Math.PI;return t[0]=Math.cos(n)*e,t[1]=Math.sin(n)*e,t},zero:function(e){return(e=e||new i(2))[0]=0,e[1]=0,e},transformMat4:function(e,t,n){n=n||new i(2);const r=e[0],s=e[1];return n[0]=r*t[0]+s*t[4]+t[12],n[1]=r*t[1]+s*t[5]+t[13],n},transformMat3:function(e,t,n){n=n||new i(2);const r=e[0],s=e[1];return n[0]=t[0]*r+t[4]*s+t[8],n[1]=t[1]*r+t[5]*s+t[9],n}});Float32Array;new Map([[Float32Array,()=>new Float32Array(12)],[Float64Array,()=>new Float64Array(12)],[Array,()=>new Array(12).fill(0)]]).get(Float32Array);const I=o;function U(e,t,n){return(n=n||new a(3))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n}const C=U;function B(e,t,n){return(n=n||new a(3))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n}const z=B;function R(e,t){return(t=t||new a(3))[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t}const D=R;function j(e,t,n){n=n||new a(3);const r=e[2]*t[0]-e[0]*t[2],i=e[0]*t[1]-e[1]*t[0];return n[0]=e[1]*t[2]-e[2]*t[1],n[1]=r,n[2]=i,n}function L(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function V(e){const t=e[0],n=e[1],r=e[2];return Math.sqrt(t*t+n*n+r*r)}const N=V;function G(e){const t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r}const F=G;function $(e,t){const n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return Math.sqrt(n*n+r*r+i*i)}const q=$;function Y(e,t){const n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return n*n+r*r+i*i}const W=Y;function X(e,t){t=t||new a(3);const n=e[0],r=e[1],i=e[2],s=Math.sqrt(n*n+r*r+i*i);return s>1e-5?(t[0]=n/s,t[1]=r/s,t[2]=i/s):(t[0]=0,t[1]=0,t[2]=0),t}function H(e,t){return(t=t||new a(3))[0]=e[0],t[1]=e[1],t[2]=e[2],t}const Z=H;function K(e,t,n){return(n=n||new a(3))[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n}const Q=K;function J(e,t,n){return(n=n||new a(3))[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n}const ee=J;var te=Object.freeze({__proto__:null,create:o,setDefaultType:function(e){const t=a;return a=e,t},fromValues:I,set:function(e,t,n,r){return(r=r||new a(3))[0]=e,r[1]=t,r[2]=n,r},ceil:function(e,t){return(t=t||new a(3))[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t},floor:function(e,t){return(t=t||new a(3))[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t},round:function(e,t){return(t=t||new a(3))[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t},clamp:function(e,t=0,n=1,r){return(r=r||new a(3))[0]=Math.min(n,Math.max(t,e[0])),r[1]=Math.min(n,Math.max(t,e[1])),r[2]=Math.min(n,Math.max(t,e[2])),r},add:function(e,t,n){return(n=n||new a(3))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n},addScaled:function(e,t,n,r){return(r=r||new a(3))[0]=e[0]+t[0]*n,r[1]=e[1]+t[1]*n,r[2]=e[2]+t[2]*n,r},angle:function(e,t){const n=e[0],r=e[1],i=e[2],s=e[0],a=e[1],o=e[2],l=Math.sqrt(n*n+r*r+i*i)*Math.sqrt(s*s+a*a+o*o),u=l&&L(e,t)/l;return Math.acos(u)},subtract:U,sub:C,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<r&&Math.abs(e[1]-t[1])<r&&Math.abs(e[2]-t[2])<r},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},lerp:function(e,t,n,r){return(r=r||new a(3))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r[2]=e[2]+n*(t[2]-e[2]),r},lerpV:function(e,t,n,r){return(r=r||new a(3))[0]=e[0]+n[0]*(t[0]-e[0]),r[1]=e[1]+n[1]*(t[1]-e[1]),r[2]=e[2]+n[2]*(t[2]-e[2]),r},max:function(e,t,n){return(n=n||new a(3))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n[2]=Math.max(e[2],t[2]),n},min:function(e,t,n){return(n=n||new a(3))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n[2]=Math.min(e[2],t[2]),n},mulScalar:B,scale:z,divScalar:function(e,t,n){return(n=n||new a(3))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n},inverse:R,invert:D,cross:j,dot:L,length:V,len:N,lengthSq:G,lenSq:F,distance:$,dist:q,distanceSq:Y,distSq:W,normalize:X,negate:function(e,t){return(t=t||new a(3))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},copy:H,clone:Z,multiply:K,mul:Q,divide:J,div:ee,random:function(e=1,t){t=t||new a(3);const n=2*Math.random()*Math.PI,r=2*Math.random()-1,i=Math.sqrt(1-r*r)*e;return t[0]=Math.cos(n)*i,t[1]=Math.sin(n)*i,t[2]=r*e,t},zero:function(e){return(e=e||new a(3))[0]=0,e[1]=0,e[2]=0,e},transformMat4:function(e,t,n){n=n||new a(3);const r=e[0],i=e[1],s=e[2],o=t[3]*r+t[7]*i+t[11]*s+t[15]||1;return n[0]=(t[0]*r+t[4]*i+t[8]*s+t[12])/o,n[1]=(t[1]*r+t[5]*i+t[9]*s+t[13])/o,n[2]=(t[2]*r+t[6]*i+t[10]*s+t[14])/o,n},transformMat4Upper3x3:function(e,t,n){n=n||new a(3);const r=e[0],i=e[1],s=e[2];return n[0]=r*t[0]+i*t[4]+s*t[8],n[1]=r*t[1]+i*t[5]+s*t[9],n[2]=r*t[2]+i*t[6]+s*t[10],n},transformMat3:function(e,t,n){n=n||new a(3);const r=e[0],i=e[1],s=e[2];return n[0]=r*t[0]+i*t[4]+s*t[8],n[1]=r*t[1]+i*t[5]+s*t[9],n[2]=r*t[2]+i*t[6]+s*t[10],n},transformQuat:function(e,t,n){n=n||new a(3);const r=t[0],i=t[1],s=t[2],o=2*t[3],l=e[0],u=e[1],c=e[2],h=i*c-s*u,d=s*l-r*c,f=r*u-i*l;return n[0]=l+h*o+2*(i*f-s*d),n[1]=u+d*o+2*(s*h-r*f),n[2]=c+f*o+2*(r*d-i*h),n},getTranslation:function(e,t){return(t=t||new a(3))[0]=e[12],t[1]=e[13],t[2]=e[14],t},getAxis:function(e,t,n){const r=4*t;return(n=n||new a(3))[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},getScaling:function(e,t){t=t||new a(3);const n=e[0],r=e[1],i=e[2],s=e[4],o=e[5],l=e[6],u=e[8],c=e[9],h=e[10];return t[0]=Math.sqrt(n*n+r*r+i*i),t[1]=Math.sqrt(s*s+o*o+l*l),t[2]=Math.sqrt(u*u+c*c+h*h),t}});let ne=Float32Array;function re(e,t){return(t=t||new ne(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}const ie=re;function se(e){return(e=e||new ne(16))[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ae(e,t){t=t||new ne(16);const n=e[0],r=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],h=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],v=e[15],x=d*v,y=g*f,_=l*v,b=g*u,w=l*f,k=d*u,A=i*v,T=g*s,S=i*f,P=d*s,M=i*u,E=l*s,O=c*m,I=p*h,U=a*m,C=p*o,B=a*h,z=c*o,R=n*m,D=p*r,j=n*h,L=c*r,V=n*o,N=a*r,G=x*o+b*h+w*m-(y*o+_*h+k*m),F=y*r+A*h+P*m-(x*r+T*h+S*m),$=_*r+T*o+M*m-(b*r+A*o+E*m),q=k*r+S*o+E*h-(w*r+P*o+M*h),Y=1/(n*G+a*F+c*$+p*q);return t[0]=Y*G,t[1]=Y*F,t[2]=Y*$,t[3]=Y*q,t[4]=Y*(y*a+_*c+k*p-(x*a+b*c+w*p)),t[5]=Y*(x*n+T*c+S*p-(y*n+A*c+P*p)),t[6]=Y*(b*n+A*a+E*p-(_*n+T*a+M*p)),t[7]=Y*(w*n+P*a+M*c-(k*n+S*a+E*c)),t[8]=Y*(O*u+C*f+B*v-(I*u+U*f+z*v)),t[9]=Y*(I*s+R*f+L*v-(O*s+D*f+j*v)),t[10]=Y*(U*s+D*u+V*v-(C*s+R*u+N*v)),t[11]=Y*(z*s+j*u+N*f-(B*s+L*u+V*f)),t[12]=Y*(U*d+z*g+I*l-(B*g+O*l+C*d)),t[13]=Y*(j*g+O*i+D*d-(R*d+L*g+I*i)),t[14]=Y*(R*l+N*g+C*i-(V*g+U*i+D*l)),t[15]=Y*(V*d+B*i+L*l-(j*l+N*d+z*i)),t}const oe=ae;function le(e,t,n){n=n||new ne(16);const r=e[0],i=e[1],s=e[2],a=e[3],o=e[4],l=e[5],u=e[6],c=e[7],h=e[8],d=e[9],f=e[10],p=e[11],m=e[12],g=e[13],v=e[14],x=e[15],y=t[0],_=t[1],b=t[2],w=t[3],k=t[4],A=t[5],T=t[6],S=t[7],P=t[8],M=t[9],E=t[10],O=t[11],I=t[12],U=t[13],C=t[14],B=t[15];return n[0]=r*y+o*_+h*b+m*w,n[1]=i*y+l*_+d*b+g*w,n[2]=s*y+u*_+f*b+v*w,n[3]=a*y+c*_+p*b+x*w,n[4]=r*k+o*A+h*T+m*S,n[5]=i*k+l*A+d*T+g*S,n[6]=s*k+u*A+f*T+v*S,n[7]=a*k+c*A+p*T+x*S,n[8]=r*P+o*M+h*E+m*O,n[9]=i*P+l*M+d*E+g*O,n[10]=s*P+u*M+f*E+v*O,n[11]=a*P+c*M+p*E+x*O,n[12]=r*I+o*U+h*C+m*B,n[13]=i*I+l*U+d*C+g*B,n[14]=s*I+u*U+f*C+v*B,n[15]=a*I+c*U+p*C+x*B,n}const ue=le;let ce,he,de;function fe(e,t,n){n=n||new ne(16);let r=e[0],i=e[1],s=e[2];const a=Math.sqrt(r*r+i*i+s*s);r/=a,i/=a,s/=a;const o=r*r,l=i*i,u=s*s,c=Math.cos(t),h=Math.sin(t),d=1-c;return n[0]=o+(1-o)*c,n[1]=r*i*d+s*h,n[2]=r*s*d-i*h,n[3]=0,n[4]=r*i*d-s*h,n[5]=l+(1-l)*c,n[6]=i*s*d+r*h,n[7]=0,n[8]=r*s*d+i*h,n[9]=i*s*d-r*h,n[10]=u+(1-u)*c,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}const pe=fe;function me(e,t,n,r){r=r||new ne(16);let i=t[0],s=t[1],a=t[2];const o=Math.sqrt(i*i+s*s+a*a);i/=o,s/=o,a/=o;const l=i*i,u=s*s,c=a*a,h=Math.cos(n),d=Math.sin(n),f=1-h,p=l+(1-l)*h,m=i*s*f+a*d,g=i*a*f-s*d,v=i*s*f-a*d,x=u+(1-u)*h,y=s*a*f+i*d,_=i*a*f+s*d,b=s*a*f-i*d,w=c+(1-c)*h,k=e[0],A=e[1],T=e[2],S=e[3],P=e[4],M=e[5],E=e[6],O=e[7],I=e[8],U=e[9],C=e[10],B=e[11];return r[0]=p*k+m*P+g*I,r[1]=p*A+m*M+g*U,r[2]=p*T+m*E+g*C,r[3]=p*S+m*O+g*B,r[4]=v*k+x*P+y*I,r[5]=v*A+x*M+y*U,r[6]=v*T+x*E+y*C,r[7]=v*S+x*O+y*B,r[8]=_*k+b*P+w*I,r[9]=_*A+b*M+w*U,r[10]=_*T+b*E+w*C,r[11]=_*S+b*O+w*B,e!==r&&(r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r}const ge=me;var ve=Object.freeze({__proto__:null,setDefaultType:function(e){const t=ne;return ne=e,t},create:function(e,t,n,r,i,s,a,o,l,u,c,h,d,f,p,m){const g=new ne(16);return void 0!==e&&(g[0]=e,void 0!==t&&(g[1]=t,void 0!==n&&(g[2]=n,void 0!==r&&(g[3]=r,void 0!==i&&(g[4]=i,void 0!==s&&(g[5]=s,void 0!==a&&(g[6]=a,void 0!==o&&(g[7]=o,void 0!==l&&(g[8]=l,void 0!==u&&(g[9]=u,void 0!==c&&(g[10]=c,void 0!==h&&(g[11]=h,void 0!==d&&(g[12]=d,void 0!==f&&(g[13]=f,void 0!==p&&(g[14]=p,void 0!==m&&(g[15]=m)))))))))))))))),g},set:function(e,t,n,r,i,s,a,o,l,u,c,h,d,f,p,m,g){return(g=g||new ne(16))[0]=e,g[1]=t,g[2]=n,g[3]=r,g[4]=i,g[5]=s,g[6]=a,g[7]=o,g[8]=l,g[9]=u,g[10]=c,g[11]=h,g[12]=d,g[13]=f,g[14]=p,g[15]=m,g},fromMat3:function(e,t){return(t=t||new ne(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=0,t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=0,t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromQuat:function(e,t){t=t||new ne(16);const n=e[0],r=e[1],i=e[2],s=e[3],a=n+n,o=r+r,l=i+i,u=n*a,c=r*a,h=r*o,d=i*a,f=i*o,p=i*l,m=s*a,g=s*o,v=s*l;return t[0]=1-h-p,t[1]=c+v,t[2]=d-g,t[3]=0,t[4]=c-v,t[5]=1-u-p,t[6]=f+m,t[7]=0,t[8]=d+g,t[9]=f-m,t[10]=1-u-h,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},negate:function(e,t){return(t=t||new ne(16))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},copy:re,clone:ie,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<r&&Math.abs(e[1]-t[1])<r&&Math.abs(e[2]-t[2])<r&&Math.abs(e[3]-t[3])<r&&Math.abs(e[4]-t[4])<r&&Math.abs(e[5]-t[5])<r&&Math.abs(e[6]-t[6])<r&&Math.abs(e[7]-t[7])<r&&Math.abs(e[8]-t[8])<r&&Math.abs(e[9]-t[9])<r&&Math.abs(e[10]-t[10])<r&&Math.abs(e[11]-t[11])<r&&Math.abs(e[12]-t[12])<r&&Math.abs(e[13]-t[13])<r&&Math.abs(e[14]-t[14])<r&&Math.abs(e[15]-t[15])<r},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},identity:se,transpose:function(e,t){if((t=t||new ne(16))===e){let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,t}const n=e[0],r=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],u=e[7],c=e[8],h=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],v=e[15];return t[0]=n,t[1]=a,t[2]=c,t[3]=p,t[4]=r,t[5]=o,t[6]=h,t[7]=m,t[8]=i,t[9]=l,t[10]=d,t[11]=g,t[12]=s,t[13]=u,t[14]=f,t[15]=v,t},inverse:ae,determinant:function(e){const t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15],v=h*g,x=m*d,y=o*g,_=m*l,b=o*d,w=h*l,k=r*g,A=m*i,T=r*d,S=h*i,P=r*l,M=o*i;return t*(v*a+_*c+b*p-(x*a+y*c+w*p))+s*(x*n+k*c+S*p-(v*n+A*c+T*p))+u*(y*n+A*a+P*p-(_*n+k*a+M*p))+f*(w*n+T*a+M*c-(b*n+S*a+P*c))},invert:oe,multiply:le,mul:ue,setTranslation:function(e,t,n){return e!==(n=n||se())&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11]),n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n},getTranslation:function(e,t){return(t=t||o())[0]=e[12],t[1]=e[13],t[2]=e[14],t},getAxis:function(e,t,n){const r=4*t;return(n=n||o())[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},setAxis:function(e,t,n,r){r!==e&&(r=re(e,r));const i=4*n;return r[i+0]=t[0],r[i+1]=t[1],r[i+2]=t[2],r},getScaling:function(e,t){t=t||o();const n=e[0],r=e[1],i=e[2],s=e[4],a=e[5],l=e[6],u=e[8],c=e[9],h=e[10];return t[0]=Math.sqrt(n*n+r*r+i*i),t[1]=Math.sqrt(s*s+a*a+l*l),t[2]=Math.sqrt(u*u+c*c+h*h),t},perspective:function(e,t,n,r,i){i=i||new ne(16);const s=Math.tan(.5*Math.PI-.5*e);if(i[0]=s/t,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=s,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[11]=-1,i[12]=0,i[13]=0,i[15]=0,r===1/0)i[10]=-1,i[14]=-n;else{const e=1/(n-r);i[10]=r*e,i[14]=r*n*e}return i},ortho:function(e,t,n,r,i,s,a){return(a=a||new ne(16))[0]=2/(t-e),a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/(r-n),a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1/(i-s),a[11]=0,a[12]=(t+e)/(e-t),a[13]=(r+n)/(n-r),a[14]=i/(i-s),a[15]=1,a},frustum:function(e,t,n,r,i,s,a){const o=t-e,l=r-n,u=i-s;return(a=a||new ne(16))[0]=2*i/o,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2*i/l,a[6]=0,a[7]=0,a[8]=(e+t)/o,a[9]=(r+n)/l,a[10]=s/u,a[11]=-1,a[12]=0,a[13]=0,a[14]=i*s/u,a[15]=0,a},aim:function(e,t,n,r){return r=r||new ne(16),ce=ce||o(),he=he||o(),de=de||o(),X(U(t,e,de),de),X(j(n,de,ce),ce),X(j(de,ce,he),he),r[0]=ce[0],r[1]=ce[1],r[2]=ce[2],r[3]=0,r[4]=he[0],r[5]=he[1],r[6]=he[2],r[7]=0,r[8]=de[0],r[9]=de[1],r[10]=de[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},cameraAim:function(e,t,n,r){return r=r||new ne(16),ce=ce||o(),he=he||o(),de=de||o(),X(U(e,t,de),de),X(j(n,de,ce),ce),X(j(de,ce,he),he),r[0]=ce[0],r[1]=ce[1],r[2]=ce[2],r[3]=0,r[4]=he[0],r[5]=he[1],r[6]=he[2],r[7]=0,r[8]=de[0],r[9]=de[1],r[10]=de[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},lookAt:function(e,t,n,r){return r=r||new ne(16),ce=ce||o(),he=he||o(),de=de||o(),X(U(e,t,de),de),X(j(n,de,ce),ce),X(j(de,ce,he),he),r[0]=ce[0],r[1]=he[0],r[2]=de[0],r[3]=0,r[4]=ce[1],r[5]=he[1],r[6]=de[1],r[7]=0,r[8]=ce[2],r[9]=he[2],r[10]=de[2],r[11]=0,r[12]=-(ce[0]*e[0]+ce[1]*e[1]+ce[2]*e[2]),r[13]=-(he[0]*e[0]+he[1]*e[1]+he[2]*e[2]),r[14]=-(de[0]*e[0]+de[1]*e[1]+de[2]*e[2]),r[15]=1,r},translation:function(e,t){return(t=t||new ne(16))[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t},translate:function(e,t,n){n=n||new ne(16);const r=t[0],i=t[1],s=t[2],a=e[0],o=e[1],l=e[2],u=e[3],c=e[4],h=e[5],d=e[6],f=e[7],p=e[8],m=e[9],g=e[10],v=e[11],x=e[12],y=e[13],_=e[14],b=e[15];return e!==n&&(n[0]=a,n[1]=o,n[2]=l,n[3]=u,n[4]=c,n[5]=h,n[6]=d,n[7]=f,n[8]=p,n[9]=m,n[10]=g,n[11]=v),n[12]=a*r+c*i+p*s+x,n[13]=o*r+h*i+m*s+y,n[14]=l*r+d*i+g*s+_,n[15]=u*r+f*i+v*s+b,n},rotationX:function(e,t){t=t||new ne(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=r,t[7]=0,t[8]=0,t[9]=-r,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateX:function(e,t,n){n=n||new ne(16);const r=e[4],i=e[5],s=e[6],a=e[7],o=e[8],l=e[9],u=e[10],c=e[11],h=Math.cos(t),d=Math.sin(t);return n[4]=h*r+d*o,n[5]=h*i+d*l,n[6]=h*s+d*u,n[7]=h*a+d*c,n[8]=h*o-d*r,n[9]=h*l-d*i,n[10]=h*u-d*s,n[11]=h*c-d*a,e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationY:function(e,t){t=t||new ne(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=0,t[2]=-r,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=r,t[9]=0,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateY:function(e,t,n){n=n||new ne(16);const r=e[0],i=e[1],s=e[2],a=e[3],o=e[8],l=e[9],u=e[10],c=e[11],h=Math.cos(t),d=Math.sin(t);return n[0]=h*r-d*o,n[1]=h*i-d*l,n[2]=h*s-d*u,n[3]=h*a-d*c,n[8]=h*o+d*r,n[9]=h*l+d*i,n[10]=h*u+d*s,n[11]=h*c+d*a,e!==n&&(n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationZ:function(e,t){t=t||new ne(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=r,t[2]=0,t[3]=0,t[4]=-r,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateZ:function(e,t,n){n=n||new ne(16);const r=e[0],i=e[1],s=e[2],a=e[3],o=e[4],l=e[5],u=e[6],c=e[7],h=Math.cos(t),d=Math.sin(t);return n[0]=h*r+d*o,n[1]=h*i+d*l,n[2]=h*s+d*u,n[3]=h*a+d*c,n[4]=h*o-d*r,n[5]=h*l-d*i,n[6]=h*u-d*s,n[7]=h*c-d*a,e!==n&&(n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},axisRotation:fe,rotation:pe,axisRotate:me,rotate:ge,scaling:function(e,t){return(t=t||new ne(16))[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},scale:function(e,t,n){n=n||new ne(16);const r=t[0],i=t[1],s=t[2];return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=r*e[3],n[4]=i*e[4],n[5]=i*e[5],n[6]=i*e[6],n[7]=i*e[7],n[8]=s*e[8],n[9]=s*e[9],n[10]=s*e[10],n[11]=s*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},uniformScaling:function(e,t){return(t=t||new ne(16))[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},uniformScale:function(e,t,n){return(n=n||new ne(16))[0]=t*e[0],n[1]=t*e[1],n[2]=t*e[2],n[3]=t*e[3],n[4]=t*e[4],n[5]=t*e[5],n[6]=t*e[6],n[7]=t*e[7],n[8]=t*e[8],n[9]=t*e[9],n[10]=t*e[10],n[11]=t*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n}});let xe=Float32Array;function ye(e,t,n,r){const i=new xe(4);return void 0!==e&&(i[0]=e,void 0!==t&&(i[1]=t,void 0!==n&&(i[2]=n,void 0!==r&&(i[3]=r)))),i}const _e=ye;function be(e,t,n){n=n||new xe(4);const r=.5*t,i=Math.sin(r);return n[0]=i*e[0],n[1]=i*e[1],n[2]=i*e[2],n[3]=Math.cos(r),n}function we(e,t,n){n=n||new xe(4);const r=e[0],i=e[1],s=e[2],a=e[3],o=t[0],l=t[1],u=t[2],c=t[3];return n[0]=r*c+a*o+i*u-s*l,n[1]=i*c+a*l+s*o-r*u,n[2]=s*c+a*u+r*l-i*o,n[3]=a*c-r*o-i*l-s*u,n}const ke=we;function Ae(e,t,n,i){i=i||new xe(4);const s=e[0],a=e[1],o=e[2],l=e[3];let u,c,h=t[0],d=t[1],f=t[2],p=t[3],m=s*h+a*d+o*f+l*p;if(m<0&&(m=-m,h=-h,d=-d,f=-f,p=-p),1-m>r){const e=Math.acos(m),t=Math.sin(e);u=Math.sin((1-n)*e)/t,c=Math.sin(n*e)/t}else u=1-n,c=n;return i[0]=u*s+c*h,i[1]=u*a+c*d,i[2]=u*o+c*f,i[3]=u*l+c*p,i}function Te(e,t){return(t=t||new xe(4))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}const Se=Te;function Pe(e,t,n){return(n=n||new xe(4))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n}const Me=Pe;function Ee(e,t,n){return(n=n||new xe(4))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n}const Oe=Ee;function Ie(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function Ue(e){const t=e[0],n=e[1],r=e[2],i=e[3];return Math.sqrt(t*t+n*n+r*r+i*i)}const Ce=Ue;function Be(e){const t=e[0],n=e[1],r=e[2],i=e[3];return t*t+n*n+r*r+i*i}const ze=Be;function Re(e,t){t=t||new xe(4);const n=e[0],r=e[1],i=e[2],s=e[3],a=Math.sqrt(n*n+r*r+i*i+s*s);return a>1e-5?(t[0]=n/a,t[1]=r/a,t[2]=i/a,t[3]=s/a):(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}let De,je,Le,Ve,Ne;var Ge=Object.freeze({__proto__:null,create:ye,setDefaultType:function(e){const t=xe;return xe=e,t},fromValues:_e,set:function(e,t,n,r,i){return(i=i||new xe(4))[0]=e,i[1]=t,i[2]=n,i[3]=r,i},fromAxisAngle:be,toAxisAngle:function(e,t){t=t||o(4);const n=2*Math.acos(e[3]),i=Math.sin(.5*n);return i>r?(t[0]=e[0]/i,t[1]=e[1]/i,t[2]=e[2]/i):(t[0]=1,t[1]=0,t[2]=0),{angle:n,axis:t}},angle:function(e,t){const n=Ie(e,t);return Math.acos(2*n*n-1)},multiply:we,mul:ke,rotateX:function(e,t,n){n=n||new xe(4);const r=.5*t,i=e[0],s=e[1],a=e[2],o=e[3],l=Math.sin(r),u=Math.cos(r);return n[0]=i*u+o*l,n[1]=s*u+a*l,n[2]=a*u-s*l,n[3]=o*u-i*l,n},rotateY:function(e,t,n){n=n||new xe(4);const r=.5*t,i=e[0],s=e[1],a=e[2],o=e[3],l=Math.sin(r),u=Math.cos(r);return n[0]=i*u-a*l,n[1]=s*u+o*l,n[2]=a*u+i*l,n[3]=o*u-s*l,n},rotateZ:function(e,t,n){n=n||new xe(4);const r=.5*t,i=e[0],s=e[1],a=e[2],o=e[3],l=Math.sin(r),u=Math.cos(r);return n[0]=i*u+s*l,n[1]=s*u-i*l,n[2]=a*u+o*l,n[3]=o*u-a*l,n},slerp:Ae,inverse:function(e,t){t=t||new xe(4);const n=e[0],r=e[1],i=e[2],s=e[3],a=n*n+r*r+i*i+s*s,o=a?1/a:0;return t[0]=-n*o,t[1]=-r*o,t[2]=-i*o,t[3]=s*o,t},conjugate:function(e,t){return(t=t||new xe(4))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},fromMat:function(e,t){t=t||new xe(4);const n=e[0]+e[5]+e[10];if(n>0){const r=Math.sqrt(n+1);t[3]=.5*r;const i=.5/r;t[0]=(e[6]-e[9])*i,t[1]=(e[8]-e[2])*i,t[2]=(e[1]-e[4])*i}else{let n=0;e[5]>e[0]&&(n=1),e[10]>e[4*n+n]&&(n=2);const r=(n+1)%3,i=(n+2)%3,s=Math.sqrt(e[4*n+n]-e[4*r+r]-e[4*i+i]+1);t[n]=.5*s;const a=.5/s;t[3]=(e[4*r+i]-e[4*i+r])*a,t[r]=(e[4*r+n]+e[4*n+r])*a,t[i]=(e[4*i+n]+e[4*n+i])*a}return t},fromEuler:function(e,t,n,r,i){i=i||new xe(4);const s=.5*e,a=.5*t,o=.5*n,l=Math.sin(s),u=Math.cos(s),c=Math.sin(a),h=Math.cos(a),d=Math.sin(o),f=Math.cos(o);switch(r){case"xyz":i[0]=l*h*f+u*c*d,i[1]=u*c*f-l*h*d,i[2]=u*h*d+l*c*f,i[3]=u*h*f-l*c*d;break;case"xzy":i[0]=l*h*f-u*c*d,i[1]=u*c*f-l*h*d,i[2]=u*h*d+l*c*f,i[3]=u*h*f+l*c*d;break;case"yxz":i[0]=l*h*f+u*c*d,i[1]=u*c*f-l*h*d,i[2]=u*h*d-l*c*f,i[3]=u*h*f+l*c*d;break;case"yzx":i[0]=l*h*f+u*c*d,i[1]=u*c*f+l*h*d,i[2]=u*h*d-l*c*f,i[3]=u*h*f-l*c*d;break;case"zxy":i[0]=l*h*f-u*c*d,i[1]=u*c*f+l*h*d,i[2]=u*h*d+l*c*f,i[3]=u*h*f-l*c*d;break;case"zyx":i[0]=l*h*f-u*c*d,i[1]=u*c*f+l*h*d,i[2]=u*h*d-l*c*f,i[3]=u*h*f+l*c*d;break;default:throw new Error(`Unknown rotation order: ${r}`)}return i},copy:Te,clone:Se,add:function(e,t,n){return(n=n||new xe(4))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},subtract:Pe,sub:Me,mulScalar:Ee,scale:Oe,divScalar:function(e,t,n){return(n=n||new xe(4))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n[3]=e[3]/t,n},dot:Ie,lerp:function(e,t,n,r){return(r=r||new xe(4))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r[2]=e[2]+n*(t[2]-e[2]),r[3]=e[3]+n*(t[3]-e[3]),r},length:Ue,len:Ce,lengthSq:Be,lenSq:ze,normalize:Re,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<r&&Math.abs(e[1]-t[1])<r&&Math.abs(e[2]-t[2])<r&&Math.abs(e[3]-t[3])<r},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},identity:function(e){return(e=e||new xe(4))[0]=0,e[1]=0,e[2]=0,e[3]=1,e},rotationTo:function(e,t,n){n=n||new xe(4),De=De||o(),je=je||o(1,0,0),Le=Le||o(0,1,0);const r=L(e,t);return r<-.999999?(j(je,e,De),N(De)<1e-6&&j(Le,e,De),X(De,De),be(De,Math.PI,n),n):r>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(j(e,t,De),n[0]=De[0],n[1]=De[1],n[2]=De[2],n[3]=1+r,Re(n,n))},sqlerp:function(e,t,n,r,i,s){return s=s||new xe(4),Ve=Ve||new xe(4),Ne=Ne||new xe(4),Ae(e,r,i,Ve),Ae(t,n,i,Ne),Ae(Ve,Ne,2*i*(1-i),s),s}});Float32Array}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={exports:{}};return i[e](n,n.exports,a),n.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},a.a=(i,s,a)=>{var o;a&&((o=[]).d=-1);var l,u,c,h=new Set,d=i.exports,f=new Promise(((e,t)=>{c=t,u=e}));f[t]=d,f[e]=e=>(o&&e(o),h.forEach(e),f.catch((e=>{}))),i.exports=f,s((i=>{var s;l=(i=>i.map((i=>{if(null!==i&&"object"==typeof i){if(i[e])return i;if(i.then){var s=[];s.d=0,i.then((e=>{a[t]=e,r(s)}),(e=>{a[n]=e,r(s)}));var a={};return a[e]=e=>e(s),a}}var o={};return o[e]=e=>{},o[t]=i,o})))(i);var a=()=>l.map((e=>{if(e[n])throw e[n];return e[t]})),u=new Promise((t=>{(s=()=>t(a)).r=0;var n=e=>e!==o&&!h.has(e)&&(h.add(e),e&&!e.d&&(s.r++,e.push(s)));l.map((t=>t[e](n)))}));return s.r?u:a()}),(e=>(e?c(f[n]=e):u(d),r(o)))),o&&o.d<0&&(o.d=0)},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a(1859)})();