(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{UI:()=>gs,Ji:()=>us,mL:()=>os,Eh:()=>ms,jO:()=>as,Lz:()=>xs,sZ:()=>cs,PM:()=>hs});const t=(e,t)=>{const n=new Uint32Array(t);as.queue.writeBuffer(e,0,n.buffer,0,t.length*Uint32Array.BYTES_PER_ELEMENT)},n=(e,n)=>{const r=new Uint32Array(e),s=as.createBuffer({size:r.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:n});return t(s,e),s},r=(e,t)=>{if(t instanceof Float32Array)as.queue.writeBuffer(e,0,t.buffer,0,t.length*Float32Array.BYTES_PER_ELEMENT);else{const n=new Float32Array(t);as.queue.writeBuffer(e,0,n.buffer,0,t.length*Float32Array.BYTES_PER_ELEMENT)}},s=(e,t,n)=>{const s=new Float32Array(t),i=e.createBuffer({size:s.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:n});return r(i,t),i},i=async()=>{const e={binding:4,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},t={binding:5,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba8unorm",viewDimension:"2d"}},n={binding:7,visibility:GPUShaderStage.COMPUTE,storageTexture:{format:"rgba16float",viewDimension:"2d"}},r=(GPUShaderStage.COMPUTE,{binding:9,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}),s={binding:10,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},i={binding:3,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}},o=as.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"3d"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},i,e,t,n,{binding:8,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},r,s]}),a=as.createComputePipeline({layout:as.createPipelineLayout({bindGroupLayouts:[o]}),compute:{module:as.createShaderModule({code:"\n          struct IndirectArgs {\n            count: atomic<u32>\n          };\n          @group(0) @binding(10) var<storage> bvhNodes: array<BVHNode>;\n          @group(0) @binding(11) var<storage, read_write> groupsToFullyTrace: array<vec2<u32>>;\n          @group(0) @binding(12) var<storage, read_write> indirectArgs: IndirectArgs;\n          fn calculateRayDirection(uv: vec2<f32>, inverseProjection: mat4x4<f32>) -> vec3<f32> {\n  let clipSpace = vec2(1.0 - uv.x, 1.0 - uv.y) * 2.0 - 1.0;\n  let viewRay = vec3<f32>(clipSpace, 1.0);\n  let viewRayView = inverseProjection * vec4(viewRay, 1.0);\n  return normalize(viewRayView.xyz);\n}\n\n          struct BoxIntersectionResult {\n    tNear: f32,\n    tFar: f32,\n    normal: vec3<f32>,\n    isHit: bool,\n}\n\nfn simpleBoxIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n) -> f32 {\n  let m = 1.0/rd; // can precompute if traversing a set of aligned boxes\n  let n = m*ro;   // can precompute if traversing a set of aligned boxes\n  let k = abs(m)*boxSize;\n  let t1 = -n - k;\n  let t2 = -n + k;\n  let tN = max( max( t1.x, t1.y ), t1.z );\n  let tF = min( min( t2.x, t2.y ), t2.z );\n  if( tN>tF || tF<0.0) {\n    return -1.0; // no intersection\n  }\n  return tN;\n}\n\nfn boxIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    result.isHit = false;\n    result.tNear = -1.0;\n    result.tFar = -1.0;\n\n    let offsetRayOrigin = ro - boxSize;\n    let m: vec3<f32> = 1.0 / rd;\n    let n: vec3<f32> = m * offsetRayOrigin;\n    let k: vec3<f32> = abs(m) * boxSize;\n    let t1: vec3<f32> = -n - k;\n    let t2: vec3<f32> = -n + k;\n    let tN: f32 = max(max(t1.x, t1.y), t1.z);\n    let tF: f32 = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) {\n        return result;\n    }\n    // Check if the ray starts inside the volume\n    let insideVolume = tN < 0.0;\n    var normal = select(\n        step(vec3<f32>(tN), t1),\n        step(t2, vec3<f32>(tF)),\n        tN < 0.0,\n    );\n    normal *= -sign(rd);\n    // Check if the intersection is in the correct direction, only if inside the volume\n    if (insideVolume && dot(normal, rd) < 0.0) {\n        return result;\n    }\n    result.tNear = tN;\n    result.tFar = tF;\n    result.normal = normal;\n    result.isHit = true;\n    return result;\n}\n\nfn planeIntersection(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    planeNormal: vec3<f32>,\n    planeDistance: f32,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    let denom = dot(planeNormal, rd);\n    if (abs(denom) > 0.0001) {\n        let t = -(dot(planeNormal, ro) + planeDistance) / denom;\n        if (t > 0.0) {\n            result.isHit = true;\n            result.tNear = t;\n            result.tFar = t;\n            result.normal = planeNormal;\n        }\n    }\n    return result;\n}\n\nfn get3x3From4x4(m: mat4x4<f32>) -> mat3x3<f32> {\n    return mat3x3<f32>(\n        m[0].xyz,\n        m[1].xyz,\n        m[2].xyz,\n    );\n}\n\n\nfn intersectOBB(\n    ro: vec3<f32>,\n    rd: vec3<f32>,\n    boxSize: vec3<f32>,\n    boxOrientation: mat3x3<f32>,\n) -> BoxIntersectionResult {\n    var result = BoxIntersectionResult();\n    result.isHit = false;\n    result.tNear = -1.0;\n    result.tFar = -1.0;\n\n    let offsetRayOrigin = ro - boxSize;\n    let m: vec3<f32> = 1.0 / rd;\n    let n: vec3<f32> = m * offsetRayOrigin;\n    let k: vec3<f32> = abs(m) * boxSize;\n    let t1: vec3<f32> = -n - k;\n    let t2: vec3<f32> = -n + k;\n    let tN: f32 = max(max(t1.x, t1.y), t1.z);\n    let tF: f32 = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) {\n        return result;\n    }\n    // Check if the ray starts inside the volume\n    let insideVolume = tN < 0.0;\n    var normal = select(\n        step(vec3<f32>(tN), t1),\n        step(t2, vec3<f32>(tF)),\n        tN < 0.0,\n    );\n    normal *= -sign(rd);\n    // Check if the intersection is in the correct direction, only if inside the volume\n    if (insideVolume && dot(normal, rd) < 0.0) {\n        return result;\n    }\n    result.tNear = tN;\n    result.tFar = tF;\n    result.normal = normal;\n    result.isHit = true;\n    return result;\n}\n          const EPSILON = 0.0001;\nconst MAX_RAY_STEPS = 256;\nconst FAR_PLANE = 10000.0;\nconst NEAR_PLANE = 0.5;\n\n\n// Function to transform a normal vector from object to world space\nfn transformNormal(inverseTransform: mat4x4<f32>, normal: vec3<f32>) -> vec3<f32> {\n    let worldNormal = normalize((vec4<f32>(normal, 0.0) * inverseTransform).xyz);\n    return worldNormal;\n}\n\n// Function to transform an object space position to world space\nfn transformPosition(transform: mat4x4<f32>, position: vec3<f32>) -> vec3<f32> {\n    let worldPosition = (transform * vec4<f32>(position, 1.0)).xyz;\n    return worldPosition;\n}\n\nfn getMaxMipLevel(size: vec3<f32>) -> u32 {\n  return u32(log2(max(size.x, max(size.y, size.z))));\n}\n\nstruct BVHNode {\n  leftIndex: i32, // this is the index of the voxelObject for leaf nodes\n  rightIndex: i32,\n  objectCount: u32,\n  AABBMin: vec3<f32>,\n  AABBMax: vec3<f32>\n}\n\n\nstruct VoxelObject {\n  transform: mat4x4<f32>,\n  inverseTransform: mat4x4<f32>,\n  previousTransform: mat4x4<f32>,\n  previousInverseTransform: mat4x4<f32>,\n  size : vec3<f32>,\n  atlasLocation : vec3<f32>,\n}\n\nstruct RayMarchResult {\n  colour: vec3<f32>,\n  normal: vec3<f32>,\n  objectPos: vec3<f32>,\n  worldPos: vec3<f32>,\n  hit: bool,\n  modelMatrix: mat4x4<f32>,\n  previousModelMatrix: mat4x4<f32>,\n  inverseModelMatrix: mat4x4<f32>,\n  previousInverseModelMatrix: mat4x4<f32>,\n  stepsTaken: i32,\n  isWater: bool\n}\n\nfn isInBounds(position: vec3<i32>, size: vec3<i32>) -> bool {\n  return all(position >= vec3(0)) && all(position <= size - vec3(1));\n}\n\nfn getMipLevelFromVoxelSize(voxelSize: vec3<f32>) -> u32 {\n  return u32(log2(max(voxelSize.x, max(voxelSize.y, voxelSize.z))));\n}\n\nfn rayMarchAtMip(voxelObject: VoxelObject, objectRayDirection: vec3<f32>, objectRayOrigin: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n  var output = RayMarchResult();\n  let rayDirSign = sign(objectRayDirection);\n  let atlasLocation = vec3<u32>(voxelObject.atlasLocation);\n  var voxelSize = vec3<f32>(1.0);\n  var scaledEpislon = EPSILON * length(voxelObject.size);\n  var shiftedRayOrigin = objectRayOrigin - objectRayDirection * scaledEpislon;\n  var objectPos = shiftedRayOrigin;\n  var currentIndex = vec3<i32>(floor(objectPos));\n  var scaledRayOrigin =  objectRayOrigin/ voxelSize;\n  var scaledObjectPos = floor(objectPos / voxelSize);\n  var scaledOriginDifference = scaledObjectPos - scaledRayOrigin;\n  var tMax = vec3(0.0);\n  let mask = vec3<f32>(tMax.xyz <= min(tMax.yzx, tMax.zxy));\n  var objectNormal = mask * -rayDirSign;\n  var tCurrent = min(tMax.x, min(tMax.y, tMax.z));\n\n  // RAYMARCH\n  for(var i = 0; i < MAX_RAY_STEPS; i++)\n  {\n    output.stepsTaken = i;\n\n    let samplePosition = vec3<u32>(currentIndex) + atlasLocation;\n    let mip0Index = currentIndex;\n    let mip0SamplePosition = vec3<u32>(mip0Index) + atlasLocation;\n    let mipSample0 = textureLoad(voxels, mip0SamplePosition, 0);\n//    output.colour = abs(objectRayDirection);\n//    output.colour = objectPos / vec3<f32>(voxelObject.size);\n//output.colour = vec3(f32(i) / f32(MAX_RAY_STEPS));\n\n    if(mipSample0.a > 0.0 && isInBounds(currentIndex, vec3<i32>(voxelObject.size))){\n//    if(true){\n        output.objectPos = objectPos;\n        output.worldPos = (voxelObject.transform *  vec4(output.objectPos, 1.0)).xyz;\n        output.normal = transformNormal(voxelObject.inverseTransform,vec3<f32>(objectNormal));\n        output.colour = mipSample0.rgb;\n        output.hit = true;\n        output.modelMatrix = voxelObject.transform;\n        output.previousModelMatrix = voxelObject.previousTransform;\n        output.inverseModelMatrix = voxelObject.inverseTransform;\n        output.previousInverseModelMatrix = voxelObject.previousInverseTransform;\n        return output;\n    }\n    voxelSize = vec3<f32>(1.0);\n\n    var scaledRayOrigin = shiftedRayOrigin / voxelSize;\n    var scaledObjectPos = floor(objectPos / voxelSize);\n    var scaledOriginDifference = scaledObjectPos - scaledRayOrigin;\n    var tMax = voxelSize * (rayDirSign * scaledOriginDifference + (rayDirSign * 0.5) + 0.5) / abs(objectRayDirection);\n    let mask = vec3<f32>(tMax.xyz <= min(tMax.yzx, tMax.zxy));\n\n    tCurrent = min(tMax.x, min(tMax.y, tMax.z));\n    objectPos = objectRayOrigin + objectRayDirection * tCurrent;\n    currentIndex = vec3<i32>(floor(objectPos / voxelSize) * voxelSize);\n    objectNormal = mask * -rayDirSign;\n\n    if(!isInBounds(currentIndex, vec3<i32>(voxelObject.size))){\n        break;\n    }\n  }\n  return output;\n}\n\nfn rayMarchTransformed(voxelObject: VoxelObject, rayDirection: vec3<f32>, rayOrigin: vec3<f32>, mipLevel: u32) -> RayMarchResult {\n      var objectRayOrigin = (voxelObject.inverseTransform * vec4<f32>(rayOrigin, 1.0)).xyz;\n      let objectRayDirection = (voxelObject.inverseTransform * vec4<f32>(rayDirection, 0.0)).xyz;\n      return  rayMarchAtMip(voxelObject, objectRayDirection, objectRayOrigin, 0);\n}\n\nconst STACK_LEN: u32 = 64u;\nstruct Stack {\n  arr: array<i32, STACK_LEN>,\n\thead: u32,\n}\n\nfn stack_new() -> Stack {\n    var arr: array<i32, STACK_LEN>;\n    return Stack(arr, 0u);\n}\n\nfn stack_push(stack: ptr<function, Stack>, val: i32) {\n    (*stack).arr[(*stack).head] = val;\n    (*stack).head += 1u;\n}\n\nfn stack_pop(stack: ptr<function, Stack>) -> i32 {\n    (*stack).head -= 1u;\n    return (*stack).arr[(*stack).head];\n}\n\nconst colours = array<vec3<f32>, 6>(\n  vec3<f32>(1.0, 0.0, 0.0),\n  vec3<f32>(0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 1.0),\n  vec3<f32>(1.0, 1.0, 0.0),\n  vec3<f32>(1.0, 0.0, 1.0),\n  vec3<f32>(0.0, 1.0, 1.0)\n);\n\nfn debugColourFromIndex(index: i32) -> vec3<f32> {\n  return colours[index % 6];\n}\n\nfn getDistanceToNode(rayOrigin: vec3<f32>, rayDirection: vec3<f32>, node: BVHNode) -> f32 {\n  if(all(rayOrigin >= node.AABBMin) && all(rayOrigin <= node.AABBMax)){\n    return 0.0;\n  }\n  let boxSize = (node.AABBMax - node.AABBMin) / 2;\n  let intersection = boxIntersection(rayOrigin - node.AABBMin, rayDirection, boxSize);\n  if(intersection.isHit){\n    return intersection.tNear - EPSILON;\n  }\n  return -1.0;\n\n}\n\n          const BRICK_SIZE = 8;\n\nfn getBrickMapIndex(objectPos: vec3<f32>) -> i32{\n  return i32(objectPos.x / BRICK_SIZE) + i32(objectPos.y / BRICK_SIZE) * BRICK_SIZE + i32(objectPos.z / BRICK_SIZE) * BRICK_SIZE * BRICK_SIZE;\n}\n\n// Stack-based BVH traversal\nfn rayMarchBVH(rayOrigin: vec3<f32>, rayDirection: vec3<f32>) -> RayMarchResult {\n  var closestIntersection = RayMarchResult();\n  closestIntersection.worldPos = rayOrigin + rayDirection * FAR_PLANE;\n\n  // If the ray doesn't hit the root node, return the default intersection\n//  if(getDistanceToNode(rayOrigin, rayDirection, bvhNodes[0]) <= 1.0){\n//    return closestIntersection;\n//  }\n\n  // Create a stack to store the nodes to visit\n  var stack = stack_new();\n  stack_push(&stack, 0);\n\n  // Track closest raymarch distance will let us skip nodes that are further than the closest raymarched object\n  var closestRaymarchDist = 1e30f;\n  var iterations = 0;\n  var nodeIndex = 0;\n\n  while (stack.head > 0u && iterations < 64) {\n    let node = bvhNodes[nodeIndex];\n    if(node.objectCount == 0){\n      nodeIndex = stack_pop(&stack);\n    }\n    // valid leaf, raymarch it\n    else if(node.objectCount == 1){\n        // Raymarch the voxel object if it's a leaf node\n        let voxelObject = voxelObjects[node.leftIndex]; // left index represents the voxel object index for leaf nodes\n        let AABBDist = getDistanceToNode(rayOrigin, rayDirection, node);\n        if(AABBDist > closestRaymarchDist){\n          nodeIndex = stack_pop(&stack);\n          continue;\n        }\n        let raymarchResult = rayMarchTransformed(voxelObject, rayDirection, rayOrigin + rayDirection * AABBDist, 0);\n        let raymarchDist = distance(raymarchResult.worldPos, rayOrigin);\n//        closestIntersection.colour = vec3(f32(raymarchResult.stepsTaken) * 0.02,0,0);\n        let brickMapIndex = getBrickMapIndex(raymarchResult.objectPos);\n        closestIntersection.colour = getDebugColour(brickMapIndex);\n\n        if(raymarchResult.hit && raymarchDist < closestRaymarchDist - EPSILON){\n//          closestIntersection = raymarchResult;\n          closestRaymarchDist = raymarchDist;\n        }\n        // Pop the stack and continue\n        nodeIndex = stack_pop(&stack);\n    }\n    else{\n      let leftDist = getDistanceToNode(rayOrigin, rayDirection, bvhNodes[node.leftIndex]);\n      let rightDist = getDistanceToNode(rayOrigin, rayDirection, bvhNodes[node.rightIndex]);\n      let hitLeft = leftDist >= 0.0 && leftDist < closestRaymarchDist;\n      let hitRight = rightDist >= 0.0 && rightDist < closestRaymarchDist;\n      if(hitLeft){\n        var nearIndex = node.leftIndex;\n        // We hit both left and right, choose the closest one\n        if(hitRight){\n          if(leftDist < rightDist){\n            // left is closer, push right to stack\n            stack_push(&stack, node.rightIndex);\n          } else {\n            // right is closer, push left to stack\n            stack_push(&stack, node.leftIndex);\n            nearIndex = node.rightIndex;\n          }\n        }\n        nodeIndex = nearIndex;\n      }\n      // We only hit the right Node\n      else if(hitRight){\n        nodeIndex = node.rightIndex;\n      }\n      // We didn't hit any node, pop the stack\n      else{\n        nodeIndex = stack_pop(&stack);\n      }\n    }\n\n    iterations += 1;\n    closestIntersection.colour += vec3<f32>(0.0075);\n  }\n\n  return closestIntersection;\n}\n\nfn rayMarchBVHFirstHit(rayOrigin: vec3<f32>, rayDirection: vec3<f32>, maxDistance: f32) -> bool {\n    // Create a stack to store the nodes to visit\n    var stack = stack_new();\n    stack_push(&stack, 0);\n\n\n    var iterations = 0;\n    var nodeIndex = 0;\n\n    while (stack.head > 0u && iterations < 128) {\n      let node = bvhNodes[nodeIndex];\n      if(node.objectCount == 0){\n        nodeIndex = stack_pop(&stack);\n      }\n      // valid leaf, raymarch it\n      else if(node.objectCount == 1){\n          // Raymarch the voxel object if it's a leaf node\n          let voxelObject = voxelObjects[node.leftIndex]; // left index represents the voxel object index for leaf nodes\n          let AABBDist = getDistanceToNode(rayOrigin, rayDirection, node);\n          if(AABBDist > maxDistance){\n            nodeIndex = stack_pop(&stack);\n            continue;\n          }\n          let raymarchResult = rayMarchTransformed(voxelObject, rayDirection, rayOrigin + rayDirection * AABBDist, 0);\n          if(raymarchResult.hit && distance(raymarchResult.worldPos, rayOrigin) < maxDistance){\n            return true;\n          }\n          // Pop the stack and continue\n          nodeIndex = stack_pop(&stack);\n      }\n      else{\n        let leftDist = getDistanceToNode(rayOrigin, rayDirection, bvhNodes[node.leftIndex]);\n        let rightDist = getDistanceToNode(rayOrigin, rayDirection, bvhNodes[node.rightIndex]);\n        let hitLeft = leftDist >= 0.0 && leftDist < maxDistance;\n        let hitRight = rightDist >= 0.0 && rightDist < maxDistance;\n        if(hitLeft){\n          var nearIndex = node.leftIndex;\n          // We hit both left and right, choose the closest one\n          if(hitRight){\n            if(leftDist < rightDist){\n              // left is closer, push right to stack\n              stack_push(&stack, node.rightIndex);\n            } else {\n              // right is closer, push left to stack\n              stack_push(&stack, node.leftIndex);\n              nearIndex = node.rightIndex;\n            }\n          }\n          nodeIndex = nearIndex;\n        }\n        // We only hit the right Node\n        else if(hitRight){\n          nodeIndex = node.rightIndex;\n        }\n        // We didn't hit any node, pop the stack\n        else{\n          nodeIndex = stack_pop(&stack);\n        }\n      }\n\n      iterations += 1;\n    }\n\n    return false;\n}\n          struct ViewProjectionMatrices {\n  viewProjection : mat4x4<f32>,\n  previousViewProjection : mat4x4<f32>,\n  inverseViewProjection : mat4x4<f32>,\n  previousInverseViewProjection : mat4x4<f32>,\n  projection : mat4x4<f32>,\n  inverseProjection: mat4x4<f32>\n};\n\n@group(0) @binding(0) var voxels : texture_3d<f32>;\n@group(0) @binding(2) var<uniform> cameraPosition : vec3<f32>;\n@group(0) @binding(3) var<storage> voxelObjects : array<VoxelObject>;\n// TODO: maybe make a G-Buffer bind group to resuse across shaders\n@group(0) @binding(4) var normalTex : texture_storage_2d<rgba16float, write>;\n@group(0) @binding(5) var albedoTex : texture_storage_2d<rgba8unorm, write>;\n//@group(0) @binding(6) var depthRead : texture_2d<f32>;\n//@group(0) @binding(6) var depthWrite : texture_storage_2d<rgba32float, write>;\n@group(0) @binding(7) var velocityTex : texture_storage_2d<rgba16float, write>;\n@group(0) @binding(8) var<uniform> viewProjections : ViewProjectionMatrices;\n@group(0) @binding(9) var<uniform> sunDirection : vec3<f32>;\n\n\nfn plainIntersect(ro: vec3<f32>, rd: vec3<f32>, p: vec4<f32>) -> f32 {\n    return -(dot(ro, p.xyz) + p.w) / dot(rd, p.xyz);\n}\n\nfn getVelocity(rayMarchResult: RayMarchResult, viewProjections: ViewProjectionMatrices) -> vec3<f32> {\n  let vp = viewProjections.viewProjection;\n    let previousVp = viewProjections.previousViewProjection;\n    let modelMatrix = rayMarchResult.modelMatrix;\n    let previousModelMatrix = rayMarchResult.previousModelMatrix;\n\n    // Get current object space position of the current pixel\n    let objectPos = rayMarchResult.objectPos.xyz;\n    let objectClipSpace = vp * modelMatrix * vec4(objectPos.xyz, 1.0);\n    let objectNDC = objectClipSpace.xyz / objectClipSpace.w;\n\n    // Get previous position of the current object space position\n    let previousObjectClipSpace = previousVp * previousModelMatrix * vec4(objectPos.xyz, 1.0);\n    let previousObjectNDC = previousObjectClipSpace.xyz / previousObjectClipSpace.w;\n\n    // Get velocity based on the difference between the current and previous positions\n    var velocity = objectNDC - previousObjectNDC;\n    velocity.y = -velocity.y;\n  return velocity;\n}\n\nfn getLeftChildIndex(index: i32) -> i32 {\n  return index * 2 + 1;\n}\n\nfn getRightChildIndex(index: i32) -> i32 {\n  return index * 2 + 2;\n}\n\nfn getParentIndex(index: i32) -> i32 {\n  return (index - 1) / 2;\n}\n\n\nfn dirIsNegative(dir: vec3<f32>, axis: i32) -> bool {\n  return dir[axis] < 0.0;\n}\n\nfn getDebugColour(index: i32) -> vec3<f32> {\n  let colours = array<vec3<f32>, 6>(\n    vec3<f32>(1.0, 0.0, 0.0),\n    vec3<f32>(0.0, 1.0, 0.0),\n    vec3<f32>(0.0, 0.0, 1.0),\n    vec3<f32>(1.0, 1.0, 0.0),\n    vec3<f32>(1.0, 0.0, 1.0),\n    vec3<f32>(0.0, 1.0, 1.0)\n  );\n  return colours[index % 6];\n}\n\n\nfn customNormalize(value: f32, min: f32, max: f32) -> f32 {\n    return (value - min) / (max - min);\n}\n\nfn catmullRomSpline(t: f32, p0: f32, p1: f32, p2: f32, p3: f32) -> f32 {\n  let t2 = t * t;\n  let t3 = t2 * t;\n  return 0.5 * (\n    (2.0 * p1) +\n    (-p0 + p2) * t +\n    (2.0 * p0 - 5.0 * p1 + 4.0 * p2 - p3) * t2 +\n    (-p0 + 3.0 * p1 - 3.0 * p2 + p3) * t3\n  );\n}\n\n/*\n\nx o x\no x o\nx o x\n\nx o x o x\no x o x o\nx o x o x\no x o x o\nx o x o x\n\nIncremental sampling pattern\n1 o o o 2 o o o 1\no o o o o o o o o\no o 2 o o o 2 o o\no o o o o o o o o\n2 o o o 1 o o o 2\no o o o o o o o o\no o 2 o o o 2 o o\no o o o o o o o o\n1 o o o 2 o o o 1\n\n*/\n\nconst SPATIAL_KERNEL_SIZE = 9;\nconst SPATIAL_SAMPLE_COUNT = 5;\n\nconst KERNEL_CORNER_OFFSETS = array<vec2<u32>, SPATIAL_SAMPLE_COUNT>(\n  // First set\n  vec2(0,0),\n  vec2(8,0),\n  vec2(0,8),\n  vec2(8,8),\n  vec2(4,4)\n);\n\n// TODO: incrementally sample more points if variance is high\n@compute @workgroup_size(8, 8, 1)\nfn adaptive(\n  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n) {\n  let resolution = textureDimensions(albedoTex);\n  let originPixel = GlobalInvocationID.xy * (SPATIAL_KERNEL_SIZE);\n  var albedos = array<vec3<f32>, SPATIAL_SAMPLE_COUNT>();\n  var normals = array<vec3<f32>, SPATIAL_SAMPLE_COUNT>();\n  var depths = array<f32, SPATIAL_SAMPLE_COUNT>();\n  var worldPositions = array<vec3<f32>, SPATIAL_SAMPLE_COUNT>();\n  var velocities = array<vec3<f32>, SPATIAL_SAMPLE_COUNT>();\n\n  // first kernel\n  for(var i = 0u; i < SPATIAL_SAMPLE_COUNT; i++){\n    let pixelOffset = KERNEL_CORNER_OFFSETS[i];\n//    let pixelOffset = getSpatialPosition(i, 3) * 4;\n    let pixel = originPixel + pixelOffset;\n\n    textureStore(albedoTex, pixel, vec4(1.0,0.0,0.0,1.0));\n    textureStore(normalTex, pixel, vec4(0.0,0.0,0.0,1.0));\n//    textureStore(depthWrite, pixel, vec4(0.0,0.0,0.0,FAR_PLANE));\n    textureStore(velocityTex, pixel, vec4(0,0,0,0));\n\n    var uv = vec2<f32>(pixel) / vec2<f32>(resolution);\n    let rayDirection = calculateRayDirection(uv,viewProjections.inverseViewProjection);\n    var rayOrigin = cameraPosition;\n    var closestIntersection = RayMarchResult();\n    closestIntersection.worldPos = rayOrigin + rayDirection * FAR_PLANE;\n\n    // Floor plane for debugging\n    let planeY = 0.0;\n    let planeIntersect = planeIntersection(rayOrigin, rayDirection, vec3(0,1,0), planeY);\n    if(planeIntersect.isHit){\n      closestIntersection.worldPos = rayOrigin + rayDirection * planeIntersect.tNear;\n      closestIntersection.worldPos.y = planeY;\n      closestIntersection.hit = planeIntersect.isHit;\n      closestIntersection.normal = planeIntersect.normal;\n      closestIntersection.colour = vec3(0.15,0.3,0.1);\n      // TODO: hit water here\n    }\n\n    let maxMipLevel = u32(0);\n    let minMipLevel = u32(0);\n    var mipLevel = maxMipLevel;\n\n    let bvhResult = rayMarchBVH(rayOrigin, rayDirection);\n//    if(bvhResult.hit){\n      closestIntersection = bvhResult;\n//    }\n\n    let normal = closestIntersection.normal;\n    let depth = distance(cameraPosition, closestIntersection.worldPos);\n    let albedo = closestIntersection.colour;\n    let velocity = getVelocity(closestIntersection, viewProjections);\n\n    normals[i] = normal;\n    albedos[i] = albedo;\n    depths[i] = depth;\n    worldPositions[i] = closestIntersection.worldPos;\n    velocities[i] = velocity;\n  }\n\n  // Get averages\n  var normal = vec3<f32>(0.0,0.0,0.0);\n  var albedo = vec3<f32>(0.0,0.0,0.0);\n  var worldPos = vec3<f32>(0.0,0.0,0.0);\n  for(var i = 0; i < SPATIAL_SAMPLE_COUNT; i++){\n    normal += normals[i];\n    albedo += albedos[i];\n    worldPos += worldPositions[i];\n  }\n  normal /= f32(SPATIAL_SAMPLE_COUNT);\n  albedo /= f32(SPATIAL_SAMPLE_COUNT);\n  worldPos /= f32(SPATIAL_SAMPLE_COUNT);\n\n  var normalDiff = vec3<f32>(0.0,0.0,0.0);\n  var albedoDiff = vec3<f32>(0.0,0.0,0.0);\n  var worldPosDiff = vec3<f32>(0.0,0.0,0.0);\n  for (var i = 0; i < SPATIAL_SAMPLE_COUNT; i++){\n    normalDiff += abs(normals[i] - normal);\n    albedoDiff += abs(albedos[i] - albedo);\n    worldPosDiff += abs(worldPositions[i] - worldPos);\n  }\n\n  let depthWeight = 0.001;\n  let normalWeight = 1.0;\n  let albedoWeight = 1.0;\n\n\n  var totalDiff = length(normalDiff) + length(albedoDiff) + length(worldPosDiff) * depthWeight;\n  if(totalDiff > 0.05){\n//if(true){\n    // Difference is too high, sample more points\n    let bufferIndex = atomicAdd(&indirectArgs.count, 1);\n    groupsToFullyTrace[bufferIndex] = originPixel;\n    return;\n  }\n  // TODO: linear interpolation instead of average colour\n  for(var x = 0u; x < SPATIAL_KERNEL_SIZE; x++){\n    for(var y = 0u; y < SPATIAL_KERNEL_SIZE; y++){\n      var totalWeight = 0.0;\n      var totalNormal = vec3<f32>(0.0,0.0,0.0);\n      var totalAlbedo = vec3<f32>(0.0,0.0,0.0);\n      var totalDepth = 0.0;\n      var totalWorldPos = vec3<f32>(0.0,0.0,0.0);\n      var totalVelocity = vec3<f32>(0.0,0.0,0.0);\n      var weights = array<f32, SPATIAL_SAMPLE_COUNT>();\n      let pixel = originPixel + vec2<u32>(x,y);\n\n      var minWeight = 9999999999.0;\n      var maxWeight = 0.0;\n      for(var i = 0u; i < SPATIAL_SAMPLE_COUNT; i ++){\n        let d = distance(vec2(f32(x),f32(y)), vec2<f32>(KERNEL_CORNER_OFFSETS[i]));\n        let weight = 1.0 - d;\n        minWeight = min(minWeight, weight);\n        maxWeight = max(maxWeight, weight);\n        weights[i] = weight;\n      }\n\n      for(var i = 0u; i < SPATIAL_SAMPLE_COUNT; i ++){\n        let weight = customNormalize(weights[i], minWeight, maxWeight);\n        totalNormal += normals[i] * weight;\n        totalAlbedo += albedos[i] * weight;\n        totalDepth += depths[i] * weight;\n        totalWorldPos += worldPositions[i] * weight;\n        totalVelocity += velocities[i] * weight;\n        totalWeight += weight;\n      }\n\n//      textureStore(albedoTex, pixel, vec4((totalWorldPos / totalWeight) % 1, 1));\n      textureStore(albedoTex, pixel, vec4(totalAlbedo / totalWeight, 1));\n      textureStore(normalTex, pixel, vec4(totalNormal / totalWeight,1));\n//      textureStore(depthWrite, pixel, vec4(totalWorldPos / totalWeight, totalDepth / totalWeight));\n      textureStore(velocityTex, pixel, vec4(totalVelocity / totalWeight,0));\n    }\n  }\n}\n\n\n@compute @workgroup_size(8, 8, 1)\nfn main(\n  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>,\n) {\n  let resolution = textureDimensions(albedoTex);\n  let pixel = GlobalInvocationID.xy;\n  var uv = vec2<f32>(pixel) / vec2<f32>(resolution);\n//  uv.y = 1.0 - uv.y;\n  let rayDirection = calculateRayDirection(uv,viewProjections.inverseViewProjection);\n  var rayOrigin = cameraPosition;\n  var closestIntersection = RayMarchResult();\n  closestIntersection.worldPos = rayOrigin + rayDirection * FAR_PLANE;\n  closestIntersection.colour = rayDirection;\n\n  // Floor plane for debugging\n  let planeY = 0.0;\n  let planeIntersect = planeIntersection(rayOrigin, rayDirection, vec3(0,1,0), planeY);\n  if(planeIntersect.isHit){\n    closestIntersection.worldPos = rayOrigin + rayDirection * planeIntersect.tNear;\n    closestIntersection.worldPos.y = planeY;\n    closestIntersection.hit = planeIntersect.isHit;\n    closestIntersection.normal = planeIntersect.normal;\n    closestIntersection.colour = vec3(0.15,0.3,0.1);\n    // TODO: hit water here\n  }\n\n  let maxMipLevel = u32(0);\n  let minMipLevel = u32(0);\n  var mipLevel = maxMipLevel;\n\n  let bvhResult = rayMarchBVH(rayOrigin, rayDirection);\n//  if(bvhResult.hit){\n    closestIntersection = bvhResult;\n//  }\n\n  let normal = closestIntersection.normal;\n  let depth = distance(cameraPosition, closestIntersection.worldPos);\n  let albedo = closestIntersection.colour;\n  let velocity = getVelocity(closestIntersection, viewProjections);\n  let worldPos = closestIntersection.worldPos;\n\n\n  let objectPos = (voxelObjects[0].inverseTransform * vec4(worldPos, 1.0)).xyz;\n//  textureStore(albedoTex, pixel, vec4(rayDirection, 1));\n  textureStore(albedoTex, pixel, vec4(albedo, 1));\n//  textureStore(albedoTex, pixel, vec4(0,0,1, 1));\n  textureStore(normalTex, pixel, vec4(normal,1));\n//  textureStore(depthWrite, pixel, vec4(worldPos, depth));\n  textureStore(velocityTex, pixel, vec4(velocity ,0));\n}\n\n@compute @workgroup_size(SPATIAL_KERNEL_SIZE, SPATIAL_KERNEL_SIZE, 1)\nfn fullTrace(\n  @builtin(local_invocation_id) LocalInvocationID : vec3<u32>,\n  @builtin(workgroup_id) WorkgroupID : vec3<u32>,\n) {\n   let resolution = textureDimensions(albedoTex);\n  let pixelOffset = LocalInvocationID.xy;\n  let groupOrigin = groupsToFullyTrace[WorkgroupID.x];\n//  let groupOrigin = vec2(500 + (WorkgroupID.x % 50) * SPATIAL_KERNEL_SIZE, 500 + (WorkgroupID.x / 50) * SPATIAL_KERNEL_SIZE);\n  let pixel = groupOrigin + pixelOffset;\n\n  var uv = vec2<f32>(pixel) / vec2<f32>(resolution);\n  let rayDirection = calculateRayDirection(uv,viewProjections.inverseViewProjection);\n  var rayOrigin = cameraPosition;\n  var closestIntersection = RayMarchResult();\n  closestIntersection.worldPos = rayOrigin + rayDirection * FAR_PLANE;\n  closestIntersection.colour = rayDirection;\n\n  // Floor plane for debugging\n  let planeY = 0.0;\n  let planeIntersect = planeIntersection(rayOrigin, rayDirection, vec3(0,1,0), planeY);\n  if(planeIntersect.isHit){\n    closestIntersection.worldPos = rayOrigin + rayDirection * planeIntersect.tNear;\n    closestIntersection.worldPos.y = planeY;\n    closestIntersection.hit = planeIntersect.isHit;\n    closestIntersection.normal = planeIntersect.normal;\n    closestIntersection.colour = vec3(0.15,0.3,0.1);\n    // TODO: hit water here\n  }\n\n  let maxMipLevel = u32(0);\n  let minMipLevel = u32(0);\n  var mipLevel = maxMipLevel;\n\n  let bvhResult = rayMarchBVH(rayOrigin, rayDirection);\n  if(bvhResult.hit){\n    closestIntersection = bvhResult;\n  }\n\n  let normal = closestIntersection.normal;\n  let depth = distance(cameraPosition, closestIntersection.worldPos);\n  let albedo = closestIntersection.colour;\n  let velocity = getVelocity(closestIntersection, viewProjections);\n  let worldPos = closestIntersection.worldPos;\n\n  textureStore(albedoTex, pixel, vec4(albedo, 1));\n//  textureStore(albedoTex, pixel, vec4(0,0,1, 1));\n  textureStore(normalTex, pixel, vec4(normal,1));\n//  textureStore(depthWrite, pixel, depth);\n  textureStore(velocityTex, pixel, vec4(velocity ,0));\n}\n"}),entryPoint:"main"}});return{render:({commandEncoder:e,outputTextures:t,cameraPositionBuffer:n,voxelTextureView:r,transformationMatrixBuffer:s,viewProjectionMatricesBuffer:i,timestampWrites:c,sunDirectionBuffer:u,bvhBuffer:l})=>{let h=e.beginComputePass({timestampWrites:c});const d=as.createBindGroup({layout:o,entries:[{binding:0,resource:r},{binding:2,resource:{buffer:n}},{binding:3,resource:{buffer:s}},{binding:4,resource:t.normalTexture.createView()},{binding:5,resource:t.albedoTexture.createView()},{binding:7,resource:t.velocityTexture.createView()},{binding:8,resource:{buffer:i}},{binding:9,resource:{buffer:u}},{binding:10,resource:{buffer:l}}]}),f=Math.ceil(hs[0]/8),m=Math.ceil(hs[1]/8);return h.setPipeline(a),h.setBindGroup(0,d),h.dispatchWorkgroups(f,m),h.end(),e.copyTextureToTexture({texture:t.albedoTexture},{texture:t.finalTexture},{width:t.finalTexture.width,height:t.finalTexture.height,depthOrArrayLayers:1}),[e.finish()]},label:"g-buffer"}};let o=1e-6,a=Float32Array;function c(e=0,t=0){const n=new a(2);return void 0!==e&&(n[0]=e,void 0!==t&&(n[1]=t)),n}let u=Float32Array;function l(e,t,n){const r=new u(3);return void 0!==e&&(r[0]=e,void 0!==t&&(r[1]=t,void 0!==n&&(r[2]=n))),r}const h=c;function d(e,t,n){return(n=n||new a(2))[0]=e[0]-t[0],n[1]=e[1]-t[1],n}const f=d;function m(e,t,n){return(n=n||new a(2))[0]=e[0]*t,n[1]=e[1]*t,n}const p=m;function _(e,t){return(t=t||new a(2))[0]=1/e[0],t[1]=1/e[1],t}const g=_;function y(e,t){return e[0]*t[0]+e[1]*t[1]}function x(e){const t=e[0],n=e[1];return Math.sqrt(t*t+n*n)}const v=x;function w(e){const t=e[0],n=e[1];return t*t+n*n}const b=w;function k(e,t){const n=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(n*n+r*r)}const T=k;function S(e,t){const n=e[0]-t[0],r=e[1]-t[1];return n*n+r*r}const M=S;function A(e,t){return(t=t||new a(2))[0]=e[0],t[1]=e[1],t}const E=A;function I(e,t,n){return(n=n||new a(2))[0]=e[0]*t[0],n[1]=e[1]*t[1],n}const P=I;function O(e,t,n){return(n=n||new a(2))[0]=e[0]/t[0],n[1]=e[1]/t[1],n}const U=O;var R=Object.freeze({__proto__:null,create:c,setDefaultType:function(e){const t=a;return a=e,t},fromValues:h,set:function(e,t,n){return(n=n||new a(2))[0]=e,n[1]=t,n},ceil:function(e,t){return(t=t||new a(2))[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t},floor:function(e,t){return(t=t||new a(2))[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t},round:function(e,t){return(t=t||new a(2))[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t},clamp:function(e,t=0,n=1,r){return(r=r||new a(2))[0]=Math.min(n,Math.max(t,e[0])),r[1]=Math.min(n,Math.max(t,e[1])),r},add:function(e,t,n){return(n=n||new a(2))[0]=e[0]+t[0],n[1]=e[1]+t[1],n},addScaled:function(e,t,n,r){return(r=r||new a(2))[0]=e[0]+t[0]*n,r[1]=e[1]+t[1]*n,r},angle:function(e,t){const n=e[0],r=e[1],s=e[0],i=e[1],o=Math.sqrt(n*n+r*r)*Math.sqrt(s*s+i*i),a=o&&y(e,t)/o;return Math.acos(a)},subtract:d,sub:f,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<o&&Math.abs(e[1]-t[1])<o},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]},lerp:function(e,t,n,r){return(r=r||new a(2))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r},lerpV:function(e,t,n,r){return(r=r||new a(2))[0]=e[0]+n[0]*(t[0]-e[0]),r[1]=e[1]+n[1]*(t[1]-e[1]),r},max:function(e,t,n){return(n=n||new a(2))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n},min:function(e,t,n){return(n=n||new a(2))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n},mulScalar:m,scale:p,divScalar:function(e,t,n){return(n=n||new a(2))[0]=e[0]/t,n[1]=e[1]/t,n},inverse:_,invert:g,cross:function(e,t,n){n=n||new u(3);const r=e[0]*t[1]-e[1]*t[0];return n[0]=0,n[1]=0,n[2]=r,n},dot:y,length:x,len:v,lengthSq:w,lenSq:b,distance:k,dist:T,distanceSq:S,distSq:M,normalize:function(e,t){t=t||new a(2);const n=e[0],r=e[1],s=Math.sqrt(n*n+r*r);return s>1e-5?(t[0]=n/s,t[1]=r/s):(t[0]=0,t[1]=0),t},negate:function(e,t){return(t=t||new a(2))[0]=-e[0],t[1]=-e[1],t},copy:A,clone:E,multiply:I,mul:P,divide:O,div:U,random:function(e=1,t){t=t||new a(2);const n=2*Math.random()*Math.PI;return t[0]=Math.cos(n)*e,t[1]=Math.sin(n)*e,t},zero:function(e){return(e=e||new a(2))[0]=0,e[1]=0,e},transformMat4:function(e,t,n){n=n||new a(2);const r=e[0],s=e[1];return n[0]=r*t[0]+s*t[4]+t[12],n[1]=r*t[1]+s*t[5]+t[13],n},transformMat3:function(e,t,n){n=n||new a(2);const r=e[0],s=e[1];return n[0]=t[0]*r+t[4]*s+t[8],n[1]=t[1]*r+t[5]*s+t[9],n}});Float32Array;new Map([[Float32Array,()=>new Float32Array(12)],[Float64Array,()=>new Float64Array(12)],[Array,()=>new Array(12).fill(0)]]).get(Float32Array);const B=l;function z(e,t,n){return(n=n||new u(3))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n}const D=z;function N(e,t,n){return(n=n||new u(3))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n}const C=N;function L(e,t){return(t=t||new u(3))[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t}const j=L;function V(e,t,n){n=n||new u(3);const r=e[2]*t[0]-e[0]*t[2],s=e[0]*t[1]-e[1]*t[0];return n[0]=e[1]*t[2]-e[2]*t[1],n[1]=r,n[2]=s,n}function q(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function G(e){const t=e[0],n=e[1],r=e[2];return Math.sqrt(t*t+n*n+r*r)}const F=G;function Y(e){const t=e[0],n=e[1],r=e[2];return t*t+n*n+r*r}const $=Y;function W(e,t){const n=e[0]-t[0],r=e[1]-t[1],s=e[2]-t[2];return Math.sqrt(n*n+r*r+s*s)}const H=W;function Z(e,t){const n=e[0]-t[0],r=e[1]-t[1],s=e[2]-t[2];return n*n+r*r+s*s}const X=Z;function K(e,t){t=t||new u(3);const n=e[0],r=e[1],s=e[2],i=Math.sqrt(n*n+r*r+s*s);return i>1e-5?(t[0]=n/i,t[1]=r/i,t[2]=s/i):(t[0]=0,t[1]=0,t[2]=0),t}function Q(e,t){return(t=t||new u(3))[0]=e[0],t[1]=e[1],t[2]=e[2],t}const J=Q;function ee(e,t,n){return(n=n||new u(3))[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n}const te=ee;function ne(e,t,n){return(n=n||new u(3))[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n}const re=ne;var se=Object.freeze({__proto__:null,create:l,setDefaultType:function(e){const t=u;return u=e,t},fromValues:B,set:function(e,t,n,r){return(r=r||new u(3))[0]=e,r[1]=t,r[2]=n,r},ceil:function(e,t){return(t=t||new u(3))[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t},floor:function(e,t){return(t=t||new u(3))[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t},round:function(e,t){return(t=t||new u(3))[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t},clamp:function(e,t=0,n=1,r){return(r=r||new u(3))[0]=Math.min(n,Math.max(t,e[0])),r[1]=Math.min(n,Math.max(t,e[1])),r[2]=Math.min(n,Math.max(t,e[2])),r},add:function(e,t,n){return(n=n||new u(3))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n},addScaled:function(e,t,n,r){return(r=r||new u(3))[0]=e[0]+t[0]*n,r[1]=e[1]+t[1]*n,r[2]=e[2]+t[2]*n,r},angle:function(e,t){const n=e[0],r=e[1],s=e[2],i=e[0],o=e[1],a=e[2],c=Math.sqrt(n*n+r*r+s*s)*Math.sqrt(i*i+o*o+a*a),u=c&&q(e,t)/c;return Math.acos(u)},subtract:z,sub:D,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<o&&Math.abs(e[1]-t[1])<o&&Math.abs(e[2]-t[2])<o},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},lerp:function(e,t,n,r){return(r=r||new u(3))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r[2]=e[2]+n*(t[2]-e[2]),r},lerpV:function(e,t,n,r){return(r=r||new u(3))[0]=e[0]+n[0]*(t[0]-e[0]),r[1]=e[1]+n[1]*(t[1]-e[1]),r[2]=e[2]+n[2]*(t[2]-e[2]),r},max:function(e,t,n){return(n=n||new u(3))[0]=Math.max(e[0],t[0]),n[1]=Math.max(e[1],t[1]),n[2]=Math.max(e[2],t[2]),n},min:function(e,t,n){return(n=n||new u(3))[0]=Math.min(e[0],t[0]),n[1]=Math.min(e[1],t[1]),n[2]=Math.min(e[2],t[2]),n},mulScalar:N,scale:C,divScalar:function(e,t,n){return(n=n||new u(3))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n},inverse:L,invert:j,cross:V,dot:q,length:G,len:F,lengthSq:Y,lenSq:$,distance:W,dist:H,distanceSq:Z,distSq:X,normalize:K,negate:function(e,t){return(t=t||new u(3))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},copy:Q,clone:J,multiply:ee,mul:te,divide:ne,div:re,random:function(e=1,t){t=t||new u(3);const n=2*Math.random()*Math.PI,r=2*Math.random()-1,s=Math.sqrt(1-r*r)*e;return t[0]=Math.cos(n)*s,t[1]=Math.sin(n)*s,t[2]=r*e,t},zero:function(e){return(e=e||new u(3))[0]=0,e[1]=0,e[2]=0,e},transformMat4:function(e,t,n){n=n||new u(3);const r=e[0],s=e[1],i=e[2],o=t[3]*r+t[7]*s+t[11]*i+t[15]||1;return n[0]=(t[0]*r+t[4]*s+t[8]*i+t[12])/o,n[1]=(t[1]*r+t[5]*s+t[9]*i+t[13])/o,n[2]=(t[2]*r+t[6]*s+t[10]*i+t[14])/o,n},transformMat4Upper3x3:function(e,t,n){n=n||new u(3);const r=e[0],s=e[1],i=e[2];return n[0]=r*t[0]+s*t[4]+i*t[8],n[1]=r*t[1]+s*t[5]+i*t[9],n[2]=r*t[2]+s*t[6]+i*t[10],n},transformMat3:function(e,t,n){n=n||new u(3);const r=e[0],s=e[1],i=e[2];return n[0]=r*t[0]+s*t[4]+i*t[8],n[1]=r*t[1]+s*t[5]+i*t[9],n[2]=r*t[2]+s*t[6]+i*t[10],n},transformQuat:function(e,t,n){n=n||new u(3);const r=t[0],s=t[1],i=t[2],o=2*t[3],a=e[0],c=e[1],l=e[2],h=s*l-i*c,d=i*a-r*l,f=r*c-s*a;return n[0]=a+h*o+2*(s*f-i*d),n[1]=c+d*o+2*(i*h-r*f),n[2]=l+f*o+2*(r*d-s*h),n},getTranslation:function(e,t){return(t=t||new u(3))[0]=e[12],t[1]=e[13],t[2]=e[14],t},getAxis:function(e,t,n){const r=4*t;return(n=n||new u(3))[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},getScaling:function(e,t){t=t||new u(3);const n=e[0],r=e[1],s=e[2],i=e[4],o=e[5],a=e[6],c=e[8],l=e[9],h=e[10];return t[0]=Math.sqrt(n*n+r*r+s*s),t[1]=Math.sqrt(i*i+o*o+a*a),t[2]=Math.sqrt(c*c+l*l+h*h),t}});let ie=Float32Array;function oe(e,t){return(t=t||new ie(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}const ae=oe;function ce(e){return(e=e||new ie(16))[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ue(e,t){t=t||new ie(16);const n=e[0],r=e[1],s=e[2],i=e[3],o=e[4],a=e[5],c=e[6],u=e[7],l=e[8],h=e[9],d=e[10],f=e[11],m=e[12],p=e[13],_=e[14],g=e[15],y=d*g,x=_*f,v=c*g,w=_*u,b=c*f,k=d*u,T=s*g,S=_*i,M=s*f,A=d*i,E=s*u,I=c*i,P=l*p,O=m*h,U=o*p,R=m*a,B=o*h,z=l*a,D=n*p,N=m*r,C=n*h,L=l*r,j=n*a,V=o*r,q=y*a+w*h+b*p-(x*a+v*h+k*p),G=x*r+T*h+A*p-(y*r+S*h+M*p),F=v*r+S*a+E*p-(w*r+T*a+I*p),Y=k*r+M*a+I*h-(b*r+A*a+E*h),$=1/(n*q+o*G+l*F+m*Y);return t[0]=$*q,t[1]=$*G,t[2]=$*F,t[3]=$*Y,t[4]=$*(x*o+v*l+k*m-(y*o+w*l+b*m)),t[5]=$*(y*n+S*l+M*m-(x*n+T*l+A*m)),t[6]=$*(w*n+T*o+I*m-(v*n+S*o+E*m)),t[7]=$*(b*n+A*o+E*l-(k*n+M*o+I*l)),t[8]=$*(P*u+R*f+B*g-(O*u+U*f+z*g)),t[9]=$*(O*i+D*f+L*g-(P*i+N*f+C*g)),t[10]=$*(U*i+N*u+j*g-(R*i+D*u+V*g)),t[11]=$*(z*i+C*u+V*f-(B*i+L*u+j*f)),t[12]=$*(U*d+z*_+O*c-(B*_+P*c+R*d)),t[13]=$*(C*_+P*s+N*d-(D*d+L*_+O*s)),t[14]=$*(D*c+V*_+R*s-(j*_+U*s+N*c)),t[15]=$*(j*d+B*s+L*c-(C*c+V*d+z*s)),t}const le=ue;function he(e,t,n){n=n||new ie(16);const r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],c=e[5],u=e[6],l=e[7],h=e[8],d=e[9],f=e[10],m=e[11],p=e[12],_=e[13],g=e[14],y=e[15],x=t[0],v=t[1],w=t[2],b=t[3],k=t[4],T=t[5],S=t[6],M=t[7],A=t[8],E=t[9],I=t[10],P=t[11],O=t[12],U=t[13],R=t[14],B=t[15];return n[0]=r*x+a*v+h*w+p*b,n[1]=s*x+c*v+d*w+_*b,n[2]=i*x+u*v+f*w+g*b,n[3]=o*x+l*v+m*w+y*b,n[4]=r*k+a*T+h*S+p*M,n[5]=s*k+c*T+d*S+_*M,n[6]=i*k+u*T+f*S+g*M,n[7]=o*k+l*T+m*S+y*M,n[8]=r*A+a*E+h*I+p*P,n[9]=s*A+c*E+d*I+_*P,n[10]=i*A+u*E+f*I+g*P,n[11]=o*A+l*E+m*I+y*P,n[12]=r*O+a*U+h*R+p*B,n[13]=s*O+c*U+d*R+_*B,n[14]=i*O+u*U+f*R+g*B,n[15]=o*O+l*U+m*R+y*B,n}const de=he;let fe,me,pe;function _e(e,t,n){n=n||new ie(16);let r=e[0],s=e[1],i=e[2];const o=Math.sqrt(r*r+s*s+i*i);r/=o,s/=o,i/=o;const a=r*r,c=s*s,u=i*i,l=Math.cos(t),h=Math.sin(t),d=1-l;return n[0]=a+(1-a)*l,n[1]=r*s*d+i*h,n[2]=r*i*d-s*h,n[3]=0,n[4]=r*s*d-i*h,n[5]=c+(1-c)*l,n[6]=s*i*d+r*h,n[7]=0,n[8]=r*i*d+s*h,n[9]=s*i*d-r*h,n[10]=u+(1-u)*l,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}const ge=_e;function ye(e,t,n,r){r=r||new ie(16);let s=t[0],i=t[1],o=t[2];const a=Math.sqrt(s*s+i*i+o*o);s/=a,i/=a,o/=a;const c=s*s,u=i*i,l=o*o,h=Math.cos(n),d=Math.sin(n),f=1-h,m=c+(1-c)*h,p=s*i*f+o*d,_=s*o*f-i*d,g=s*i*f-o*d,y=u+(1-u)*h,x=i*o*f+s*d,v=s*o*f+i*d,w=i*o*f-s*d,b=l+(1-l)*h,k=e[0],T=e[1],S=e[2],M=e[3],A=e[4],E=e[5],I=e[6],P=e[7],O=e[8],U=e[9],R=e[10],B=e[11];return r[0]=m*k+p*A+_*O,r[1]=m*T+p*E+_*U,r[2]=m*S+p*I+_*R,r[3]=m*M+p*P+_*B,r[4]=g*k+y*A+x*O,r[5]=g*T+y*E+x*U,r[6]=g*S+y*I+x*R,r[7]=g*M+y*P+x*B,r[8]=v*k+w*A+b*O,r[9]=v*T+w*E+b*U,r[10]=v*S+w*I+b*R,r[11]=v*M+w*P+b*B,e!==r&&(r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r}const xe=ye;var ve=Object.freeze({__proto__:null,setDefaultType:function(e){const t=ie;return ie=e,t},create:function(e,t,n,r,s,i,o,a,c,u,l,h,d,f,m,p){const _=new ie(16);return void 0!==e&&(_[0]=e,void 0!==t&&(_[1]=t,void 0!==n&&(_[2]=n,void 0!==r&&(_[3]=r,void 0!==s&&(_[4]=s,void 0!==i&&(_[5]=i,void 0!==o&&(_[6]=o,void 0!==a&&(_[7]=a,void 0!==c&&(_[8]=c,void 0!==u&&(_[9]=u,void 0!==l&&(_[10]=l,void 0!==h&&(_[11]=h,void 0!==d&&(_[12]=d,void 0!==f&&(_[13]=f,void 0!==m&&(_[14]=m,void 0!==p&&(_[15]=p)))))))))))))))),_},set:function(e,t,n,r,s,i,o,a,c,u,l,h,d,f,m,p,_){return(_=_||new ie(16))[0]=e,_[1]=t,_[2]=n,_[3]=r,_[4]=s,_[5]=i,_[6]=o,_[7]=a,_[8]=c,_[9]=u,_[10]=l,_[11]=h,_[12]=d,_[13]=f,_[14]=m,_[15]=p,_},fromMat3:function(e,t){return(t=t||new ie(16))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=0,t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=0,t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromQuat:function(e,t){t=t||new ie(16);const n=e[0],r=e[1],s=e[2],i=e[3],o=n+n,a=r+r,c=s+s,u=n*o,l=r*o,h=r*a,d=s*o,f=s*a,m=s*c,p=i*o,_=i*a,g=i*c;return t[0]=1-h-m,t[1]=l+g,t[2]=d-_,t[3]=0,t[4]=l-g,t[5]=1-u-m,t[6]=f+p,t[7]=0,t[8]=d+_,t[9]=f-p,t[10]=1-u-h,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},negate:function(e,t){return(t=t||new ie(16))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},copy:oe,clone:ae,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<o&&Math.abs(e[1]-t[1])<o&&Math.abs(e[2]-t[2])<o&&Math.abs(e[3]-t[3])<o&&Math.abs(e[4]-t[4])<o&&Math.abs(e[5]-t[5])<o&&Math.abs(e[6]-t[6])<o&&Math.abs(e[7]-t[7])<o&&Math.abs(e[8]-t[8])<o&&Math.abs(e[9]-t[9])<o&&Math.abs(e[10]-t[10])<o&&Math.abs(e[11]-t[11])<o&&Math.abs(e[12]-t[12])<o&&Math.abs(e[13]-t[13])<o&&Math.abs(e[14]-t[14])<o&&Math.abs(e[15]-t[15])<o},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},identity:ce,transpose:function(e,t){if((t=t||new ie(16))===e){let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,t}const n=e[0],r=e[1],s=e[2],i=e[3],o=e[4],a=e[5],c=e[6],u=e[7],l=e[8],h=e[9],d=e[10],f=e[11],m=e[12],p=e[13],_=e[14],g=e[15];return t[0]=n,t[1]=o,t[2]=l,t[3]=m,t[4]=r,t[5]=a,t[6]=h,t[7]=p,t[8]=s,t[9]=c,t[10]=d,t[11]=_,t[12]=i,t[13]=u,t[14]=f,t[15]=g,t},inverse:ue,determinant:function(e){const t=e[0],n=e[1],r=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],u=e[8],l=e[9],h=e[10],d=e[11],f=e[12],m=e[13],p=e[14],_=e[15],g=h*_,y=p*d,x=a*_,v=p*c,w=a*d,b=h*c,k=r*_,T=p*s,S=r*d,M=h*s,A=r*c,E=a*s;return t*(g*o+v*l+w*m-(y*o+x*l+b*m))+i*(y*n+k*l+M*m-(g*n+T*l+S*m))+u*(x*n+T*o+A*m-(v*n+k*o+E*m))+f*(b*n+S*o+E*l-(w*n+M*o+A*l))},invert:le,multiply:he,mul:de,setTranslation:function(e,t,n){return e!==(n=n||ce())&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11]),n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n},getTranslation:function(e,t){return(t=t||l())[0]=e[12],t[1]=e[13],t[2]=e[14],t},getAxis:function(e,t,n){const r=4*t;return(n=n||l())[0]=e[r+0],n[1]=e[r+1],n[2]=e[r+2],n},setAxis:function(e,t,n,r){r!==e&&(r=oe(e,r));const s=4*n;return r[s+0]=t[0],r[s+1]=t[1],r[s+2]=t[2],r},getScaling:function(e,t){t=t||l();const n=e[0],r=e[1],s=e[2],i=e[4],o=e[5],a=e[6],c=e[8],u=e[9],h=e[10];return t[0]=Math.sqrt(n*n+r*r+s*s),t[1]=Math.sqrt(i*i+o*o+a*a),t[2]=Math.sqrt(c*c+u*u+h*h),t},perspective:function(e,t,n,r,s){s=s||new ie(16);const i=Math.tan(.5*Math.PI-.5*e);if(s[0]=i/t,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=i,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[11]=-1,s[12]=0,s[13]=0,s[15]=0,r===1/0)s[10]=-1,s[14]=-n;else{const e=1/(n-r);s[10]=r*e,s[14]=r*n*e}return s},ortho:function(e,t,n,r,s,i,o){return(o=o||new ie(16))[0]=2/(t-e),o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=2/(r-n),o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=1/(s-i),o[11]=0,o[12]=(t+e)/(e-t),o[13]=(r+n)/(n-r),o[14]=s/(s-i),o[15]=1,o},frustum:function(e,t,n,r,s,i,o){const a=t-e,c=r-n,u=s-i;return(o=o||new ie(16))[0]=2*s/a,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=2*s/c,o[6]=0,o[7]=0,o[8]=(e+t)/a,o[9]=(r+n)/c,o[10]=i/u,o[11]=-1,o[12]=0,o[13]=0,o[14]=s*i/u,o[15]=0,o},aim:function(e,t,n,r){return r=r||new ie(16),fe=fe||l(),me=me||l(),pe=pe||l(),K(z(t,e,pe),pe),K(V(n,pe,fe),fe),K(V(pe,fe,me),me),r[0]=fe[0],r[1]=fe[1],r[2]=fe[2],r[3]=0,r[4]=me[0],r[5]=me[1],r[6]=me[2],r[7]=0,r[8]=pe[0],r[9]=pe[1],r[10]=pe[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},cameraAim:function(e,t,n,r){return r=r||new ie(16),fe=fe||l(),me=me||l(),pe=pe||l(),K(z(e,t,pe),pe),K(V(n,pe,fe),fe),K(V(pe,fe,me),me),r[0]=fe[0],r[1]=fe[1],r[2]=fe[2],r[3]=0,r[4]=me[0],r[5]=me[1],r[6]=me[2],r[7]=0,r[8]=pe[0],r[9]=pe[1],r[10]=pe[2],r[11]=0,r[12]=e[0],r[13]=e[1],r[14]=e[2],r[15]=1,r},lookAt:function(e,t,n,r){return r=r||new ie(16),fe=fe||l(),me=me||l(),pe=pe||l(),K(z(e,t,pe),pe),K(V(n,pe,fe),fe),K(V(pe,fe,me),me),r[0]=fe[0],r[1]=me[0],r[2]=pe[0],r[3]=0,r[4]=fe[1],r[5]=me[1],r[6]=pe[1],r[7]=0,r[8]=fe[2],r[9]=me[2],r[10]=pe[2],r[11]=0,r[12]=-(fe[0]*e[0]+fe[1]*e[1]+fe[2]*e[2]),r[13]=-(me[0]*e[0]+me[1]*e[1]+me[2]*e[2]),r[14]=-(pe[0]*e[0]+pe[1]*e[1]+pe[2]*e[2]),r[15]=1,r},translation:function(e,t){return(t=t||new ie(16))[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t},translate:function(e,t,n){n=n||new ie(16);const r=t[0],s=t[1],i=t[2],o=e[0],a=e[1],c=e[2],u=e[3],l=e[4],h=e[5],d=e[6],f=e[7],m=e[8],p=e[9],_=e[10],g=e[11],y=e[12],x=e[13],v=e[14],w=e[15];return e!==n&&(n[0]=o,n[1]=a,n[2]=c,n[3]=u,n[4]=l,n[5]=h,n[6]=d,n[7]=f,n[8]=m,n[9]=p,n[10]=_,n[11]=g),n[12]=o*r+l*s+m*i+y,n[13]=a*r+h*s+p*i+x,n[14]=c*r+d*s+_*i+v,n[15]=u*r+f*s+g*i+w,n},rotationX:function(e,t){t=t||new ie(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=r,t[7]=0,t[8]=0,t[9]=-r,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateX:function(e,t,n){n=n||new ie(16);const r=e[4],s=e[5],i=e[6],o=e[7],a=e[8],c=e[9],u=e[10],l=e[11],h=Math.cos(t),d=Math.sin(t);return n[4]=h*r+d*a,n[5]=h*s+d*c,n[6]=h*i+d*u,n[7]=h*o+d*l,n[8]=h*a-d*r,n[9]=h*c-d*s,n[10]=h*u-d*i,n[11]=h*l-d*o,e!==n&&(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationY:function(e,t){t=t||new ie(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=0,t[2]=-r,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=r,t[9]=0,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateY:function(e,t,n){n=n||new ie(16);const r=e[0],s=e[1],i=e[2],o=e[3],a=e[8],c=e[9],u=e[10],l=e[11],h=Math.cos(t),d=Math.sin(t);return n[0]=h*r-d*a,n[1]=h*s-d*c,n[2]=h*i-d*u,n[3]=h*o-d*l,n[8]=h*a+d*r,n[9]=h*c+d*s,n[10]=h*u+d*i,n[11]=h*l+d*o,e!==n&&(n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},rotationZ:function(e,t){t=t||new ie(16);const n=Math.cos(e),r=Math.sin(e);return t[0]=n,t[1]=r,t[2]=0,t[3]=0,t[4]=-r,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},rotateZ:function(e,t,n){n=n||new ie(16);const r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],c=e[5],u=e[6],l=e[7],h=Math.cos(t),d=Math.sin(t);return n[0]=h*r+d*a,n[1]=h*s+d*c,n[2]=h*i+d*u,n[3]=h*o+d*l,n[4]=h*a-d*r,n[5]=h*c-d*s,n[6]=h*u-d*i,n[7]=h*l-d*o,e!==n&&(n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},axisRotation:_e,rotation:ge,axisRotate:ye,rotate:xe,scaling:function(e,t){return(t=t||new ie(16))[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},scale:function(e,t,n){n=n||new ie(16);const r=t[0],s=t[1],i=t[2];return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=r*e[3],n[4]=s*e[4],n[5]=s*e[5],n[6]=s*e[6],n[7]=s*e[7],n[8]=i*e[8],n[9]=i*e[9],n[10]=i*e[10],n[11]=i*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n},uniformScaling:function(e,t){return(t=t||new ie(16))[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},uniformScale:function(e,t,n){return(n=n||new ie(16))[0]=t*e[0],n[1]=t*e[1],n[2]=t*e[2],n[3]=t*e[3],n[4]=t*e[4],n[5]=t*e[5],n[6]=t*e[6],n[7]=t*e[7],n[8]=t*e[8],n[9]=t*e[9],n[10]=t*e[10],n[11]=t*e[11],e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n}});let we=Float32Array;function be(e,t,n,r){const s=new we(4);return void 0!==e&&(s[0]=e,void 0!==t&&(s[1]=t,void 0!==n&&(s[2]=n,void 0!==r&&(s[3]=r)))),s}const ke=be;function Te(e,t,n){n=n||new we(4);const r=.5*t,s=Math.sin(r);return n[0]=s*e[0],n[1]=s*e[1],n[2]=s*e[2],n[3]=Math.cos(r),n}function Se(e,t,n){n=n||new we(4);const r=e[0],s=e[1],i=e[2],o=e[3],a=t[0],c=t[1],u=t[2],l=t[3];return n[0]=r*l+o*a+s*u-i*c,n[1]=s*l+o*c+i*a-r*u,n[2]=i*l+o*u+r*c-s*a,n[3]=o*l-r*a-s*c-i*u,n}const Me=Se;function Ae(e,t,n,r){r=r||new we(4);const s=e[0],i=e[1],a=e[2],c=e[3];let u,l,h=t[0],d=t[1],f=t[2],m=t[3],p=s*h+i*d+a*f+c*m;if(p<0&&(p=-p,h=-h,d=-d,f=-f,m=-m),1-p>o){const e=Math.acos(p),t=Math.sin(e);u=Math.sin((1-n)*e)/t,l=Math.sin(n*e)/t}else u=1-n,l=n;return r[0]=u*s+l*h,r[1]=u*i+l*d,r[2]=u*a+l*f,r[3]=u*c+l*m,r}function Ee(e,t){return(t=t||new we(4))[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}const Ie=Ee;function Pe(e,t,n){return(n=n||new we(4))[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n}const Oe=Pe;function Ue(e,t,n){return(n=n||new we(4))[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n}const Re=Ue;function Be(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function ze(e){const t=e[0],n=e[1],r=e[2],s=e[3];return Math.sqrt(t*t+n*n+r*r+s*s)}const De=ze;function Ne(e){const t=e[0],n=e[1],r=e[2],s=e[3];return t*t+n*n+r*r+s*s}const Ce=Ne;function Le(e,t){t=t||new we(4);const n=e[0],r=e[1],s=e[2],i=e[3],o=Math.sqrt(n*n+r*r+s*s+i*i);return o>1e-5?(t[0]=n/o,t[1]=r/o,t[2]=s/o,t[3]=i/o):(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}let je,Ve,qe,Ge,Fe;var Ye=Object.freeze({__proto__:null,create:be,setDefaultType:function(e){const t=we;return we=e,t},fromValues:ke,set:function(e,t,n,r,s){return(s=s||new we(4))[0]=e,s[1]=t,s[2]=n,s[3]=r,s},fromAxisAngle:Te,toAxisAngle:function(e,t){t=t||l(4);const n=2*Math.acos(e[3]),r=Math.sin(.5*n);return r>o?(t[0]=e[0]/r,t[1]=e[1]/r,t[2]=e[2]/r):(t[0]=1,t[1]=0,t[2]=0),{angle:n,axis:t}},angle:function(e,t){const n=Be(e,t);return Math.acos(2*n*n-1)},multiply:Se,mul:Me,rotateX:function(e,t,n){n=n||new we(4);const r=.5*t,s=e[0],i=e[1],o=e[2],a=e[3],c=Math.sin(r),u=Math.cos(r);return n[0]=s*u+a*c,n[1]=i*u+o*c,n[2]=o*u-i*c,n[3]=a*u-s*c,n},rotateY:function(e,t,n){n=n||new we(4);const r=.5*t,s=e[0],i=e[1],o=e[2],a=e[3],c=Math.sin(r),u=Math.cos(r);return n[0]=s*u-o*c,n[1]=i*u+a*c,n[2]=o*u+s*c,n[3]=a*u-i*c,n},rotateZ:function(e,t,n){n=n||new we(4);const r=.5*t,s=e[0],i=e[1],o=e[2],a=e[3],c=Math.sin(r),u=Math.cos(r);return n[0]=s*u+i*c,n[1]=i*u-s*c,n[2]=o*u+a*c,n[3]=a*u-o*c,n},slerp:Ae,inverse:function(e,t){t=t||new we(4);const n=e[0],r=e[1],s=e[2],i=e[3],o=n*n+r*r+s*s+i*i,a=o?1/o:0;return t[0]=-n*a,t[1]=-r*a,t[2]=-s*a,t[3]=i*a,t},conjugate:function(e,t){return(t=t||new we(4))[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},fromMat:function(e,t){t=t||new we(4);const n=e[0]+e[5]+e[10];if(n>0){const r=Math.sqrt(n+1);t[3]=.5*r;const s=.5/r;t[0]=(e[6]-e[9])*s,t[1]=(e[8]-e[2])*s,t[2]=(e[1]-e[4])*s}else{let n=0;e[5]>e[0]&&(n=1),e[10]>e[4*n+n]&&(n=2);const r=(n+1)%3,s=(n+2)%3,i=Math.sqrt(e[4*n+n]-e[4*r+r]-e[4*s+s]+1);t[n]=.5*i;const o=.5/i;t[3]=(e[4*r+s]-e[4*s+r])*o,t[r]=(e[4*r+n]+e[4*n+r])*o,t[s]=(e[4*s+n]+e[4*n+s])*o}return t},fromEuler:function(e,t,n,r,s){s=s||new we(4);const i=.5*e,o=.5*t,a=.5*n,c=Math.sin(i),u=Math.cos(i),l=Math.sin(o),h=Math.cos(o),d=Math.sin(a),f=Math.cos(a);switch(r){case"xyz":s[0]=c*h*f+u*l*d,s[1]=u*l*f-c*h*d,s[2]=u*h*d+c*l*f,s[3]=u*h*f-c*l*d;break;case"xzy":s[0]=c*h*f-u*l*d,s[1]=u*l*f-c*h*d,s[2]=u*h*d+c*l*f,s[3]=u*h*f+c*l*d;break;case"yxz":s[0]=c*h*f+u*l*d,s[1]=u*l*f-c*h*d,s[2]=u*h*d-c*l*f,s[3]=u*h*f+c*l*d;break;case"yzx":s[0]=c*h*f+u*l*d,s[1]=u*l*f+c*h*d,s[2]=u*h*d-c*l*f,s[3]=u*h*f-c*l*d;break;case"zxy":s[0]=c*h*f-u*l*d,s[1]=u*l*f+c*h*d,s[2]=u*h*d+c*l*f,s[3]=u*h*f-c*l*d;break;case"zyx":s[0]=c*h*f-u*l*d,s[1]=u*l*f+c*h*d,s[2]=u*h*d-c*l*f,s[3]=u*h*f+c*l*d;break;default:throw new Error(`Unknown rotation order: ${r}`)}return s},copy:Ee,clone:Ie,add:function(e,t,n){return(n=n||new we(4))[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},subtract:Pe,sub:Oe,mulScalar:Ue,scale:Re,divScalar:function(e,t,n){return(n=n||new we(4))[0]=e[0]/t,n[1]=e[1]/t,n[2]=e[2]/t,n[3]=e[3]/t,n},dot:Be,lerp:function(e,t,n,r){return(r=r||new we(4))[0]=e[0]+n*(t[0]-e[0]),r[1]=e[1]+n*(t[1]-e[1]),r[2]=e[2]+n*(t[2]-e[2]),r[3]=e[3]+n*(t[3]-e[3]),r},length:ze,len:De,lengthSq:Ne,lenSq:Ce,normalize:Le,equalsApproximately:function(e,t){return Math.abs(e[0]-t[0])<o&&Math.abs(e[1]-t[1])<o&&Math.abs(e[2]-t[2])<o&&Math.abs(e[3]-t[3])<o},equals:function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},identity:function(e){return(e=e||new we(4))[0]=0,e[1]=0,e[2]=0,e[3]=1,e},rotationTo:function(e,t,n){n=n||new we(4),je=je||l(),Ve=Ve||l(1,0,0),qe=qe||l(0,1,0);const r=q(e,t);return r<-.999999?(V(Ve,e,je),F(je)<1e-6&&V(qe,e,je),K(je,je),Te(je,Math.PI,n),n):r>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(V(e,t,je),n[0]=je[0],n[1]=je[1],n[2]=je[2],n[3]=1+r,Le(n,n))},sqlerp:function(e,t,n,r,s,i){return i=i||new we(4),Ge=Ge||new we(4),Fe=Fe||new we(4),Ae(e,r,s,Ge),Ae(t,n,s,Fe),Ae(Ge,Fe,2*s*(1-s),i),i}});Float32Array;const $e={duration:.3,delay:0,endDelay:0,repeat:0,easing:"ease"},We=e=>1e3*e,He=e=>e/1e3,Ze=()=>{},Xe=e=>e;function Ke(e,t=!0){if(e&&"finished"!==e.playState)try{e.stop?e.stop():(t&&e.commitStyles(),e.cancel())}catch(e){}}const Qe=e=>e(),Je=(e,t,n=$e.duration)=>new Proxy({animations:e.map(Qe).filter(Boolean),duration:n,options:t},et),et={get:(e,t)=>{const n=e.animations[0];switch(t){case"duration":return e.duration;case"currentTime":return He((null==n?void 0:n[t])||0);case"playbackRate":case"playState":return null==n?void 0:n[t];case"finished":return e.finished||(e.finished=Promise.all(e.animations.map(tt)).catch(Ze)),e.finished;case"stop":return()=>{e.animations.forEach((e=>Ke(e)))};case"forEachNative":return t=>{e.animations.forEach((n=>t(n,e)))};default:return void 0===(null==n?void 0:n[t])?void 0:()=>e.animations.forEach((e=>e[t]()))}},set:(e,t,n)=>{switch(t){case"currentTime":n=We(n);case"playbackRate":for(let r=0;r<e.animations.length;r++)e.animations[r][t]=n;return!0}return!1}},tt=e=>e.finished,nt=e=>"object"==typeof e&&Boolean(e.createAnimation),rt=e=>"number"==typeof e,st=e=>Array.isArray(e)&&!rt(e[0]),it=(e,t,n)=>-n*e+n*t+e,ot=(e,t,n)=>t-e==0?1:(n-e)/(t-e);function at(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const s=ot(0,t,r);e.push(it(n,1,s))}}const ct=(e,t,n)=>Math.min(Math.max(n,e),t);const ut=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e,lt=1e-7,ht=12;function dt(e,t,n,r){if(e===t&&n===r)return Xe;return s=>0===s||1===s?s:ut(function(e,t,n,r,s){let i,o,a=0;do{o=t+(n-t)/2,i=ut(o,r,s)-e,i>0?n=o:t=o}while(Math.abs(i)>lt&&++a<ht);return o}(s,0,1,e,n),t,r)}const ft=e=>"function"==typeof e,mt=e=>Array.isArray(e)&&rt(e[0]),pt={ease:dt(.25,.1,.25,1),"ease-in":dt(.42,0,1,1),"ease-in-out":dt(.42,0,.58,1),"ease-out":dt(0,0,.58,1)},_t=/\((.*?)\)/;function gt(e){if(ft(e))return e;if(mt(e))return dt(...e);if(pt[e])return pt[e];if(e.startsWith("steps")){const t=_t.exec(e);if(t){const e=t[1].split(",");return((e,t="end")=>n=>{const r=(n="end"===t?Math.min(n,.999):Math.max(n,.001))*e,s="end"===t?Math.floor(r):Math.ceil(r);return ct(0,1,s/e)})(parseFloat(e[0]),e[1].trim())}}return Xe}class yt{constructor(e,t=[0,1],{easing:n,duration:r=$e.duration,delay:s=$e.delay,endDelay:i=$e.endDelay,repeat:o=$e.repeat,offset:a,direction:c="normal",autoplay:u=!0}={}){if(this.startTime=null,this.rate=1,this.t=0,this.cancelTimestamp=null,this.easing=Xe,this.duration=0,this.totalDuration=0,this.repeat=0,this.playState="idle",this.finished=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),n=n||$e.easing,nt(n)){const e=n.createAnimation(t);n=e.easing,t=e.keyframes||t,r=e.duration||r}this.repeat=o,this.easing=st(n)?Xe:gt(n),this.updateDuration(r);const l=function(e,t=function(e){const t=[0];return at(t,e-1),t}(e.length),n=Xe){const r=e.length,s=r-t.length;return s>0&&at(t,s),s=>{let i=0;for(;i<r-2&&!(s<t[i+1]);i++);let o=ct(0,1,ot(t[i],t[i+1],s));const a=function(e,t){return st(e)?e[((e,t,n)=>{const r=t-e;return((n-e)%r+r)%r+e})(0,e.length,t)]:e}(n,i);return o=a(o),it(e[i],e[i+1],o)}}(t,a,st(n)?n.map(gt):Xe);this.tick=t=>{var n;let r=0;r=void 0!==this.pauseTime?this.pauseTime:(t-this.startTime)*this.rate,this.t=r,r/=1e3,r=Math.max(r-s,0),"finished"===this.playState&&void 0===this.pauseTime&&(r=this.totalDuration);const o=r/this.duration;let a=Math.floor(o),u=o%1;!u&&o>=1&&(u=1),1===u&&a--;const h=a%2;("reverse"===c||"alternate"===c&&h||"alternate-reverse"===c&&!h)&&(u=1-u);const d=r>=this.totalDuration?1:Math.min(u,1),f=l(this.easing(d));e(f),void 0===this.pauseTime&&("finished"===this.playState||r>=this.totalDuration+i)?(this.playState="finished",null===(n=this.resolve)||void 0===n||n.call(this,f)):"idle"!==this.playState&&(this.frameRequestId=requestAnimationFrame(this.tick))},u&&this.play()}play(){const e=performance.now();this.playState="running",void 0!==this.pauseTime?this.startTime=e-this.pauseTime:this.startTime||(this.startTime=e),this.cancelTimestamp=this.startTime,this.pauseTime=void 0,this.frameRequestId=requestAnimationFrame(this.tick)}pause(){this.playState="paused",this.pauseTime=this.t}finish(){this.playState="finished",this.tick(0)}stop(){var e;this.playState="idle",void 0!==this.frameRequestId&&cancelAnimationFrame(this.frameRequestId),null===(e=this.reject)||void 0===e||e.call(this,!1)}cancel(){this.stop(),this.tick(this.cancelTimestamp)}reverse(){this.rate*=-1}commitStyles(){}updateDuration(e){this.duration=e,this.totalDuration=e*(this.repeat+1)}get currentTime(){return this.t}set currentTime(e){void 0!==this.pauseTime||0===this.rate?this.pauseTime=e:this.startTime=performance.now()-e/this.rate}get playbackRate(){return this.rate}set playbackRate(e){this.rate=e}}class xt{setAnimation(e){this.animation=e,null==e||e.finished.then((()=>this.clearAnimation())).catch((()=>{}))}clearAnimation(){this.animation=this.generator=void 0}}const vt=new WeakMap;function wt(e){return vt.has(e)||vt.set(e,{transforms:[],values:new Map}),vt.get(e)}const bt=["","X","Y","Z"],kt={x:"translateX",y:"translateY",z:"translateZ"},Tt={syntax:"<angle>",initialValue:"0deg",toDefaultUnit:e=>e+"deg"},St={translate:{syntax:"<length-percentage>",initialValue:"0px",toDefaultUnit:e=>e+"px"},rotate:Tt,scale:{syntax:"<number>",initialValue:1,toDefaultUnit:Xe},skew:Tt},Mt=new Map,At=e=>`--motion-${e}`,Et=["x","y","z"];["translate","scale","rotate","skew"].forEach((e=>{bt.forEach((t=>{Et.push(e+t),Mt.set(At(e+t),St[e])}))}));const It=(e,t)=>Et.indexOf(e)-Et.indexOf(t),Pt=new Set(Et),Ot=e=>Pt.has(e),Ut=e=>e.sort(It).reduce(Rt,"").trim(),Rt=(e,t)=>`${e} ${t}(var(${At(t)}))`,Bt=e=>e.startsWith("--"),zt=new Set,Dt=(e,t)=>document.createElement("div").animate(e,t),Nt={cssRegisterProperty:()=>"undefined"!=typeof CSS&&Object.hasOwnProperty.call(CSS,"registerProperty"),waapi:()=>Object.hasOwnProperty.call(Element.prototype,"animate"),partialKeyframes:()=>{try{Dt({opacity:[1]})}catch(e){return!1}return!0},finished:()=>Boolean(Dt({opacity:[0,1]},{duration:.001}).finished),linearEasing:()=>{try{Dt({opacity:0},{easing:"linear(0, 1)"})}catch(e){return!1}return!0}},Ct={},Lt={};for(const e in Nt)Lt[e]=()=>(void 0===Ct[e]&&(Ct[e]=Nt[e]()),Ct[e]);const jt=(e,t)=>ft(e)?Lt.linearEasing()?`linear(${((e,t)=>{let n="";const r=Math.round(t/.015);for(let t=0;t<r;t++)n+=e(ot(0,r-1,t))+", ";return n.substring(0,n.length-2)})(e,t)})`:$e.easing:mt(e)?Vt(e):e,Vt=([e,t,n,r])=>`cubic-bezier(${e}, ${t}, ${n}, ${r})`;function qt(e){return kt[e]&&(e=kt[e]),Ot(e)?At(e):e}const Gt=(e,t)=>{t=qt(t);let n=Bt(t)?e.style.getPropertyValue(t):getComputedStyle(e)[t];if(!n&&0!==n){const e=Mt.get(t);e&&(n=e.initialValue)}return n},Ft=(e,t,n)=>{t=qt(t),Bt(t)?e.style.setProperty(t,n):e.style[t]=n},Yt=e=>"string"==typeof e;function $t(e,t){var n;let r=(null==t?void 0:t.toDefaultUnit)||Xe;const s=e[e.length-1];if(Yt(s)){const e=(null===(n=s.match(/(-?[\d.]+)([a-z%]*)/))||void 0===n?void 0:n[2])||"";e&&(r=t=>t+e)}return r}function Wt(e,t,n,r={},s){const i=window.__MOTION_DEV_TOOLS_RECORD,o=!1!==r.record&&i;let a,{duration:c=$e.duration,delay:u=$e.delay,endDelay:l=$e.endDelay,repeat:h=$e.repeat,easing:d=$e.easing,persist:f=!1,direction:m,offset:p,allowWebkitAcceleration:_=!1,autoplay:g=!0}=r;const y=wt(e),x=Ot(t);let v=Lt.waapi();x&&((e,t)=>{kt[t]&&(t=kt[t]);const{transforms:n}=wt(e);var r,s;s=t,-1===(r=n).indexOf(s)&&r.push(s),e.style.transform=Ut(n)})(e,t);const w=qt(t),b=function(e,t){return e.has(t)||e.set(t,new xt),e.get(t)}(y.values,w),k=Mt.get(w);return Ke(b.animation,!(nt(d)&&b.generator)&&!1!==r.record),()=>{const y=()=>{var t,n;return null!==(n=null!==(t=Gt(e,w))&&void 0!==t?t:null==k?void 0:k.initialValue)&&void 0!==n?n:0};let T=function(e,t){for(let n=0;n<e.length;n++)null===e[n]&&(e[n]=n?e[n-1]:t());return e}((e=>Array.isArray(e)?e:[e])(n),y);const S=$t(T,k);if(nt(d)){const e=d.createAnimation(T,"opacity"!==t,y,w,b);d=e.easing,T=e.keyframes||T,c=e.duration||c}if(Bt(w)&&(Lt.cssRegisterProperty()?function(e){if(!zt.has(e)){zt.add(e);try{const{syntax:t,initialValue:n}=Mt.has(e)?Mt.get(e):{};CSS.registerProperty({name:e,inherits:!1,syntax:t,initialValue:n})}catch(e){}}}(w):v=!1),x&&!Lt.linearEasing()&&(ft(d)||st(d)&&d.some(ft))&&(v=!1),v){k&&(T=T.map((e=>rt(e)?k.toDefaultUnit(e):e))),1!==T.length||Lt.partialKeyframes()&&!o||T.unshift(y());const t={delay:We(u),duration:We(c),endDelay:We(l),easing:st(d)?void 0:jt(d,c),direction:m,iterations:h+1,fill:"both"};a=e.animate({[w]:T,offset:p,easing:st(d)?d.map((e=>jt(e,c))):void 0},t),a.finished||(a.finished=new Promise(((e,t)=>{a.onfinish=e,a.oncancel=t})));const n=T[T.length-1];a.finished.then((()=>{f||(Ft(e,w,n),a.cancel())})).catch(Ze),_||(a.playbackRate=1.000001)}else if(s&&x)T=T.map((e=>"string"==typeof e?parseFloat(e):e)),1===T.length&&T.unshift(parseFloat(y())),a=new s((t=>{Ft(e,w,S?S(t):t)}),T,Object.assign(Object.assign({},r),{duration:c,easing:d}));else{const t=T[T.length-1];Ft(e,w,k&&rt(t)?k.toDefaultUnit(t):t)}return o&&i(e,t,T,{duration:c,delay:u,easing:d,repeat:h,offset:p},"motion-one"),b.setAnimation(a),a&&!g&&a.pause(),a}}const Ht=(e,t)=>e[t]?Object.assign(Object.assign({},e),e[t]):Object.assign({},e);function Zt(e,t,n){return ft(e)?e(t,n):e}const Xt=(Kt=yt,function(e,t,n={}){const r=(e=function(e,t){return"string"==typeof e?e=document.querySelectorAll(e):e instanceof Element&&(e=[e]),Array.from(e||[])}(e)).length;Boolean(r),Boolean(t);const s=[];for(let i=0;i<r;i++){const o=e[i];for(const e in t){const a=Ht(n,e);a.delay=Zt(a.delay,i,r);const c=Wt(o,e,t[e],a,Kt);s.push(c)}}return Je(s,n,n.duration)});var Kt;function Qt(e,t={}){return Je([()=>{const n=new yt(e,[0,1],t);return n.finished.catch((()=>{})),n}],t,t.duration)}function Jt(e,t,n){return(ft(e)?Qt:Xt)(e,t,n)}function en(e,t,n){const r=Math.max(t-5,0);return s=n-e(r),(i=t-r)?s*(1e3/i):0;var s,i}function tn(e){return rt(e)&&!isNaN(e)}function nn(e){return Yt(e)?parseFloat(e):e}const rn=function(e){const t=new WeakMap;return(e={})=>{const n=new Map,r=(t=0,r=100,s=0,i=!1)=>{const o=`${t}-${r}-${s}-${i}`;return n.has(o)||n.set(o,(({from:e=0,velocity:t=0,power:n=.8,decay:r=.325,bounceDamping:s,bounceStiffness:i,changeTarget:o,min:a,max:c,restDistance:u=.5,restSpeed:l})=>{r=We(r);const h={hasReachedTarget:!1,done:!1,current:e,target:e},d=e=>void 0===a?c:void 0===c||Math.abs(a-e)<Math.abs(c-e)?a:c;let f=n*t;const m=e+f,p=void 0===o?m:o(m);h.target=p,p!==m&&(f=p-e);const _=e=>-f*Math.exp(-e/r),g=e=>p+_(e),y=e=>{const t=_(e),n=g(e);h.done=Math.abs(t)<=u,h.current=h.done?p:n};let x,v;const w=e=>{var t;t=h.current,(void 0!==a&&t<a||void 0!==c&&t>c)&&(x=e,v=(({stiffness:e=100,damping:t=10,mass:n=1,from:r=0,to:s=1,velocity:i=0,restSpeed:o,restDistance:a}={})=>{i=i?He(i):0;const c={done:!1,hasReachedTarget:!1,current:r,target:s},u=s-r,l=Math.sqrt(e/n)/1e3,h=((e=100,t=10,n=1)=>t/(2*Math.sqrt(e*n)))(e,t,n),d=Math.abs(u)<5;let f;if(o||(o=d?.01:2),a||(a=d?.005:.5),h<1){const e=l*Math.sqrt(1-h*h);f=t=>s-Math.exp(-h*l*t)*((h*l*u-i)/e*Math.sin(e*t)+u*Math.cos(e*t))}else f=e=>s-Math.exp(-l*e)*(u+(l*u-i)*e);return e=>{c.current=f(e);const t=0===e?i:en(f,e,c.current),n=Math.abs(t)<=o,u=Math.abs(s-c.current)<=a;var l,h,d;return c.done=n&&u,c.hasReachedTarget=(l=r,h=s,d=c.current,l<h&&d>=h||l>h&&d<=h),c}})({from:h.current,to:d(h.current),velocity:en(g,e,h.current),damping:s,stiffness:i,restDistance:u,restSpeed:l}))};return w(0),e=>{let t=!1;return v||void 0!==x||(t=!0,y(e),w(e)),void 0!==x&&e>x?(h.hasReachedTarget=!0,v(e-x)):(h.hasReachedTarget=!1,!t&&y(e),h)}})(Object.assign({from:t,to:r,velocity:s},e))),n.get(o)},s=(e,n)=>(t.has(e)||t.set(e,function(e,t=Xe){let n,r=10,s=e(0);const i=[t(s.current)];for(;!s.done&&r<1e4;)s=e(r),i.push(t(s.done?s.target:s.current)),void 0===n&&s.hasReachedTarget&&(n=r),r+=10;const o=r-10;return 1===i.length&&i.push(s.current),{keyframes:i,duration:o/1e3,overshootDuration:(null!=n?n:o)/1e3}}(e,n)),t.get(e));return{createAnimation:(e,t=!0,n,i,o)=>{let a,c,u,l=0,h=Xe;const d=e.length;if(t)if(h=$t(e,i?Mt.get(qt(i)):void 0),u=nn(e[d-1]),d>1&&null!==e[0])c=nn(e[0]);else{const e=null==o?void 0:o.generator;if(e){const{animation:t,generatorStartTime:n}=o,r=(null==t?void 0:t.startTime)||n||0,s=(null==t?void 0:t.currentTime)||performance.now()-r,i=e(s).current;c=i,l=en((t=>e(t).current),s,i)}else n&&(c=nn(n()))}if(tn(c)&&tn(u)){const e=r(c,u,l,null==i?void 0:i.includes("scale"));a=Object.assign(Object.assign({},s(e,h)),{easing:"linear"}),o&&(o.generator=e,o.generatorStartTime=performance.now())}return a||(a={easing:"ease",duration:s(r(0,100)).overshootDuration}),a}}}}();class sn{position;targetPosition;rotation;targetRotation;scale;targetScale;constructor(e){this.position=e.position,this.rotation=e.rotation,this.targetPosition=this.position,this.targetRotation=this.rotation,this.scale=se.create(1,1,1),this.targetScale=this.scale}update(){Jt((e=>{this.position=se.lerp(this.position,this.targetPosition,e)}),{easing:rn({velocity:2e-4*ms})}),Jt((e=>{this.rotation=Ye.slerp(this.rotation,this.targetRotation,e)}),{easing:rn({velocity:2e-4*ms})}),Jt((e=>{this.scale=se.lerp(this.scale,this.targetScale,e)}),{easing:rn({velocity:2e-4*ms})})}}const on=new class{pressed={w:!1,a:!1,s:!1,d:!1,q:!1,e:!1," ":!1,shift:!1};constructor(){window.addEventListener("keydown",(e=>{const t=e.key.toLowerCase();this.pressed[t]=!0})),window.addEventListener("keyup",(e=>{const t=e.key.toLowerCase();this.pressed[t]=!1})),window.addEventListener("blur",(()=>{Object.keys(this.pressed).forEach((e=>{this.pressed[e]=!1}))}))}},an=async e=>{const t=e.createShaderModule({code:"@group(0) @binding(0) var mySampler : sampler;\n@group(0) @binding(1) var myTexture : texture_2d<f32>;\n//@group(0) @binding(2) var debugTexture : texture_2d<f32>;\n\nstruct VertexOutput {\n  @builtin(position) Position : vec4<f32>,\n  @location(0) fragUV : vec2<f32>,\n}\n\n@vertex\nfn vertex_main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n  const pos = array(\n    vec2( 1.0,  1.0),\n    vec2( 1.0, -1.0),\n    vec2(-1.0, -1.0),\n    vec2( 1.0,  1.0),\n    vec2(-1.0, -1.0),\n    vec2(-1.0,  1.0),\n  );\n\n  const uv = array(\n    vec2(1.0, 0.0),\n    vec2(1.0, 1.0),\n    vec2(0.0, 1.0),\n    vec2(1.0, 0.0),\n    vec2(0.0, 1.0),\n    vec2(0.0, 0.0),\n  );\n\n  var output : VertexOutput;\n  output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n  output.fragUV = uv[VertexIndex];\n  return output;\n}\n\nfn get_debug_colour(index : i32) -> vec4<f32> {\n  let colours = array(\n    vec4<f32>(1.0, 0.0, 0.0, 1.0),\n    vec4<f32>(0.0, 1.0, 0.0, 1.0),\n    vec4<f32>(0.0, 0.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 0.0, 1.0),\n    vec4<f32>(1.0, 0.0, 1.0, 1.0),\n    vec4<f32>(0.0, 1.0, 1.0, 1.0),\n    vec4<f32>(1.0, 1.0, 1.0, 1.0),\n    vec4<f32>(0.0, 0.0, 0.0, 1.0),\n  );\n  return colours[index % 8];\n}\n\n@fragment\nfn fragment_main(@location(0) fragUV : vec2<f32>) -> @location(0) vec4<f32> {\n    let pixel = fragUV * vec2<f32>(textureDimensions(myTexture));\n    var colour = textureLoad(myTexture, vec2<u32>(pixel),0);\n    return abs(colour);\n}\n"}),n=e.createRenderPipeline({layout:"auto",vertex:{module:t,entryPoint:"vertex_main"},fragment:{module:t,entryPoint:"fragment_main",targets:[{format:navigator.gpu.getPreferredCanvasFormat()}]}});return{render:t=>{const r=t.commandEncoder.beginRenderPass({timestampWrites:t.timestampWrites,colorAttachments:[{view:cs.getCurrentTexture().createView(),loadOp:"clear",clearValue:[.3,.3,.3,1],storeOp:"store"}]}),s=e.createBindGroup({layout:n.getBindGroupLayout(0),entries:[{binding:1,resource:t.outputTextures.finalTexture.createView()}]});return r.setPipeline(n),r.setBindGroup(0,s),r.draw(6),r.end(),[t.commandEncoder.finish()]},label:"fullscreen quad"}},cn=e=>e&&"number"==typeof e.length&&e.buffer instanceof ArrayBuffer&&"number"==typeof e.byteLength,un={i32:{numElements:1,align:4,size:4,type:"i32",View:Int32Array},u32:{numElements:1,align:4,size:4,type:"u32",View:Uint32Array},f32:{numElements:1,align:4,size:4,type:"f32",View:Float32Array},f16:{numElements:1,align:2,size:2,type:"u16",View:Uint16Array},vec2f:{numElements:2,align:8,size:8,type:"f32",View:Float32Array},vec2i:{numElements:2,align:8,size:8,type:"i32",View:Int32Array},vec2u:{numElements:2,align:8,size:8,type:"u32",View:Uint32Array},vec2h:{numElements:2,align:4,size:4,type:"u16",View:Uint16Array},vec3i:{numElements:3,align:16,size:12,type:"i32",View:Int32Array},vec3u:{numElements:3,align:16,size:12,type:"u32",View:Uint32Array},vec3f:{numElements:3,align:16,size:12,type:"f32",View:Float32Array},vec3h:{numElements:3,align:8,size:6,type:"u16",View:Uint16Array},vec4i:{numElements:4,align:16,size:16,type:"i32",View:Int32Array},vec4u:{numElements:4,align:16,size:16,type:"u32",View:Uint32Array},vec4f:{numElements:4,align:16,size:16,type:"f32",View:Float32Array},vec4h:{numElements:4,align:8,size:8,type:"u16",View:Uint16Array},mat2x2f:{numElements:4,align:8,size:16,type:"f32",View:Float32Array},mat2x2h:{numElements:4,align:4,size:8,type:"u16",View:Uint16Array},mat3x2f:{numElements:6,align:8,size:24,type:"f32",View:Float32Array},mat3x2h:{numElements:6,align:4,size:12,type:"u16",View:Uint16Array},mat4x2f:{numElements:8,align:8,size:32,type:"f32",View:Float32Array},mat4x2h:{numElements:8,align:4,size:16,type:"u16",View:Uint16Array},mat2x3f:{numElements:8,align:16,size:32,pad:[3,1],type:"f32",View:Float32Array},mat2x3h:{numElements:8,align:8,size:16,pad:[3,1],type:"u16",View:Uint16Array},mat3x3f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x3h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x3f:{numElements:16,align:16,size:64,pad:[3,1],type:"f32",View:Float32Array},mat4x3h:{numElements:16,align:8,size:32,pad:[3,1],type:"u16",View:Uint16Array},mat2x4f:{numElements:8,align:16,size:32,type:"f32",View:Float32Array},mat2x4h:{numElements:8,align:8,size:16,type:"u16",View:Uint16Array},mat3x4f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x4h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x4f:{numElements:16,align:16,size:64,type:"f32",View:Float32Array},mat4x4h:{numElements:16,align:8,size:32,type:"u16",View:Uint16Array},bool:{numElements:0,align:1,size:0,type:"bool",View:Uint32Array}},ln={...un,"atomic<i32>":un.i32,"atomic<u32>":un.u32,"vec2<i32>":un.vec2i,"vec2<u32>":un.vec2u,"vec2<f32>":un.vec2f,"vec2<f16>":un.vec2h,"vec3<i32>":un.vec3i,"vec3<u32>":un.vec3u,"vec3<f32>":un.vec3f,"vec3<f16>":un.vec3h,"vec4<i32>":un.vec4i,"vec4<u32>":un.vec4u,"vec4<f32>":un.vec4f,"vec4<f16>":un.vec4h,"mat2x2<f32>":un.mat2x2f,"mat2x2<f16>":un.mat2x2h,"mat3x2<f32>":un.mat3x2f,"mat3x2<f16>":un.mat3x2h,"mat4x2<f32>":un.mat4x2f,"mat4x2<f16>":un.mat4x2h,"mat2x3<f32>":un.mat2x3f,"mat2x3<f16>":un.mat2x3h,"mat3x3<f32>":un.mat3x3f,"mat3x3<f16>":un.mat3x3h,"mat4x3<f32>":un.mat4x3f,"mat4x3<f16>":un.mat4x3h,"mat2x4<f32>":un.mat2x4f,"mat2x4<f16>":un.mat2x4h,"mat3x4<f32>":un.mat3x4f,"mat3x4<f16>":un.mat3x4h,"mat4x4<f32>":un.mat4x4f,"mat4x4<f16>":un.mat4x4h},hn=(dn=ln,Object.keys(dn));var dn,fn,mn,pn,_n,gn;!function(e=[],t){const n=new Set;for(const r of hn){const s=ln[r];n.has(s)||(n.add(s),s.flatten=e.includes(r)?t:!t)}}(),new WeakMap;class yn{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class xn{constructor(){}get isAstNode(){return!0}get astNodeType(){return""}evaluate(e){throw new Error("Cannot evaluate node")}evaluateString(e){return this.evaluate(e).toString()}search(e){}searchBlock(e,t){if(e){t(vn.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(wn.instance)}}}class vn extends xn{}vn.instance=new vn;class wn extends xn{}wn.instance=new wn;class bn extends xn{constructor(){super()}}class kn extends bn{constructor(e,t,n,r){super(),this.name=e,this.args=t,this.returnType=n,this.body=r}get astNodeType(){return"function"}search(e){this.searchBlock(this.body,e)}}class Tn extends bn{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}search(e){this.expression.search(e)}}class Sn extends bn{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class Mn extends bn{constructor(e){super(),this.body=e}get astNodeType(){return"continuing"}search(e){this.searchBlock(this.body,e)}}class An extends bn{constructor(e,t,n,r){super(),this.init=e,this.condition=t,this.increment=n,this.body=r}get astNodeType(){return"for"}search(e){var t,n,r;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(r=this.increment)||void 0===r||r.search(e),this.searchBlock(this.body,e)}}class En extends bn{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"var"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class In extends bn{constructor(e,t,n){super(),this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class Pn extends bn{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"let"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class On extends bn{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"const"}evaluate(e){return this.value.evaluate(e)}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}!function(e){e.increment="++",e.decrement="--"}(fn||(fn={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}}(fn||(fn={}));class Un extends bn{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}search(e){this.variable.search(e)}}!function(e){e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="}(mn||(mn={})),function(e){e.parse=function(e){const t=e;if("parse"==t)throw new Error("Invalid value for AssignOperator");return t}}(mn||(mn={}));class Rn extends bn{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}search(e){this.value.search(e)}}class Bn extends bn{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}}class zn extends bn{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class Dn extends bn{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"body"}}class Nn extends bn{constructor(e,t,n,r){super(),this.condition=e,this.body=t,this.elseif=n,this.else=r}get astNodeType(){return"if"}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class Cn extends bn{constructor(e){super(),this.value=e}get astNodeType(){return"return"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class Ln extends bn{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class jn extends bn{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class Vn extends bn{constructor(){super()}get astNodeType(){return"discard"}}class qn extends bn{constructor(){super()}get astNodeType(){return"break"}}class Gn extends bn{constructor(){super()}get astNodeType(){return"continue"}}class Fn extends bn{constructor(e){super(),this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}}class Yn extends Fn{constructor(e,t){super(e),this.members=t}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}}class $n extends Fn{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}}class Wn extends Fn{constructor(e,t,n,r){super(e),this.storage=t,this.type=n,this.access=r}get astNodeType(){return"pointer"}}class Hn extends Fn{constructor(e,t,n,r){super(e),this.attributes=t,this.format=n,this.count=r}get astNodeType(){return"array"}get isArray(){return!0}}class Zn extends Fn{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class Xn extends xn{constructor(){super()}}class Kn extends Xn{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}evaluateString(){return this.value}}class Qn extends Xn{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}}class Jn extends Xn{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"callExpr"}evaluate(e){switch(this.name){case"abs":return Math.abs(this.args[0].evaluate(e));case"acos":return Math.acos(this.args[0].evaluate(e));case"acosh":return Math.acosh(this.args[0].evaluate(e));case"asin":return Math.asin(this.args[0].evaluate(e));case"asinh":return Math.asinh(this.args[0].evaluate(e));case"atan":return Math.atan(this.args[0].evaluate(e));case"atan2":return Math.atan2(this.args[0].evaluate(e),this.args[1].evaluate(e));case"atanh":return Math.atanh(this.args[0].evaluate(e));case"ceil":return Math.ceil(this.args[0].evaluate(e));case"clamp":return Math.min(Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e)),this.args[2].evaluate(e));case"cos":return Math.cos(this.args[0].evaluate(e));case"degrees":return 180*this.args[0].evaluate(e)/Math.PI;case"distance":return Math.sqrt(Math.pow(this.args[0].evaluate(e)-this.args[1].evaluate(e),2));case"dot":case"exp":return Math.exp(this.args[0].evaluate(e));case"exp2":return Math.pow(2,this.args[0].evaluate(e));case"floor":return Math.floor(this.args[0].evaluate(e));case"fma":return this.args[0].evaluate(e)*this.args[1].evaluate(e)+this.args[2].evaluate(e);case"fract":case"modf":return this.args[0].evaluate(e)-Math.floor(this.args[0].evaluate(e));case"inverseSqrt":return 1/Math.sqrt(this.args[0].evaluate(e));case"log":return Math.log(this.args[0].evaluate(e));case"log2":return Math.log2(this.args[0].evaluate(e));case"max":return Math.max(this.args[0].evaluate(e),this.args[1].evaluate(e));case"min":return Math.min(this.args[0].evaluate(e),this.args[1].evaluate(e));case"mix":return this.args[0].evaluate(e)*(1-this.args[2].evaluate(e))+this.args[1].evaluate(e)*this.args[2].evaluate(e);case"pow":return Math.pow(this.args[0].evaluate(e),this.args[1].evaluate(e));case"radians":return this.args[0].evaluate(e)*Math.PI/180;case"round":return Math.round(this.args[0].evaluate(e));case"sign":return Math.sign(this.args[0].evaluate(e));case"sin":return Math.sin(this.args[0].evaluate(e));case"sinh":return Math.sinh(this.args[0].evaluate(e));case"saturate":return Math.min(Math.max(this.args[0].evaluate(e),0),1);case"smoothstep":return this.args[0].evaluate(e)*this.args[0].evaluate(e)*(3-2*this.args[0].evaluate(e));case"sqrt":return Math.sqrt(this.args[0].evaluate(e));case"step":return this.args[0].evaluate(e)<this.args[1].evaluate(e)?0:1;case"tan":return Math.tan(this.args[0].evaluate(e));case"tanh":return Math.tanh(this.args[0].evaluate(e));case"trunc":return Math.trunc(this.args[0].evaluate(e));default:throw new Error("Non const function: "+this.name)}}search(e){for(const t of this.args)t.search(e);e(this)}}class er extends Xn{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}search(e){e(this)}}class tr extends Xn{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}evaluate(e){var t,n;if(this.initializer instanceof Qn){const r=null===(t=this.postfix)||void 0===t?void 0:t.evaluateString(e),s=null===(n=this.initializer.type)||void 0===n?void 0:n.name,i=e.structs.get(s),o=null==i?void 0:i.getMemberIndex(r);if(-1!=o)return this.initializer.args[o].evaluate(e);console.log(o)}return this.initializer.evaluate(e)}search(e){this.initializer.search(e)}}class nr extends Xn{constructor(e){super(),this.value=e}get astNodeType(){return"literalExpr"}evaluate(){return this.value}}class rr extends Xn{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}search(e){this.value.search(e)}}class sr extends Xn{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"typecastExpr"}evaluate(e){return this.args[0].evaluate(e)}search(e){this.searchBlock(this.args,e)}}class ir extends Xn{constructor(e){super(),this.contents=e}get astNodeType(){return"groupExpr"}evaluate(e){return this.contents[0].evaluate(e)}search(e){this.searchBlock(this.contents,e)}}class or extends Xn{constructor(){super()}}class ar extends or{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}evaluate(e){switch(this.operator){case"+":return this.right.evaluate(e);case"-":return-this.right.evaluate(e);case"!":return this.right.evaluate(e)?0:1;case"~":return~this.right.evaluate(e);default:throw new Error("Unknown unary operator: "+this.operator)}}search(e){this.right.search(e)}}class cr extends or{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}evaluate(e){switch(this.operator){case"+":return this.left.evaluate(e)+this.right.evaluate(e);case"-":return this.left.evaluate(e)-this.right.evaluate(e);case"*":return this.left.evaluate(e)*this.right.evaluate(e);case"/":return this.left.evaluate(e)/this.right.evaluate(e);case"%":return this.left.evaluate(e)%this.right.evaluate(e);case"==":return this.left.evaluate(e)==this.right.evaluate(e)?1:0;case"!=":return this.left.evaluate(e)!=this.right.evaluate(e)?1:0;case"<":return this.left.evaluate(e)<this.right.evaluate(e)?1:0;case">":return this.left.evaluate(e)>this.right.evaluate(e)?1:0;case"<=":return this.left.evaluate(e)<=this.right.evaluate(e)?1:0;case">=":return this.left.evaluate(e)>=this.right.evaluate(e)?1:0;case"&&":return this.left.evaluate(e)&&this.right.evaluate(e)?1:0;case"||":return this.left.evaluate(e)||this.right.evaluate(e)?1:0;default:throw new Error(`Unknown operator ${this.operator}`)}}search(e){this.left.search(e),this.right.search(e)}}class ur extends xn{constructor(){super()}}class lr extends ur{constructor(e,t){super(),this.selector=e,this.body=t}get astNodeType(){return"case"}search(e){this.searchBlock(this.body,e)}}class hr extends ur{constructor(e){super(),this.body=e}get astNodeType(){return"default"}search(e){this.searchBlock(this.body,e)}}class dr extends xn{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class fr extends xn{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class mr extends xn{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class pr extends xn{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}!function(e){e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"}(_n||(_n={}));class _r{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class gr{}pn=gr,gr.none=new _r("",_n.reserved,""),gr.eof=new _r("EOF",_n.token,""),gr.reserved={asm:new _r("asm",_n.reserved,"asm"),bf16:new _r("bf16",_n.reserved,"bf16"),do:new _r("do",_n.reserved,"do"),enum:new _r("enum",_n.reserved,"enum"),f16:new _r("f16",_n.reserved,"f16"),f64:new _r("f64",_n.reserved,"f64"),handle:new _r("handle",_n.reserved,"handle"),i8:new _r("i8",_n.reserved,"i8"),i16:new _r("i16",_n.reserved,"i16"),i64:new _r("i64",_n.reserved,"i64"),mat:new _r("mat",_n.reserved,"mat"),premerge:new _r("premerge",_n.reserved,"premerge"),regardless:new _r("regardless",_n.reserved,"regardless"),typedef:new _r("typedef",_n.reserved,"typedef"),u8:new _r("u8",_n.reserved,"u8"),u16:new _r("u16",_n.reserved,"u16"),u64:new _r("u64",_n.reserved,"u64"),unless:new _r("unless",_n.reserved,"unless"),using:new _r("using",_n.reserved,"using"),vec:new _r("vec",_n.reserved,"vec"),void:new _r("void",_n.reserved,"void")},gr.keywords={array:new _r("array",_n.keyword,"array"),atomic:new _r("atomic",_n.keyword,"atomic"),bool:new _r("bool",_n.keyword,"bool"),f32:new _r("f32",_n.keyword,"f32"),i32:new _r("i32",_n.keyword,"i32"),mat2x2:new _r("mat2x2",_n.keyword,"mat2x2"),mat2x3:new _r("mat2x3",_n.keyword,"mat2x3"),mat2x4:new _r("mat2x4",_n.keyword,"mat2x4"),mat3x2:new _r("mat3x2",_n.keyword,"mat3x2"),mat3x3:new _r("mat3x3",_n.keyword,"mat3x3"),mat3x4:new _r("mat3x4",_n.keyword,"mat3x4"),mat4x2:new _r("mat4x2",_n.keyword,"mat4x2"),mat4x3:new _r("mat4x3",_n.keyword,"mat4x3"),mat4x4:new _r("mat4x4",_n.keyword,"mat4x4"),ptr:new _r("ptr",_n.keyword,"ptr"),sampler:new _r("sampler",_n.keyword,"sampler"),sampler_comparison:new _r("sampler_comparison",_n.keyword,"sampler_comparison"),struct:new _r("struct",_n.keyword,"struct"),texture_1d:new _r("texture_1d",_n.keyword,"texture_1d"),texture_2d:new _r("texture_2d",_n.keyword,"texture_2d"),texture_2d_array:new _r("texture_2d_array",_n.keyword,"texture_2d_array"),texture_3d:new _r("texture_3d",_n.keyword,"texture_3d"),texture_cube:new _r("texture_cube",_n.keyword,"texture_cube"),texture_cube_array:new _r("texture_cube_array",_n.keyword,"texture_cube_array"),texture_multisampled_2d:new _r("texture_multisampled_2d",_n.keyword,"texture_multisampled_2d"),texture_storage_1d:new _r("texture_storage_1d",_n.keyword,"texture_storage_1d"),texture_storage_2d:new _r("texture_storage_2d",_n.keyword,"texture_storage_2d"),texture_storage_2d_array:new _r("texture_storage_2d_array",_n.keyword,"texture_storage_2d_array"),texture_storage_3d:new _r("texture_storage_3d",_n.keyword,"texture_storage_3d"),texture_depth_2d:new _r("texture_depth_2d",_n.keyword,"texture_depth_2d"),texture_depth_2d_array:new _r("texture_depth_2d_array",_n.keyword,"texture_depth_2d_array"),texture_depth_cube:new _r("texture_depth_cube",_n.keyword,"texture_depth_cube"),texture_depth_cube_array:new _r("texture_depth_cube_array",_n.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new _r("texture_depth_multisampled_2d",_n.keyword,"texture_depth_multisampled_2d"),texture_external:new _r("texture_external",_n.keyword,"texture_external"),u32:new _r("u32",_n.keyword,"u32"),vec2:new _r("vec2",_n.keyword,"vec2"),vec3:new _r("vec3",_n.keyword,"vec3"),vec4:new _r("vec4",_n.keyword,"vec4"),bitcast:new _r("bitcast",_n.keyword,"bitcast"),block:new _r("block",_n.keyword,"block"),break:new _r("break",_n.keyword,"break"),case:new _r("case",_n.keyword,"case"),continue:new _r("continue",_n.keyword,"continue"),continuing:new _r("continuing",_n.keyword,"continuing"),default:new _r("default",_n.keyword,"default"),discard:new _r("discard",_n.keyword,"discard"),else:new _r("else",_n.keyword,"else"),enable:new _r("enable",_n.keyword,"enable"),fallthrough:new _r("fallthrough",_n.keyword,"fallthrough"),false:new _r("false",_n.keyword,"false"),fn:new _r("fn",_n.keyword,"fn"),for:new _r("for",_n.keyword,"for"),function:new _r("function",_n.keyword,"function"),if:new _r("if",_n.keyword,"if"),let:new _r("let",_n.keyword,"let"),const:new _r("const",_n.keyword,"const"),loop:new _r("loop",_n.keyword,"loop"),while:new _r("while",_n.keyword,"while"),private:new _r("private",_n.keyword,"private"),read:new _r("read",_n.keyword,"read"),read_write:new _r("read_write",_n.keyword,"read_write"),return:new _r("return",_n.keyword,"return"),storage:new _r("storage",_n.keyword,"storage"),switch:new _r("switch",_n.keyword,"switch"),true:new _r("true",_n.keyword,"true"),alias:new _r("alias",_n.keyword,"alias"),type:new _r("type",_n.keyword,"type"),uniform:new _r("uniform",_n.keyword,"uniform"),var:new _r("var",_n.keyword,"var"),override:new _r("override",_n.keyword,"override"),workgroup:new _r("workgroup",_n.keyword,"workgroup"),write:new _r("write",_n.keyword,"write"),r8unorm:new _r("r8unorm",_n.keyword,"r8unorm"),r8snorm:new _r("r8snorm",_n.keyword,"r8snorm"),r8uint:new _r("r8uint",_n.keyword,"r8uint"),r8sint:new _r("r8sint",_n.keyword,"r8sint"),r16uint:new _r("r16uint",_n.keyword,"r16uint"),r16sint:new _r("r16sint",_n.keyword,"r16sint"),r16float:new _r("r16float",_n.keyword,"r16float"),rg8unorm:new _r("rg8unorm",_n.keyword,"rg8unorm"),rg8snorm:new _r("rg8snorm",_n.keyword,"rg8snorm"),rg8uint:new _r("rg8uint",_n.keyword,"rg8uint"),rg8sint:new _r("rg8sint",_n.keyword,"rg8sint"),r32uint:new _r("r32uint",_n.keyword,"r32uint"),r32sint:new _r("r32sint",_n.keyword,"r32sint"),r32float:new _r("r32float",_n.keyword,"r32float"),rg16uint:new _r("rg16uint",_n.keyword,"rg16uint"),rg16sint:new _r("rg16sint",_n.keyword,"rg16sint"),rg16float:new _r("rg16float",_n.keyword,"rg16float"),rgba8unorm:new _r("rgba8unorm",_n.keyword,"rgba8unorm"),rgba8unorm_srgb:new _r("rgba8unorm_srgb",_n.keyword,"rgba8unorm_srgb"),rgba8snorm:new _r("rgba8snorm",_n.keyword,"rgba8snorm"),rgba8uint:new _r("rgba8uint",_n.keyword,"rgba8uint"),rgba8sint:new _r("rgba8sint",_n.keyword,"rgba8sint"),bgra8unorm:new _r("bgra8unorm",_n.keyword,"bgra8unorm"),bgra8unorm_srgb:new _r("bgra8unorm_srgb",_n.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new _r("rgb10a2unorm",_n.keyword,"rgb10a2unorm"),rg11b10float:new _r("rg11b10float",_n.keyword,"rg11b10float"),rg32uint:new _r("rg32uint",_n.keyword,"rg32uint"),rg32sint:new _r("rg32sint",_n.keyword,"rg32sint"),rg32float:new _r("rg32float",_n.keyword,"rg32float"),rgba16uint:new _r("rgba16uint",_n.keyword,"rgba16uint"),rgba16sint:new _r("rgba16sint",_n.keyword,"rgba16sint"),rgba16float:new _r("rgba16float",_n.keyword,"rgba16float"),rgba32uint:new _r("rgba32uint",_n.keyword,"rgba32uint"),rgba32sint:new _r("rgba32sint",_n.keyword,"rgba32sint"),rgba32float:new _r("rgba32float",_n.keyword,"rgba32float"),static_assert:new _r("static_assert",_n.keyword,"static_assert")},gr.tokens={decimal_float_literal:new _r("decimal_float_literal",_n.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)|([0-9]+f)/),hex_float_literal:new _r("hex_float_literal",_n.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/),int_literal:new _r("int_literal",_n.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new _r("uint_literal",_n.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),ident:new _r("ident",_n.token,/[a-zA-Z][0-9a-zA-Z_]*/),and:new _r("and",_n.token,"&"),and_and:new _r("and_and",_n.token,"&&"),arrow:new _r("arrow ",_n.token,"->"),attr:new _r("attr",_n.token,"@"),attr_left:new _r("attr_left",_n.token,"[["),attr_right:new _r("attr_right",_n.token,"]]"),forward_slash:new _r("forward_slash",_n.token,"/"),bang:new _r("bang",_n.token,"!"),bracket_left:new _r("bracket_left",_n.token,"["),bracket_right:new _r("bracket_right",_n.token,"]"),brace_left:new _r("brace_left",_n.token,"{"),brace_right:new _r("brace_right",_n.token,"}"),colon:new _r("colon",_n.token,":"),comma:new _r("comma",_n.token,","),equal:new _r("equal",_n.token,"="),equal_equal:new _r("equal_equal",_n.token,"=="),not_equal:new _r("not_equal",_n.token,"!="),greater_than:new _r("greater_than",_n.token,">"),greater_than_equal:new _r("greater_than_equal",_n.token,">="),shift_right:new _r("shift_right",_n.token,">>"),less_than:new _r("less_than",_n.token,"<"),less_than_equal:new _r("less_than_equal",_n.token,"<="),shift_left:new _r("shift_left",_n.token,"<<"),modulo:new _r("modulo",_n.token,"%"),minus:new _r("minus",_n.token,"-"),minus_minus:new _r("minus_minus",_n.token,"--"),period:new _r("period",_n.token,"."),plus:new _r("plus",_n.token,"+"),plus_plus:new _r("plus_plus",_n.token,"++"),or:new _r("or",_n.token,"|"),or_or:new _r("or_or",_n.token,"||"),paren_left:new _r("paren_left",_n.token,"("),paren_right:new _r("paren_right",_n.token,")"),semicolon:new _r("semicolon",_n.token,";"),star:new _r("star",_n.token,"*"),tilde:new _r("tilde",_n.token,"~"),underscore:new _r("underscore",_n.token,"_"),xor:new _r("xor",_n.token,"^"),plus_equal:new _r("plus_equal",_n.token,"+="),minus_equal:new _r("minus_equal",_n.token,"-="),times_equal:new _r("times_equal",_n.token,"*="),division_equal:new _r("division_equal",_n.token,"/="),modulo_equal:new _r("modulo_equal",_n.token,"%="),and_equal:new _r("and_equal",_n.token,"&="),or_equal:new _r("or_equal",_n.token,"|="),xor_equal:new _r("xor_equal",_n.token,"^="),shift_right_equal:new _r("shift_right_equal",_n.token,">>="),shift_left_equal:new _r("shift_left_equal",_n.token,"<<=")},gr.storage_class=[pn.keywords.function,pn.keywords.private,pn.keywords.workgroup,pn.keywords.uniform,pn.keywords.storage],gr.access_mode=[pn.keywords.read,pn.keywords.write,pn.keywords.read_write],gr.sampler_type=[pn.keywords.sampler,pn.keywords.sampler_comparison],gr.sampled_texture_type=[pn.keywords.texture_1d,pn.keywords.texture_2d,pn.keywords.texture_2d_array,pn.keywords.texture_3d,pn.keywords.texture_cube,pn.keywords.texture_cube_array],gr.multisampled_texture_type=[pn.keywords.texture_multisampled_2d],gr.storage_texture_type=[pn.keywords.texture_storage_1d,pn.keywords.texture_storage_2d,pn.keywords.texture_storage_2d_array,pn.keywords.texture_storage_3d],gr.depth_texture_type=[pn.keywords.texture_depth_2d,pn.keywords.texture_depth_2d_array,pn.keywords.texture_depth_cube,pn.keywords.texture_depth_cube_array,pn.keywords.texture_depth_multisampled_2d],gr.texture_external_type=[pn.keywords.texture_external],gr.any_texture_type=[...pn.sampled_texture_type,...pn.multisampled_texture_type,...pn.storage_texture_type,...pn.depth_texture_type,...pn.texture_external_type],gr.texel_format=[pn.keywords.r8unorm,pn.keywords.r8snorm,pn.keywords.r8uint,pn.keywords.r8sint,pn.keywords.r16uint,pn.keywords.r16sint,pn.keywords.r16float,pn.keywords.rg8unorm,pn.keywords.rg8snorm,pn.keywords.rg8uint,pn.keywords.rg8sint,pn.keywords.r32uint,pn.keywords.r32sint,pn.keywords.r32float,pn.keywords.rg16uint,pn.keywords.rg16sint,pn.keywords.rg16float,pn.keywords.rgba8unorm,pn.keywords.rgba8unorm_srgb,pn.keywords.rgba8snorm,pn.keywords.rgba8uint,pn.keywords.rgba8sint,pn.keywords.bgra8unorm,pn.keywords.bgra8unorm_srgb,pn.keywords.rgb10a2unorm,pn.keywords.rg11b10float,pn.keywords.rg32uint,pn.keywords.rg32sint,pn.keywords.rg32float,pn.keywords.rgba16uint,pn.keywords.rgba16sint,pn.keywords.rgba16float,pn.keywords.rgba32uint,pn.keywords.rgba32sint,pn.keywords.rgba32float],gr.const_literal=[pn.tokens.int_literal,pn.tokens.uint_literal,pn.tokens.decimal_float_literal,pn.tokens.hex_float_literal,pn.keywords.true,pn.keywords.false],gr.literal_or_ident=[pn.tokens.ident,pn.tokens.int_literal,pn.tokens.uint_literal,pn.tokens.decimal_float_literal,pn.tokens.hex_float_literal],gr.element_count_expression=[pn.tokens.int_literal,pn.tokens.uint_literal,pn.tokens.ident],gr.template_types=[pn.keywords.vec2,pn.keywords.vec3,pn.keywords.vec4,pn.keywords.mat2x2,pn.keywords.mat2x3,pn.keywords.mat2x4,pn.keywords.mat3x2,pn.keywords.mat3x3,pn.keywords.mat3x4,pn.keywords.mat4x2,pn.keywords.mat4x3,pn.keywords.mat4x4,pn.keywords.atomic,pn.keywords.bitcast,...pn.any_texture_type],gr.attribute_name=[pn.tokens.ident,pn.keywords.block],gr.assignment_operators=[pn.tokens.equal,pn.tokens.plus_equal,pn.tokens.minus_equal,pn.tokens.times_equal,pn.tokens.division_equal,pn.tokens.modulo_equal,pn.tokens.and_equal,pn.tokens.or_equal,pn.tokens.xor_equal,pn.tokens.shift_right_equal,pn.tokens.shift_left_equal],gr.increment_operators=[pn.tokens.plus_plus,pn.tokens.minus_minus];class yr{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}isTemplateType(){return-1!=gr.template_types.indexOf(this.type)}isArrayType(){return this.type==gr.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class xr{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new yr(gr.eof,"",this._line)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}let t=gr.none;for(;;){let n=this._findType(e);const r=this._peekAhead();if(">"==e&&(">"==r||"="==r)){let e=!1,t=this._tokens.length-1;for(let n=0;n<5&&t>=0;++n,--t)if(this._tokens[t].type===gr.tokens.less_than){t>0&&this._tokens[t-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(n),!0}if(n===gr.none){let r=e,s=0;const i=2;for(let e=0;e<i;++e)if(r+=this._peekAhead(e),n=this._findType(r),n!==gr.none){s=e;break}if(n===gr.none)return t!==gr.none&&(this._current--,this._addToken(t),!0);e=r,this._current+=s+1}if(t=n,this._isAtEnd())break;e+=this._advance()}return t!==gr.none&&(this._addToken(t),!0)}_findType(e){for(const t in gr.keywords){const n=gr.keywords[t];if(this._match(e,n.rule))return n}for(const t in gr.tokens){const n=gr.tokens[t];if(this._match(e,n.rule))return n}return gr.none}_match(e,t){if("string"==typeof t){if(t==e)return!0}else{const n=t.exec(e);if(n&&0==n.index&&n[0]==e)return!0}return!1}_isAtEnd(){return this._current>=this._source.length}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new yr(e,t,this._line))}}class vr{constructor(){this._tokens=[],this._current=0,this._context=new yn}parse(e){this._initialize(e);let t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}return t}_initialize(e){if(e)if("string"==typeof e){const t=new xr(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_error(e,t){return console.error(e,t),{token:e,message:t,toString:function(){return`${t}`}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==gr.eof}_match(e){if(e instanceof _r)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),t)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){let n=t.type;return-1!=e.indexOf(n)}return t.type==e}_advance(){return this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(gr.tokens.semicolon)&&!this._isAtEnd(););if(this._match(gr.keywords.alias)){const e=this._type_alias();return this._consume(gr.tokens.semicolon,"Expected ';'"),e}if(this._match(gr.keywords.enable)){const e=this._enable_directive();return this._consume(gr.tokens.semicolon,"Expected ';'"),e}const e=this._attribute();if(this._check(gr.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(gr.tokens.semicolon,"Expected ';'."),t}if(this._check(gr.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),t}if(this._check(gr.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),t}return null}_function_decl(){if(!this._match(gr.keywords.fn))return null;const e=this._consume(gr.tokens.ident,"Expected function name.").toString();this._consume(gr.tokens.paren_left,"Expected '(' for function arguments.");const t=[];if(!this._check(gr.tokens.paren_right))do{if(this._check(gr.tokens.paren_right))break;const e=this._attribute(),n=this._consume(gr.tokens.ident,"Expected argument name.").toString();this._consume(gr.tokens.colon,"Expected ':' for argument type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r,t.push(new dr(n,s,e)))}while(this._match(gr.tokens.comma));this._consume(gr.tokens.paren_right,"Expected ')' after function arguments.");let n=null;if(this._match(gr.tokens.arrow)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}const r=this._compound_statement();return new kn(e,t,n,r)}_compound_statement(){const e=[];for(this._consume(gr.tokens.brace_left,"Expected '{' for block.");!this._check(gr.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(gr.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(gr.tokens.semicolon)&&!this._isAtEnd(););if(this._check(gr.keywords.if))return this._if_statement();if(this._check(gr.keywords.switch))return this._switch_statement();if(this._check(gr.keywords.loop))return this._loop_statement();if(this._check(gr.keywords.for))return this._for_statement();if(this._check(gr.keywords.while))return this._while_statement();if(this._check(gr.keywords.continuing))return this._continuing_statement();if(this._check(gr.keywords.static_assert))return this._static_assert_statement();if(this._check(gr.tokens.brace_left))return this._compound_statement();let e=null;return e=this._check(gr.keywords.return)?this._return_statement():this._check([gr.keywords.var,gr.keywords.let,gr.keywords.const])?this._variable_statement():this._match(gr.keywords.discard)?new Vn:this._match(gr.keywords.break)?new qn:this._match(gr.keywords.continue)?new Gn:this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=e&&this._consume(gr.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(gr.keywords.static_assert))return null;let e=this._optional_paren_expression();return new Tn(e)}_while_statement(){if(!this._match(gr.keywords.while))return null;let e=this._optional_paren_expression();const t=this._compound_statement();return new Sn(e,t)}_continuing_statement(){if(!this._match(gr.keywords.continuing))return null;const e=this._compound_statement();return new Mn(e)}_for_statement(){if(!this._match(gr.keywords.for))return null;this._consume(gr.tokens.paren_left,"Expected '('.");const e=this._check(gr.tokens.semicolon)?null:this._for_init();this._consume(gr.tokens.semicolon,"Expected ';'.");const t=this._check(gr.tokens.semicolon)?null:this._short_circuit_or_expression();this._consume(gr.tokens.semicolon,"Expected ';'.");const n=this._check(gr.tokens.paren_right)?null:this._for_increment();this._consume(gr.tokens.paren_right,"Expected ')'.");const r=this._compound_statement();return new An(e,t,n,r)}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(gr.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(gr.tokens.equal)&&(t=this._short_circuit_or_expression()),new En(e.name,e.type,e.storage,e.access,t)}if(this._match(gr.keywords.let)){const e=this._consume(gr.tokens.ident,"Expected name for let.").toString();let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(gr.tokens.equal,"Expected '=' for let.");const n=this._short_circuit_or_expression();return new Pn(e,t,null,null,n)}if(this._match(gr.keywords.const)){const e=this._consume(gr.tokens.ident,"Expected name for const.").toString();let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(gr.tokens.equal,"Expected '=' for const.");const n=this._short_circuit_or_expression();return new On(e,t,null,null,n)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(gr.increment_operators))return this._current=e,null;const n=this._consume(gr.increment_operators,"Expected increment operator");return new Un(n.type===gr.tokens.plus_plus?fn.increment:fn.decrement,t)}_assignment_statement(){let e=null;if(this._check(gr.tokens.brace_right))return null;let t=this._match(gr.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(gr.assignment_operators,"Expected assignment operator."),r=this._short_circuit_or_expression();return new Rn(mn.parse(n.lexeme),e,r)}_func_call_statement(){if(!this._check(gr.tokens.ident))return null;const e=this._current,t=this._consume(gr.tokens.ident,"Expected function name."),n=this._argument_expression_list();return null===n?(this._current=e,null):new Bn(t.lexeme,n)}_loop_statement(){if(!this._match(gr.keywords.loop))return null;this._consume(gr.tokens.brace_left,"Expected '{' for loop.");const e=[];let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.push(n);else e.push(t);t=this._statement()}let n=null;return this._match(gr.keywords.continuing)&&(n=this._compound_statement()),this._consume(gr.tokens.brace_right,"Expected '}' for loop."),new zn(e,n)}_switch_statement(){if(!this._match(gr.keywords.switch))return null;const e=this._optional_paren_expression();this._consume(gr.tokens.brace_left,"Expected '{' for switch.");const t=this._switch_body();if(null==t||0==t.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(gr.tokens.brace_right,"Expected '}' for switch."),new Dn(e,t)}_switch_body(){const e=[];if(this._match(gr.keywords.case)){const t=this._case_selectors();this._match(gr.tokens.colon),this._consume(gr.tokens.brace_left,"Exected '{' for switch case.");const n=this._case_body();this._consume(gr.tokens.brace_right,"Exected '}' for switch case."),e.push(new lr(t,n))}if(this._match(gr.keywords.default)){this._match(gr.tokens.colon),this._consume(gr.tokens.brace_left,"Exected '{' for switch default.");const t=this._case_body();this._consume(gr.tokens.brace_right,"Exected '}' for switch default."),e.push(new hr(t))}if(this._check([gr.keywords.default,gr.keywords.case])){const t=this._switch_body();e.push(t[0])}return e}_case_selectors(){var e,t,n,r;const s=[null!==(t=null===(e=this._shift_expression())||void 0===e?void 0:e.evaluate(this._context).toString())&&void 0!==t?t:""];for(;this._match(gr.tokens.comma);)s.push(null!==(r=null===(n=this._shift_expression())||void 0===n?void 0:n.evaluate(this._context).toString())&&void 0!==r?r:"");return s}_case_body(){if(this._match(gr.keywords.fallthrough))return this._consume(gr.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(gr.keywords.if))return null;const e=this._optional_paren_expression(),t=this._compound_statement();let n=[];this._match_elseif()&&(n=this._elseif_statement(n));let r=null;return this._match(gr.keywords.else)&&(r=this._compound_statement()),new Nn(e,t,n,r)}_match_elseif(){return this._tokens[this._current].type===gr.keywords.else&&this._tokens[this._current+1].type===gr.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(new fr(t,n)),this._match_elseif()&&this._elseif_statement(e),e}_return_statement(){if(!this._match(gr.keywords.return))return null;const e=this._short_circuit_or_expression();return new Cn(e)}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(gr.tokens.or_or);)e=new cr(this._previous().toString(),e,this._short_circuit_and_expr());return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(gr.tokens.and_and);)e=new cr(this._previous().toString(),e,this._inclusive_or_expression());return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(gr.tokens.or);)e=new cr(this._previous().toString(),e,this._exclusive_or_expression());return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(gr.tokens.xor);)e=new cr(this._previous().toString(),e,this._and_expression());return e}_and_expression(){let e=this._equality_expression();for(;this._match(gr.tokens.and);)e=new cr(this._previous().toString(),e,this._equality_expression());return e}_equality_expression(){const e=this._relational_expression();return this._match([gr.tokens.equal_equal,gr.tokens.not_equal])?new cr(this._previous().toString(),e,this._relational_expression()):e}_relational_expression(){let e=this._shift_expression();for(;this._match([gr.tokens.less_than,gr.tokens.greater_than,gr.tokens.less_than_equal,gr.tokens.greater_than_equal]);)e=new cr(this._previous().toString(),e,this._shift_expression());return e}_shift_expression(){let e=this._additive_expression();for(;this._match([gr.tokens.shift_left,gr.tokens.shift_right]);)e=new cr(this._previous().toString(),e,this._additive_expression());return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([gr.tokens.plus,gr.tokens.minus]);)e=new cr(this._previous().toString(),e,this._multiplicative_expression());return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([gr.tokens.star,gr.tokens.forward_slash,gr.tokens.modulo]);)e=new cr(this._previous().toString(),e,this._unary_expression());return e}_unary_expression(){return this._match([gr.tokens.minus,gr.tokens.bang,gr.tokens.tilde,gr.tokens.star,gr.tokens.and])?new ar(this._previous().toString(),this._unary_expression()):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(gr.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(gr.tokens.bracket_right,"Expected ']'.");const t=this._postfix_expression();return t&&(e.postfix=t),e}if(this._match(gr.tokens.period)){const e=this._consume(gr.tokens.ident,"Expected member name."),t=this._postfix_expression(),n=new Kn(e.lexeme);return t&&(n.postfix=t),n}return null}_getStruct(e){return this._context.aliases.has(e)?this._context.aliases.get(e).type:this._context.structs.has(e)?this._context.structs.get(e):null}_primary_expression(){if(this._match(gr.tokens.ident)){const e=this._previous().toString();if(this._check(gr.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getStruct(e);return null!=n?new Qn(n,t):new Jn(e,t)}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return new tr(e,t.value)}return new er(e)}if(this._match(gr.const_literal))return new nr(parseFloat(this._previous().toString()));if(this._check(gr.tokens.paren_left))return this._paren_expression();if(this._match(gr.keywords.bitcast)){this._consume(gr.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(gr.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return new rr(e,t)}const e=this._type_decl(),t=this._argument_expression_list();return new sr(e,t)}_argument_expression_list(){if(!this._match(gr.tokens.paren_left))return null;const e=[];do{if(this._check(gr.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(gr.tokens.comma));return this._consume(gr.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(gr.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(gr.tokens.paren_right),new ir([e])}_paren_expression(){this._consume(gr.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(gr.tokens.paren_right,"Expected ')'."),new ir([e])}_struct_decl(){if(!this._match(gr.keywords.struct))return null;const e=this._consume(gr.tokens.ident,"Expected name for struct.").toString();this._consume(gr.tokens.brace_left,"Expected '{' for struct body.");const t=[];for(;!this._check(gr.tokens.brace_right);){const e=this._attribute(),n=this._consume(gr.tokens.ident,"Expected variable name.").toString();this._consume(gr.tokens.colon,"Expected ':' for struct member type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r),this._check(gr.tokens.brace_right)?this._match(gr.tokens.comma):this._consume(gr.tokens.comma,"Expected ',' for struct member."),t.push(new mr(n,s,e))}this._consume(gr.tokens.brace_right,"Expected '}' after struct body.");const n=new Yn(e,t);return this._context.structs.set(e,n),n}_global_variable_decl(){const e=this._variable_decl();return e&&this._match(gr.tokens.equal)&&(e.value=this._const_expression()),e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(gr.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){if(!this._match(gr.keywords.const))return null;const e=this._consume(gr.tokens.ident,"Expected variable name");let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;if(this._match(gr.tokens.equal)){const e=this._short_circuit_or_expression();if(e instanceof Qn)n=e;else if(e instanceof tr&&e.initializer instanceof Qn)n=e.initializer;else try{const t=e.evaluate(this._context);n=new nr(t)}catch(t){n=e}}const r=new On(e.toString(),t,"","",n);return this._context.constants.set(r.name,r),r}_global_let_decl(){if(!this._match(gr.keywords.let))return null;const e=this._consume(gr.tokens.ident,"Expected variable name");let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;return this._match(gr.tokens.equal)&&(n=this._const_expression()),new Pn(e.toString(),t,"","",n)}_const_expression(){if(this._match(gr.const_literal))return new Kn(this._previous().toString());const e=this._type_decl();this._consume(gr.tokens.paren_left,"Expected '('.");let t=[];for(;!this._check(gr.tokens.paren_right)&&(t.push(this._const_expression()),this._check(gr.tokens.comma));)this._advance();return this._consume(gr.tokens.paren_right,"Expected ')'."),new Qn(e,t)}_variable_decl(){if(!this._match(gr.keywords.var))return null;let e="",t="";this._match(gr.tokens.less_than)&&(e=this._consume(gr.storage_class,"Expected storage_class.").toString(),this._match(gr.tokens.comma)&&(t=this._consume(gr.access_mode,"Expected access_mode.").toString()),this._consume(gr.tokens.greater_than,"Expected '>'."));const n=this._consume(gr.tokens.ident,"Expected variable name");let r=null;if(this._match(gr.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}return new En(n.toString(),r,e,t,null)}_override_decl(){if(!this._match(gr.keywords.override))return null;const e=this._consume(gr.tokens.ident,"Expected variable name");let t=null;if(this._match(gr.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return new In(e.toString(),t,null)}_enable_directive(){const e=this._consume(gr.tokens.ident,"identity expected.");return new Ln(e.toString())}_type_alias(){const e=this._consume(gr.tokens.ident,"identity expected.");this._consume(gr.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=new jn(e.toString(),t);return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([gr.tokens.ident,...gr.texel_format,gr.keywords.bool,gr.keywords.f32,gr.keywords.i32,gr.keywords.u32])){const e=this._advance(),t=e.toString();return this._context.structs.has(t)?this._context.structs.get(t):this._context.aliases.has(t)?this._context.aliases.get(t).type:new Fn(e.toString())}let e=this._texture_sampler_types();if(e)return e;if(this._check(gr.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(gr.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(gr.tokens.comma)&&(n=this._consume(gr.access_mode,"Expected access_mode for pointer").toString()),this._consume(gr.tokens.greater_than,"Expected '>' for type.")),new $n(e,t,n)}if(this._match(gr.keywords.ptr)){let e=this._previous().toString();this._consume(gr.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(gr.storage_class,"Expected storage_class for pointer");this._consume(gr.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let r=null;return this._match(gr.tokens.comma)&&(r=this._consume(gr.access_mode,"Expected access_mode for pointer").toString()),this._consume(gr.tokens.greater_than,"Expected '>' for pointer."),new Wn(e,t.toString(),n,r)}const t=this._attribute();if(this._match(gr.keywords.array)){let e=null,n=-1;const r=this._previous();if(this._match(gr.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t="";this._match(gr.tokens.comma)&&(t=this._shift_expression().evaluate(this._context).toString()),this._consume(gr.tokens.greater_than,"Expected '>' for array."),n=t?parseInt(t):0}return new Hn(r.toString(),t,e,n)}return null}_texture_sampler_types(){if(this._match(gr.sampler_type))return new Zn(this._previous().toString(),null,null);if(this._match(gr.depth_texture_type))return new Zn(this._previous().toString(),null,null);if(this._match(gr.sampled_texture_type)||this._match(gr.multisampled_texture_type)){const e=this._previous();this._consume(gr.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(gr.tokens.greater_than,"Expected '>' for sampler type."),new Zn(e.toString(),t,null)}if(this._match(gr.storage_texture_type)){const e=this._previous();this._consume(gr.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(gr.texel_format,"Invalid texel format.").toString();this._consume(gr.tokens.comma,"Expected ',' after texel format.");const n=this._consume(gr.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(gr.tokens.greater_than,"Expected '>' for sampler type."),new Zn(e.toString(),t,n)}return null}_attribute(){let e=[];for(;this._match(gr.tokens.attr);){const t=this._consume(gr.attribute_name,"Expected attribute name"),n=new pr(t.toString(),null);if(this._match(gr.tokens.paren_left)){if(n.value=this._consume(gr.literal_or_ident,"Expected attribute value").toString(),this._check(gr.tokens.comma)){this._advance();do{const e=this._consume(gr.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(gr.tokens.comma))}this._consume(gr.tokens.paren_right,"Expected ')'")}e.push(n)}for(;this._match(gr.tokens.attr_left);){if(!this._check(gr.tokens.attr_right))do{const t=this._consume(gr.attribute_name,"Expected attribute name"),n=new pr(t.toString(),null);if(this._match(gr.tokens.paren_left)){if(n.value=[this._consume(gr.literal_or_ident,"Expected attribute value").toString()],this._check(gr.tokens.comma)){this._advance();do{const e=this._consume(gr.literal_or_ident,"Expected attribute value").toString();n.value.push(e)}while(this._match(gr.tokens.comma))}this._consume(gr.tokens.paren_right,"Expected ')'")}e.push(n)}while(this._match(gr.tokens.comma));this._consume(gr.tokens.attr_right,"Expected ']]' after attribute declarations")}return 0==e.length?null:e}}class wr{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class br{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class kr extends wr{constructor(e,t){super(e,t),this.members=[],this.align=0}get isStruct(){return!0}}class Tr extends wr{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class Sr extends wr{constructor(e,t,n,r){super(e,n),this.format=t,this.access=r}get isTemplate(){return!0}}!function(e){e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"}(gn||(gn={}));class Mr{constructor(e,t,n,r,s,i,o){this.name=e,this.type=t,this.group=n,this.binding=r,this.attributes=s,this.resourceType=i,this.access=o}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class Ar{constructor(e,t){this.name=e,this.type=t}}class Er{constructor(e,t){this.align=e,this.size=t}}class Ir{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r,this.interpolation=null}}class Pr{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r}}class Or{constructor(e,t=null){this.stage=null,this.inputs=[],this.outputs=[],this.resources=[],this.name=e,this.stage=t}}class Ur{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class Rr{constructor(e,t,n,r){this.name=e,this.type=t,this.attributes=n,this.id=r}}class Br{constructor(e){this.resources=null,this.node=e}}class zr{constructor(e){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new Ur,this._types=new Map,this._functions=new Map,e&&this.update(e)}_isStorageTexture(e){return"texture_storage_1d"==e.name||"texture_storage_2d"==e.name||"texture_storage_2d_array"==e.name||"texture_storage_3d"==e.name}update(e){const t=(new vr).parse(e);for(const e of t)e instanceof kn&&this._functions.set(e.name,new Br(e));for(const e of t)if(e instanceof Yn){const t=this._getTypeInfo(e,null);t instanceof kr&&this.structs.push(t)}else if(e instanceof jn)this.aliases.push(this._getAliasInfo(e));else if(e instanceof In){const t=e,n=this._getAttributeNum(t.attributes,"id",0),r=null!=t.type?this._getTypeInfo(t.type,t.attributes):null;this.overrides.push(new Rr(t.name,r,t.attributes,n))}else if(this._isUniformVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=new Mr(t.name,s,n,r,t.attributes,gn.Uniform,t.access);this.uniforms.push(i)}else if(this._isStorageVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=this._isStorageTexture(s),o=new Mr(t.name,s,n,r,t.attributes,i?gn.StorageTexture:gn.Storage,t.access);this.storage.push(o)}else if(this._isTextureVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=this._isStorageTexture(s),o=new Mr(t.name,s,n,r,t.attributes,i?gn.StorageTexture:gn.Texture,t.access);i?this.storage.push(o):this.textures.push(o)}else if(this._isSamplerVar(e)){const t=e,n=this._getAttributeNum(t.attributes,"group",0),r=this._getAttributeNum(t.attributes,"binding",0),s=this._getTypeInfo(t.type,t.attributes),i=new Mr(t.name,s,n,r,t.attributes,gn.Sampler,t.access);this.samplers.push(i)}else if(e instanceof kn){const t=this._getAttribute(e,"vertex"),n=this._getAttribute(e,"fragment"),r=this._getAttribute(e,"compute"),s=t||n||r;if(s){const t=new Or(e.name,null==s?void 0:s.name);t.inputs=this._getInputs(e.args),t.outputs=this._getOutputs(e.returnType),t.resources=this._findResources(e),this.entry[s.name].push(t)}}}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_findResources(e){const t=[],n=this,r=[];return e.search((e=>{if(e instanceof vn)r.push({});else if(e instanceof wn)r.pop();else if(e instanceof En){if(r.length>0){const t=e;r[r.length-1][t.name]=t}}else if(e instanceof Pn){if(r.length>0){const t=e;r[r.length-1][t.name]=t}}else if(e instanceof er){const s=e;if(r.length>0&&r[r.length-1][s.name])return;const i=n._findResource(s.name);i&&t.push(i)}else if(e instanceof Jn){const r=e,s=n._functions.get(r.name);s&&(null===s.resources&&(s.resources=n._findResources(s.node)),t.push(...s.resources))}})),[...new Map(t.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.storage)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.textures)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.samplers)t(n.group,n.binding),e[n.group][n.binding]=n;return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof Yn)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof Yn)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(null!==e){const r=this._getTypeInfo(n.type,n.type.attributes),s=this._parseInt(e.value),i=new Pr(n.name,r,e.name,s);t.push(i)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getTypeInfo(e,e.attributes),r=this._parseInt(t.value);return new Pr("",n,t.name,r)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof Yn)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof Yn)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getAttribute(e,"interpolation"),r=this._getTypeInfo(e.type,e.attributes),s=this._parseInt(t.value),i=new Ir(e.name,r,t.name,s);return null!==n&&(i.interpolation=this._parseString(n.value)),i}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new Ar(e.name,this._getTypeInfo(e.type,null))}_getTypeInfo(e,t){if(this._types.has(e))return this._types.get(e);if(e instanceof Hn){const n=e,r=this._getTypeInfo(n.format,n.attributes),s=new Tr(n.name,t);return s.format=r,s.count=n.count,this._types.set(e,s),this._updateTypeInfo(s),s}if(e instanceof Yn){const n=e,r=new kr(n.name,t);for(const e of n.members){const t=this._getTypeInfo(e.type,e.attributes);r.members.push(new br(e.name,t,e.attributes))}return this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof Zn){const n=e,r=n.format instanceof Fn,s=n.format?r?this._getTypeInfo(n.format,null):new wr(n.format,null):null,i=new Sr(n.name,s,t,n.access);return this._types.set(e,i),this._updateTypeInfo(i),i}if(e instanceof $n){const n=e,r=n.format?this._getTypeInfo(n.format,null):null,s=new Sr(n.name,r,t,n.access);return this._types.set(e,s),this._updateTypeInfo(s),s}const n=new wr(e.name,t);return this._types.set(e,n),this._updateTypeInfo(n),n}_updateTypeInfo(e){var t,n;const r=this._getTypeSize(e);if(e.size=null!==(t=null==r?void 0:r.size)&&void 0!==t?t:0,e instanceof Tr){const t=this._getTypeSize(e.format);e.stride=null!==(n=null==t?void 0:t.size)&&void 0!==n?n:0,this._updateTypeInfo(e.format)}e instanceof kr&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,r=0,s=0,i=0;for(let o=0,a=e.members.length;o<a;++o){const a=e.members[o],c=this._getTypeSize(a);if(!c)continue;null!==(t=this._getAlias(a.type.name))&&void 0!==t||a.type;const u=c.align,l=c.size;n=this._roundUp(u,n+r),r=l,s=n,i=Math.max(i,u),a.offset=n,a.size=l,this._updateTypeInfo(a.type)}e.size=this._roundUp(i,s+r),e.align=i}_getTypeSize(e){var t;if(null==e)return null;const n=this._getAttributeNum(e.attributes,"size",0),r=this._getAttributeNum(e.attributes,"align",0);if(e instanceof br&&(e=e.type),e instanceof wr){const t=this._getAlias(e.name);null!==t&&(e=t)}{const t=zr._typeInfo[e.name];if(void 0!==t){const s="f16"===e.format?2:1;return new Er(Math.max(r,t.align/s),Math.max(n,t.size/s))}}{const t=zr._typeInfo[e.name.substring(0,e.name.length-1)];if(t){const s="h"===e.name[e.name.length-1]?2:1;return new Er(Math.max(r,t.align/s),Math.max(n,t.size/s))}}if(e instanceof Tr){let s=e,i=8,o=8;const a=this._getTypeSize(s.format);return null!==a&&(o=a.size,i=a.align),o=s.count*this._getAttributeNum(null!==(t=null==e?void 0:e.attributes)&&void 0!==t?t:null,"stride",this._roundUp(i,o)),n&&(o=n),new Er(Math.max(r,i),Math.max(n,o))}if(e instanceof kr){let t=0,s=0,i=0,o=0,a=0;for(const n of e.members){const e=this._getTypeSize(n.type);null!==e&&(t=Math.max(e.align,t),i=this._roundUp(e.align,i+o),o=e.size,a=i)}return s=this._roundUp(t,a+o),new Er(Math.max(r,t),Math.max(n,s))}return null}_isUniformVar(e){return e instanceof En&&"uniform"==e.storage}_isStorageVar(e){return e instanceof En&&"storage"==e.storage}_isTextureVar(e){return e instanceof En&&null!==e.type&&-1!=zr._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof En&&null!==e.type&&-1!=zr._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const r=n.attributes;for(let e of r)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let r of e)if(r.name==t){let e=null!==r&&null!==r.value?r.value:n;return e instanceof Array&&(e=e[0]),"number"==typeof e?e:"string"==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}function Dr(e,t){const n=function(e){return Array.isArray(e)||cn(e)?[...e,1,1].slice(0,3):function(e){return[e.width,e.height||1,e.depthOrArrayLayers||1]}(e)}(e),r=Math.max(...n.slice(0,"3d"===t?3:2));return 1+Math.log2(r)|0}zr._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},zr._textureTypes=gr.any_texture_type.map((e=>e.name)),zr._samplerTypes=gr.sampler_type.map((e=>e.name));const Nr=new WeakMap;const Cr=new Map([[Int8Array,{formats:["sint8","snorm8"],defaultForType:1}],[Uint8Array,{formats:["uint8","unorm8"],defaultForType:1}],[Int16Array,{formats:["sint16","snorm16"],defaultForType:1}],[Uint16Array,{formats:["uint16","unorm16"],defaultForType:1}],[Int32Array,{formats:["sint32","snorm32"],defaultForType:0}],[Uint32Array,{formats:["uint32","unorm32"],defaultForType:0}],[Float32Array,{formats:["float32","float32"],defaultForType:0}]]);function Lr(e){return cn(e)||Array.isArray(e)||function(e){const t=e;return cn(t.data)||Array.isArray(t.data)}(e)}function jr(e){switch(e){case"1d":return"1d";case"3d":return"3d";default:return"2d"}}new Map([...Cr.entries()].map((([e,{formats:[t,n]}])=>[[t,e],[n,e]])).flat());const Vr={"8snorm":Int8Array,"8unorm":Uint8Array,"8sint":Int8Array,"8uint":Uint8Array,"16snorm":Int16Array,"16unorm":Uint16Array,"16sint":Int16Array,"16uint":Uint16Array,"32snorm":Int32Array,"32unorm":Uint32Array,"32sint":Int32Array,"32uint":Uint32Array,"16float":Uint16Array,"32float":Float32Array},qr=/([a-z]+)(\d+)([a-z]+)/;function Gr(e){const[,t,n,r]=qr.exec(e),s=t.length,i=parseInt(n)/8;return{channels:t,numChannels:s,bytesPerChannel:i,bytesPerElement:s*i,Type:Vr[`${n}${r}`]}}function Fr(e,t,n,r={}){n.forEach(((n,s)=>{const i=[0,0,s+(r.baseArrayLayer||0)];if(Lr(n))!function(e,t,n,r){const s=function(e,t){if(cn(e))return e;const{Type:n}=Gr(t);return new n(e)}(n.data||n,t.format),i=function(e,t){return[e.width,e.height,e.depthOrArrayLayers].map((e=>Math.max(1,Math.floor(e/1))))}(t),{bytesPerElement:o}=Gr(t.format),a=r.origin||[0,0,0];e.queue.writeTexture({texture:t,origin:a},s,{bytesPerRow:o*i[0],rowsPerImage:i[1]},i)}(e,t,n,{origin:i});else{const s=n,{flipY:o,premultipliedAlpha:a,colorSpace:c}=r;e.queue.copyExternalImageToTexture({source:s,flipY:o},{texture:t,premultipliedAlpha:a,colorSpace:c,origin:i},Yr(s,r))}})),t.mipLevelCount>1&&function(e,t,n){let r=Nr.get(e);r||(r={pipelineByFormatAndView:{},moduleByViewType:{}},Nr.set(e,r));let{sampler:s,uniformBuffer:i,uniformValues:o}=r;const{pipelineByFormatAndView:a,moduleByViewType:c}=r;n=n||function(e){switch(e.dimension){case"1d":return"1d";case"3d":return"3d";default:return e.depthOrArrayLayers>1?"2d-array":"2d"}}(t);let u=c[n];if(!u){const t=function(e){let t,n;switch(e){case"2d":t="texture_2d<f32>",n="textureSample(ourTexture, ourSampler, fsInput.texcoord)";break;case"2d-array":t="texture_2d_array<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              fsInput.texcoord,\n              uni.layer)";break;case"cube":t="texture_cube<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1))";break;case"cube-array":t="texture_cube_array<f32>",n="\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1), uni.layer)";break;default:throw new Error(`unsupported view: ${e}`)}return`\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          return vsOutput;\n        }\n\n        struct Uniforms {\n          layer: u32,\n        };\n\n        @group(0) @binding(0) var ourSampler: sampler;\n        @group(0) @binding(1) var ourTexture: ${t};\n        @group(0) @binding(2) var<uniform> uni: Uniforms;\n\n        @fragment fn fs(fsInput: VSOutput) -> @location(0) vec4f {\n          _ = uni.layer; // make sure this is used so all pipelines have the same bindings\n          return ${n};\n        }\n      `}(n);u=e.createShaderModule({label:`mip level generation for ${n}`,code:t}),c[n]=u}s||(s=e.createSampler({minFilter:"linear",magFilter:"linear"}),i=e.createBuffer({size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),o=new Uint32Array(1),Object.assign(r,{sampler:s,uniformBuffer:i,uniformValues:o}));const l=`${t.format}.${n}`;a[l]||(a[l]=e.createRenderPipeline({label:`mip level generator pipeline for ${n}`,layout:"auto",vertex:{module:u,entryPoint:"vs"},fragment:{module:u,entryPoint:"fs",targets:[{format:t.format}]}}));const h=a[l];for(let r=1;r<t.mipLevelCount;++r)for(let a=0;a<t.depthOrArrayLayers;++a){o[0]=a,e.queue.writeBuffer(i,0,o);const c=e.createBindGroup({layout:h.getBindGroupLayout(0),entries:[{binding:0,resource:s},{binding:1,resource:t.createView({dimension:n,baseMipLevel:r-1,mipLevelCount:1})},{binding:2,resource:{buffer:i}}]}),u={label:"mip gen renderPass",colorAttachments:[{view:t.createView({dimension:"2d",baseMipLevel:r,mipLevelCount:1,baseArrayLayer:a,arrayLayerCount:1}),loadOp:"clear",storeOp:"store"}]},l=e.createCommandEncoder({label:"mip gen encoder"}),d=l.beginRenderPass(u);d.setPipeline(h),d.setBindGroup(0,c),d.draw(3),d.end();const f=l.finish();e.queue.submit([f])}}(e,t)}function Yr(e,t){if(e instanceof HTMLVideoElement)return[e.videoWidth,e.videoHeight,1];{const n=e,{width:r,height:s}=n;if(r>0&&s>0&&!Lr(e))return[r,s,1];const i=t.format||"rgba8unorm",{bytesPerElement:o,bytesPerChannel:a}=Gr(i),c=cn(e)||Array.isArray(e)?e:e.data;return function(e,t,n,r="2d"){if(n%1!=0)throw new Error("can't guess dimensions");if(e||t){if(t){if(!e&&(e=n/t)%1)throw new Error("can't guess dimensions")}else if((t=n/e)%1)throw new Error("can't guess dimensions")}else{const s=Math.sqrt(n/("cube"===r?6:1));s%1==0?(e=s,t=s):(e=n,t=1)}const s=n/e/t;if(s%1)throw new Error("can't guess dimensions");return[e,t,s]}(r,s,(cn(c)?c.byteLength:c.length*a)/o)}}async function $r(e,t,n={}){const r=await Promise.all(t.map((e=>async function(e,t={}){const n=await fetch(e),r=await n.blob(),s={...t,...void 0!==t.colorSpaceConversion&&{colorSpaceConversion:"none"}};return await createImageBitmap(r,s)}(e))));return function(e,t,n={}){const r=Yr(t[0],n);r[2]=r[2]>1?r[2]:t.length;const s=e.createTexture({dimension:jr(n.dimension),format:n.format||"rgba8unorm",mipLevelCount:n.mipLevelCount?n.mipLevelCount:n.mips?Dr(r):1,size:r,usage:(n.usage??0)|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});return Fr(e,s,t,n),s}(e,r,n)}const Wr={format:"rgba8unorm",usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING,dimension:"3d"},Hr={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let Zr;const Xr=new Uint8Array(16);function Kr(){if(!Zr&&(Zr="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Zr))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Zr(Xr)}const Qr=[];for(let e=0;e<256;++e)Qr.push((e+256).toString(16).slice(1));const Jr=function(e,t,n){if(Hr.randomUUID&&!t&&!e)return Hr.randomUUID();const r=(e=e||{}).random||(e.rng||Kr)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return function(e,t=0){return Qr[e[t+0]]+Qr[e[t+1]]+Qr[e[t+2]]+Qr[e[t+3]]+"-"+Qr[e[t+4]]+Qr[e[t+5]]+"-"+Qr[e[t+6]]+Qr[e[t+7]]+"-"+Qr[e[t+8]]+Qr[e[t+9]]+"-"+Qr[e[t+10]]+Qr[e[t+11]]+Qr[e[t+12]]+Qr[e[t+13]]+Qr[e[t+14]]+Qr[e[t+15]]}(r)};class es{id;name;transform;inverseTransform;previousTransform;previousInverseTransform;size;atlasLocation;worldSpaceCenter;constructor(e,t,n,r="unnamed"){this.id=Jr(),this.name=r,this.transform=e,this.size=t,this.inverseTransform=ve.invert(this.transform),this.previousTransform=ve.clone(this.transform),this.previousInverseTransform=ve.clone(this.inverseTransform),this.atlasLocation=n;const s=se.transformMat4(se.create(),this.transform),i=se.transformMat4(this.size,this.transform);this.worldSpaceCenter=se.lerp(s,i,.5)}get worldSpaceCorners(){return[[0,0,0],[0,0,this.size[2]],[0,this.size[1],0],[0,this.size[1],this.size[2]],[this.size[0],0,0],[this.size[0],0,this.size[2]],[this.size[0],this.size[1],0],[this.size[0],this.size[1],this.size[2]]].map((e=>se.transformMat4(e,this.transform)))}toArray(){return[...this.transform,...this.inverseTransform,...this.previousTransform,...this.previousInverseTransform,...this.size,0,...this.atlasLocation,0]}}class ts{index;dataView;constructor(e){this.dataView=new DataView(e),this.index=0}readUint8(){const e=this.dataView.getUint8(this.index);return this.index++,e}readUint32(){const e=this.dataView.getUint32(this.index,!0);return this.index+=4,e}readFloat32(){const e=this.dataView.getFloat32(this.index,!0);return this.index+=4,e}skip(e){this.index+=e}}const ns=e=>0===e;let rs=[];const ss=["Dragon","Table","Bench","Stool","BarTop","BarTopS","BarTop1","Barrel","Keg","Bed","Torch","TorchHolder","FireLogs","Bookshelf","Books4","Door","Tavern"];class is{nodes;allVoxelObjects;constructor(e){const t=performance.now();this.allVoxelObjects=e,this.nodes=[],this.buildBVH(e,0);const n=performance.now();xs.addSample("create bvh",n-t);const r=this.nodes.filter((e=>1===e.objectCount));console.log({leafCount:r.length,voxelObjectCount:e.length})}buildBVH(e,t){if(0===e.length)return;const{left:n,right:r}=(e=>{e.sort(((e,t)=>e.size[0]*e.size[1]*e.size[2]-t.size[0]*t.size[1]*t.size[2]));const t=Math.floor(e.length/2);return{left:e.slice(0,t),right:e.slice(t)}})(e),s=(e=>{let t=[1/0,1/0,1/0],n=[-1/0,-1/0,-1/0];for(const r of e)for(const e of r.worldSpaceCorners)for(let r=0;r<3;r++)t[r]=Math.min(t[r],e[r]),n[r]=Math.max(n[r],e[r]);return{min:t,max:n}})(e);let i=2*t+1,o=2*t+2;1===e.length&&(i=this.allVoxelObjects.indexOf(e[0]),o=-1),this.nodes[t]={leftChildIndex:i,rightChildIndex:o,objectCount:e.length,AABBMax:s.max,AABBMin:s.min},n.length>1&&this.buildBVH(n,i),r.length>1&&this.buildBVH(r,o),2===e.length&&(this.buildBVH(n,i),this.buildBVH(r,o))}toGPUBuffer(e,t){const n=(44,16,16*Math.ceil(2.75));const r=e.createBuffer({size:t*n,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,mappedAtCreation:!1});return this.nodes.forEach(((t,s)=>{const i=s*n,o=new ArrayBuffer(n),a=new DataView(o);a.setInt32(0,t.leftChildIndex,!0),a.setInt32(4,t.rightChildIndex,!0),a.setUint32(8,t.objectCount,!0),a.setFloat32(16,t.AABBMin[0],!0),a.setFloat32(20,t.AABBMin[1],!0),a.setFloat32(24,t.AABBMin[2],!0),a.setFloat32(32,t.AABBMax[0],!0),a.setFloat32(36,t.AABBMax[1],!0),a.setFloat32(40,t.AABBMax[2],!0),e.queue.writeBuffer(r,i,o,0,n)})),r}}const os=new class{maxObjectCount;objectCount;scale;targetScale;translateX;targetTranslateX;rotateY;targetRotateY;sunRotateY;targetSunRotateY;constructor(){this.maxObjectCount=222,this.objectCount=222,this.scale=1,this.translateX=0,this.targetScale=1,this.targetTranslateX=0,this.rotateY=0,this.targetRotateY=0,this.sunRotateY=2.6,this.targetSunRotateY=2.6}update(){Jt((e=>{const t=this.targetScale-this.scale;this.scale=this.scale+t*e}),{easing:rn({velocity:2e-4*ms})}),Jt((e=>{const t=this.targetTranslateX-this.translateX;this.translateX=this.translateX+t*e}),{easing:rn({velocity:2e-4*ms})}),Jt((e=>{const t=this.targetRotateY-this.rotateY;this.rotateY=this.rotateY+t*e}),{easing:rn({velocity:2e-4*ms})}),Jt((e=>{const t=this.targetSunRotateY-this.sunRotateY;this.sunRotateY=this.sunRotateY+t*e}),{easing:rn({velocity:2e-4*ms})})}};let as,cs,us,ls,hs=R.create(4,4),ds=0,fs=ds,ms=0,ps=0;const _s=Math.PI/180*90;let gs=new class extends sn{fieldOfView;near=.5;far=1e4;constructor(e){super({position:e.position,rotation:Ye.fromMat(ve.lookAt(se.create(),e.direction,se.create(0,1,0)))}),this.fieldOfView=e.fieldOfView}get direction(){return se.transformQuat(se.create(0,0,1),this.rotation)}get right(){return se.transformQuat(se.create(1,0,0),this.rotation)}get left(){return se.transformQuat(se.create(-1,0,0),this.rotation)}get up(){return se.transformQuat(se.create(0,1,0),this.rotation)}get down(){return se.transformQuat(se.create(0,-1,0),this.rotation)}get viewMatrix(){const e=this.position;return ve.lookAt(e,se.add(e,this.direction),this.up)}get inverseViewMatrix(){return ve.invert(this.viewMatrix)}get projectionMatrix(){return ve.perspective(this.fieldOfView,hs[0]/hs[1],this.near,this.far)}get inverseProjectionMatrix(){return ve.invert(this.projectionMatrix)}get viewProjectionMatrix(){return ve.mul(this.projectionMatrix,this.viewMatrix)}get inverseViewProjectionMatrix(){return ve.invert(this.viewProjectionMatrix)}}({fieldOfView:_s,position:se.create(-42,6,-45),direction:se.create(0,0,-.5)});const ys=new class{logElement;isMouseDown=!1;constructor(){document.getElementById("reset").addEventListener("click",(e=>{window.dispatchEvent(new CustomEvent("resetcamera")),document.getElementById("captures").innerHTML=""})),document.getElementById("capture").addEventListener("click",(e=>{const t=new Image;t.id=performance.now().toString(),t.src=us.toDataURL(),document.getElementById("captures").appendChild(t).addEventListener("click",(e=>{e.target,console.log(e.target)}))})),document.addEventListener("wheel",(e=>{gs.fieldOfView+=.001*e.deltaY,gs.fieldOfView=Math.max(Math.min(gs.fieldOfView,2),.1)})),["fov","scale","translate","sun"].forEach((e=>{document.getElementById(e).addEventListener("input",(t=>{const n=t.target;window.dispatchEvent(new CustomEvent(`change${e}`,{detail:n.value}))}))})),this.logElement=document.getElementById("log"),window.addEventListener("changefov",(e=>{gs.fieldOfView=parseFloat(e.detail)})),window.addEventListener("changetranslate",(e=>{os.targetTranslateX=.01*parseFloat(e.detail)})),window.addEventListener("changesun",(e=>{os.targetSunRotateY=parseFloat(e.detail)})),window.addEventListener("changescale",(e=>{os.targetScale=parseFloat(e.detail)})),window.addEventListener("resetcamera",(()=>{os.targetTranslateX=0,os.targetScale=1,os.targetRotateY=0})),document.getElementById("webgpu-canvas").addEventListener("mousedown",(()=>{this.isMouseDown=!0})),document.getElementById("webgpu-canvas").addEventListener("mouseup",(()=>{this.isMouseDown=!1})),document.getElementById("webgpu-canvas").addEventListener("mouseleave",(()=>{this.isMouseDown=!1})),window.addEventListener("mousemove",(e=>{this.isMouseDown&&(os.targetRotateY-=.005*e.movementX)}))}log(e){this.logElement.innerHTML=e}},xs=(()=>{let e={};const t=t=>{const n=e[t];return n?n.reduce(((e,t)=>e+t))/n.length:0};return{addSample:(t,n)=>{e[t]||(e[t]=[]),e[t].push(n)>50&&e[t].shift()},clearEntry:t=>{e[t]&&(e[t]=[0])},toString:()=>Object.keys(e).map((e=>`${e}: ${t(e).toFixed(2)}ms`)).join("\n"),toHTML:()=>Object.keys(e).map((e=>`<div class="debug-row">\n                    <div>\n                        ${e}\n                    </div>\n                   <div>${t(e).toFixed(2)}ms</div>\n                </div>`)).join("\n")}})();let vs,ws;xs.addSample("frame time",0);let bs=[[-16.468910217285156,2.6069962978363037,-44.74098205566406],[-12.986907958984375,2.6069962978363037,-44.74098205566406],[-12.131904602050781,3.019996166229248,-37.079986572265625],[-16.572906494140625,3.019996166229248,-37.079986572265625],[-6.14190673828125,3.019996166229248,-37.769989013671875],[-3.7419052124023438,4.989995956420898,-42.18998718261719],[-8.631904602050781,4.989995956420898,-27.739990234375],[-8.631904602050781,13.000996589660645,-39.90599060058594],[-14.261909484863281,13.000996589660645,-39.459991455078125],[-24.241905212402344,13.000996589660645,-39.459991455078125],[-26.64190673828125,13.000996589660645,-41.90998840332031],[-26.367904663085938,13.000996589660645,-47.74998474121094],[-34.231903076171875,13.995996475219727,-51.449981689453125],[-35.911903381347656,13.995996475219727,-51.699981689453125],[-43.89190673828125,13.995996475219727,-51.699981689453125],[-50.5819091796875,14.959996223449707,-32.77998352050781],[-42.77190399169922,12.995996475219727,-26.5479736328125],[-39.40190887451172,12.995996475219727,-26.5479736328125],[-35.27190399169922,12.995996475219727,-26.5479736328125],[-28.65190887451172,12.995996475219727,-25.0999755859375],[-24.13190460205078,14.989995956420898,-27.79998779296875],[-27.814903259277344,4.985996246337891,-12.99298095703125],[-27.814903259277344,4.985996246337891,-5.8699951171875],[-33.27190399169922,4.985996246337891,-3.629974365234375],[-42.121910095214844,4.985996246337891,-3.629974365234375],[-50.361907958984375,4.985996246337891,-12.3699951171875],[-50.361907958984375,4.985996246337891,-21.29998779296875],[-50.361907958984375,4.985996246337891,-29.42999267578125],[-35.84690856933594,3.9849960803985596,-51.3289794921875],[-34.194908142089844,3.9849960803985596,-51.58198547363281],[-29.941909790039062,4.9919962882995605,-50.47398376464844],[-23.481903076171875,4.9919962882995605,-50.47398376464844],[-5.621910095214844,4.9919962882995605,-50.47398376464844],[-26.703903198242188,23.975996017456055,-9.089996337890625]].map(((e,t)=>({position:[e[0],e[1]+1,e[2]],size:3,color:[1,.8,.4]})));bs=[bs[0],bs[1]];(async()=>{if(!navigator.gpu)return void console.error("WebGPU not supported");const e=await navigator.gpu.requestAdapter();if(!as)try{as=await e.requestDevice({requiredFeatures:["timestamp-query"],requiredLimits:{maxColorAttachmentBytesPerSample:64}})}catch(t){as=await e.requestDevice()}console.debug(as.limits),ls=await(async e=>{let t=null,n={};const r=e.createCommandEncoder();t||(t=e.createTexture({size:{width:8,height:8,depthOrArrayLayers:8},...Wr,label:"Volume atlas containing ",mipLevelCount:1})),e.queue.submit([r.finish()]),await e.queue.onSubmittedWorkDone();const s=(e,t)=>Math.ceil(e/t)*t;return{getVolumes:()=>n,addVolume:(r,i,o)=>{if(n[o])throw new Error(`Error adding volume to atlas: volume with label ${o} already exists`);const{width:a,height:c,depthOrArrayLayers:u}=i,l=s(a,8),h=s(c,8),d=s(u,8);console.debug(`Adding ${o} to atlas`,{width:a,height:c,depthOrArrayLayers:u});const f=t.width+l;if(f>e.limits.maxTextureDimension3D)throw new Error(`Error adding volume to atlas: adding volume would exceed device max texture dimension of ${e.limits.maxTextureDimension3D}`);const m=Math.max(t.height,h),p=Math.max(t.depthOrArrayLayers,d),_=Math.max(i.mipLevelCount,t.mipLevelCount);console.debug(`Expanding atlas texture to [${f}, ${m}, ${p}], mip levels: ${_}`);const g=e.createTexture({size:{width:f,height:m,depthOrArrayLayers:p},mipLevelCount:_,...Wr,label:`${t.label}, ${i.label||"unnamed volume"}`}),y=t.width;r.copyTextureToTexture({texture:t},{texture:g},{width:t.width,height:t.height,depthOrArrayLayers:t.depthOrArrayLayers}),r.copyTextureToTexture({texture:i},{texture:g,origin:{x:y,y:0,z:0}},{width:a,height:c,depthOrArrayLayers:u}),t=g,n[o]={location:[y,0,0],size:[a,c,u]}},getVolume:e=>n[e],removeVolume:async r=>{if(!n[r])throw new Error(`Error removing volume from atlas: volume with label ${r} does not exist`);if(!t)throw new Error("Error removing from atlas: No atlas texture to remove volume from");const{location:s,size:i}=n[r],o=se.add(s,i),a=se.subtract(o,s);if(a[0]>t.width||a[1]>t.height||a[2]>t.depthOrArrayLayers)throw new Error(`Error removing from atlas: volume to remove (${a}) is larger than atlas texture (${t.width}, ${t.height}, ${t.depthOrArrayLayers})`);const c=e.createCommandEncoder(),u=c.beginComputePass(),l=e.createComputePipeline({layout:"auto",compute:{module:e.createShaderModule({code:"\n                @group(0) @binding(0) var texture : texture_storage_3d<rgba8unorm, write>;\n                override startX: u32 = 0;\n                override startY: u32 = 0;\n                override startZ: u32 = 0;\n                @compute @workgroup_size(1, 1, 1)\n                fn main(\n                  @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n                ) {\n                  textureStore(texture, GlobalInvocationID + vec3(startX, startY, startZ), vec4(0.0));\n                }\n            "}),entryPoint:"main",constants:{startX:s[0],startY:s[1],startZ:s[2]}}});u.setPipeline(l),u.setBindGroup(0,e.createBindGroup({layout:l.getBindGroupLayout(0),entries:[{binding:0,resource:t.createView()}]})),u.dispatchWorkgroups(a[0],a[1],a[2]),u.end(),e.queue.submit([c.finish()]),await e.queue.onSubmittedWorkDone()},getAtlasTextureView:()=>{if(!t)return null;const e=t.createView();return e.label=t.label,e}}})(as),await(async(e,n)=>{const s=await fetch("./Tavern.json"),i=(await s.json()).children.filter((e=>ss.includes(e.name))),o=new Set(i.map((e=>e.name))),a=Array.from(o);let c=e.createCommandEncoder();console.time("Load all volumes");{let s=await Promise.all(a.map((n=>(async(e,n,s)=>{console.time(`Fetch ${n}`);const i=await fetch(`./Tavern/${n}.vxm`);console.timeEnd(`Fetch ${n}`);const o=(e=>{console.time("convert vxm");const t=new ts(e);let n,r=[],s="",i=[];if(s=String.fromCodePoint(t.readUint8(),t.readUint8(),t.readUint8(),t.readUint8()),"VXMC"!==s&&"VXMA"!==s)throw new Error(`Incorrect magic: ${s}`);if(s[3].charCodeAt(0)>="0".charCodeAt(0)&&s[3].charCodeAt(0)<="9".charCodeAt(0))n=s[3].charCodeAt(0)-"0".charCodeAt(0);else{if(!(s[3].charCodeAt(0)>="A".charCodeAt(0)&&s[3].charCodeAt(0)<="C".charCodeAt(0)))throw new Error("Unsupported version found");n=10+s[3].charCodeAt(0)-"A".charCodeAt(0)}if(n<11||n>12)throw new Error(`Could not load vxm file: Unsupported version found (${n})`);let o=[0,0,0];o[0]=t.readUint32(),o[1]=t.readUint32(),o[2]=t.readUint32();let a=[.5,0,.5];if(a[0]=t.readFloat32(),a[1]=t.readFloat32(),a[2]=t.readFloat32(),t.readUint8()>0){let e=0,n=0;t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),t.readUint32(),e=t.readUint32(),n=t.readUint32();let r=e*n;t.skip(4*r)}n>=8&&t.skip(16);let c=t.readUint32();for(let e=0;e<c;++e){let e=t.readUint32(),n=t.readUint32();if(e>2048||n>2048)throw new Error("Size of texture exceeds the max allowed value");let r=t.readUint32();t.skip(r);for(let e=0;e<6;++e){let e=t.readUint32();e>262144&&console.warn(`Size of quads exceeds the max allowed value: ${e}`);let n=4*e*20;t.skip(n)}}t.skip(1024),t.skip(1024);let u=t.readUint8();for(let e=0;e<u;++e)t.skip(1024),t.readUint8(),t.readUint8();let l=t.readUint8();for(let e=0;e<l;++e){let n=t.readUint8(),s=t.readUint8(),i=t.readUint8(),o=t.readUint8();o=1===t.readUint8()?2:255,r[e]={r:i,g:s,b:n,a:o}}let h=1;n>=12&&(h=t.readUint8());let d={min:se.create(9999,9999,9999),max:se.create(0,0,0)};for(let e=0;e<h;++e){let r=0,s=!0,a="";if(n>=12){for(;;){const e=t.readUint8();if(ns(e))break;a=`${a}${String.fromCharCode(e)}`}s=t.readUint8()>0}else a=`Layer ${e}`;for(;;){let e=t.readUint8();if(0===e)break;let n=t.readUint8();if(255!==n)if(n>=l)r+=e;else{for(let t=r;t<r+e;t++){let e=Math.floor(t/(o[1]*o[2])),r=Math.floor(t/o[2]%o[1]),s=Math.floor(t%o[2]);d.min=se.min(d.min,[e,r,s]),d.max=se.max(d.max,[e,r,s]),i.push({x:e,y:r,z:s,c:n})}r+=e}else r+=e}}i=i.map((({x:e,y:t,z:n,c:r})=>({x:e-d.min[0],y:t-d.min[1],z:n-d.min[2],c:r})));const f=se.sub(d.max,d.min);return console.log({bounds:d,trimmedSize:f}),console.timeEnd("convert vxm"),{VOX:i.length,SIZE:[f[0]+1,f[1]+1,f[2]+1],XYZI:i,RGBA:r}})(await i.arrayBuffer());console.time(`Create texture from voxels for ${n}`);let a=await(async(e,n)=>{const s=e.createTexture({size:{width:n.SIZE[0],height:n.SIZE[1],depthOrArrayLayers:n.SIZE[2]},format:"rgba8unorm",usage:GPUTextureUsage.COPY_SRC|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING,dimension:"3d"}),i=e.createBuffer({size:4*n.XYZI.length*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.STORAGE}),o=e.createBuffer({size:4*n.RGBA.length*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.STORAGE});r(o,n.RGBA.map((e=>[e.r/255,e.g/255,e.b/255,e.a/255])).flat()),t(i,n.XYZI.map((e=>[e.x,e.y,e.z,e.c])).flat());const a=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,storageTexture:{access:"write-only",format:s.format,viewDimension:"3d"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}]}),c=e.createComputePipeline({layout:e.createPipelineLayout({bindGroupLayouts:[a]}),compute:{module:e.createShaderModule({code:"@group(0) @binding(0) var output : texture_storage_3d<rgba8unorm, write>;\n@group(0) @binding(1) var<storage, read_write> voxelBuffer: array<vec4<u32>>;\n@group(0) @binding(2) var<storage, read_write> paletteBuffer: array<vec4<f32>>;\n\n@compute @workgroup_size(64, 1, 1)\n fn main(\n   @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n ) {\n    let index = GlobalInvocationID.x;\n    let voxel = voxelBuffer[index];\n    let paletteIndex = voxel.w;\n    let position = voxel.xyz;\n    let color = paletteBuffer[paletteIndex];\n    textureStore(output, position, color);\n }"}),entryPoint:"main"}}),u=e.createBindGroup({layout:a,entries:[{binding:0,resource:s.createView()},{binding:1,resource:{buffer:i}},{binding:2,resource:{buffer:o}}]}),l=e.createCommandEncoder(),h=l.beginComputePass();return h.setPipeline(c),h.setBindGroup(0,u),h.dispatchWorkgroups(n.XYZI.length/64,1,1),h.end(),e.queue.submit([l.finish()]),await e.queue.onSubmittedWorkDone(),s})(s,o);console.timeEnd(`Create texture from voxels for ${n}`),console.time(`Create brick map for ${n}`);const c=await(async(e,n)=>{const r=e.createBuffer({size:4*n.XYZI.length*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.STORAGE});t(r,n.XYZI.map((e=>[e.x,e.y,e.z,e.c])).flat());const s=Math.ceil(n.SIZE[0]/8)*Math.ceil(n.SIZE[1]/8)*Math.ceil(n.SIZE[2]/8),i=e.createBuffer({size:64*s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC|GPUBufferUsage.STORAGE}),o=e.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}},{binding:1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}]}),a=e.createComputePipeline({layout:e.createPipelineLayout({bindGroupLayouts:[o]}),compute:{module:e.createShaderModule({code:"/* 8x8x8 bits\n  vec4 for packing, 64 bytes in total\n  each vec4 represents 8x8x2 bits\n*/\nstruct Brick {\n  voxelSlices: array<vec4<u32>, 4>\n}\n\n@group(0) @binding(0) var<storage, read_write> voxelBuffer: array<vec4<u32>>;\n@group(0) @binding(1) var<storage, read_write> brickMapBuffer: array<Brick>;\n\n\n// Size in each dimension, 8x8x8\nconst BRICK_SIZE = 8;\n\n\nfn getBrickIndex(x: u32, y: u32, z: u32) -> u32 {\n  return x + y * BRICK_SIZE + z * BRICK_SIZE * BRICK_SIZE;\n}\n\n\n@compute @workgroup_size(64, 1, 1)\n fn main(\n   @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n ) {\n    let index = GlobalInvocationID.x;\n    let voxel = voxelBuffer[index];\n    let position = voxel.xyz;\n    let brickIndex = getBrickIndex(position.x / BRICK_SIZE, position.y / BRICK_SIZE, position.z / BRICK_SIZE);\n    let brick = brickMapBuffer[brickIndex];\n\n    // TODO: set bits in brick\n    var newBrick = Brick();\n    newBrick.voxelSlices[0] = vec4<u32>(1);\n    newBrick.voxelSlices[1] = vec4<u32>(2);\n    newBrick.voxelSlices[2] = vec4<u32>(3);\n    newBrick.voxelSlices[3] = vec4<u32>(4);\n    brickMapBuffer[brickIndex] = newBrick;\n }"}),entryPoint:"main"}}),c=e.createBindGroup({layout:o,entries:[{binding:0,resource:{buffer:r}},{binding:1,resource:{buffer:i}}]}),u=e.createCommandEncoder(),l=u.beginComputePass();return l.setPipeline(a),l.setBindGroup(0,c),l.dispatchWorkgroups(s/64),l.end(),e.queue.submit([u.finish()]),await e.queue.onSubmittedWorkDone(),i})(s,o);return console.timeEnd(`Create brick map for ${n}`),{name:n,texture:a,brickMap:c}})(0,n,e))));for(const{name:t,texture:r}of s)console.time(`Add volume for ${t}`),n.addVolume(c,r,t),e.queue.submit([c.finish()]),c=e.createCommandEncoder(),console.timeEnd(`Add volume for ${t}`)}console.timeEnd("Load all volumes");const u=n.getVolumes();let l=[];for(const e of i){const t=u[e.name];if(!t)return void console.warn(`Volume not found for child ${e.name}, skipping...`);const n=ve.identity();"Candle"===e.name&&l.push(e.position),ve.translate(n,e.position,n),ve.scale(n,e.scale,n),ve.multiply(n,ve.fromQuat(e.rotation),n),rs.push(new es(n,t.size,t.location,e.name))}console.log({volumes:u,torchPositions:l}),console.debug(`Tavern created with ${rs.length} items`)})(as,ls);const o=[i(),an(as)],a=await Promise.all(o);((e,i)=>{let o,a,c,u,l,h,d,f,m,p,_,g,y,x,v=ve.create(),w=ve.create();us=document.getElementById("webgpu-canvas"),us.style.imageRendering="pixelated",cs=us.getContext("webgpu"),cs.configure({device:e,format:navigator.gpu.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT}),e.features.has("timestamp-query")&&(y=e.createQuerySet({type:"timestamp",count:2*i.length}),x=e.createBuffer({size:8*y.count,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}));const b=new is(rs);console.log(b);const k=b.nodes.length;let T=b.toGPUBuffer(e,k);const S=()=>{u&&(u=null),o&&(o=null),a&&(a=null),l&&(l=null),c&&(c=null),d&&(d=null);const{clientWidth:e,clientHeight:t}=us.parentElement,n=R.create(1*e,1*t);hs=R.mulScalar(n,1),us.width=n[0],us.height=n[1],us.style.transform="scale(1)"};(async()=>{h||(h=await async function(e,t,n={}){return $r(e,[t],n)}(e,"blue-noise-rg.png",{usage:GPUTextureUsage.COPY_SRC}))})(),setInterval((()=>{ys.log(xs.toHTML())}),500);const M=b=>{0===ds&&(ds=b);const k=b-ds;if(ms=k-fs,xs.addSample("frame time",ms),fs=k,ps++,(()=>{const t=[...gs.viewProjectionMatrix,...w,...gs.inverseViewProjectionMatrix,...v,...gs.projectionMatrix,...gs.inverseProjectionMatrix];_?r(_,t):_=s(e,t)})(),(()=>{const t=rs;document.getElementById("objectcount").innerHTML=`Objects: ${t.length} / ${rs.length} in view`;const n=t.flatMap((e=>e.toArray()));p?r(p,n):(p=s(e,n,"voxel object"),p=e.createBuffer({size:new Float32Array(n).byteLength,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,mappedAtCreation:!1}))})(),!p||!h)return void(ws=requestAnimationFrame(M));(()=>{const e=.005*ms,t=.04*ms;let n=se.zero();on.pressed.a&&(n=se.add(n,gs.left)),on.pressed.d&&(n=se.add(n,gs.right)),on.pressed.w&&(n=se.add(n,gs.direction)),on.pressed.s&&(n=se.subtract(n,gs.direction)),on.pressed.e&&(gs.targetRotation=Ye.rotateY(gs.targetRotation,e)),on.pressed.q&&(gs.targetRotation=Ye.rotateY(gs.targetRotation,-e)),on.pressed[" "]&&(n=se.add(n,gs.up)),on.pressed.shift&&(n=se.add(n,gs.down)),n=se.normalize(n),gs.targetPosition=se.add(gs.targetPosition,se.mulScalar(n,t))})(),gs.update(),os.update();const S=ve.getTranslation(gs.inverseViewMatrix);document.getElementById("resolution").innerHTML=hs.join(" x "),f?t(f,[ps,0]):f=n([ps,0]),e.queue.writeBuffer(f,4,new Float32Array([ms])),m?t(m,[hs[0],hs[1]]):m=n([hs[0],hs[1]]),(()=>{const e=ve.identity();ve.rotateY(e,os.sunRotateY,e);const t=se.transformMat4(se.create(0,-1,-1),e);g?r(g,[t[0],t[1],t[2]]):g=n([t[0],t[1],t[2]])})();const A=s(e,S,"camera position");a||(a=e.createTexture({size:[hs[0],hs[1],1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.COPY_SRC})),o||(o=e.createTexture({size:[hs[0],hs[1],1],format:"rgba16float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT})),u||(u=e.createTexture({size:[hs[0],hs[1],1],format:"depth32float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC})),l||(l=e.createTexture({size:[hs[0],hs[1],1],format:"rgba16float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT})),c||(c=e.createTexture({size:[hs[0],hs[1],1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT})),d||(d=e.createTexture({size:[hs[0],hs[1],1],format:"rgba32float",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT}));let E=[];vs=ls.getAtlasTextureView(),vs?(i.forEach(((t,n)=>{const{render:r,label:s}=t;if(!1===document.getElementById(`flag-${s}`)?.checked)return;const i=e.createCommandEncoder();let v;e.features.has("timestamp-query")&&i.clearBuffer(x),e.features.has("timestamp-query")&&(v={querySet:y,beginningOfPassWriteIndex:2*n,endOfPassWriteIndex:2*n+1}),r({commandEncoder:i,resolutionBuffer:m,timeBuffer:f,outputTextures:{finalTexture:c,albedoTexture:a,normalTexture:o,depthTexture:u,skyTexture:void 0,velocityTexture:l,worldPositionTexture:d},cameraPositionBuffer:A,voxelTextureView:vs,transformationMatrixBuffer:p,viewProjectionMatricesBuffer:_,timestampWrites:v,sunDirectionBuffer:g,blueNoiseTexture:h,bvhBuffer:T,lights:bs}).forEach((e=>{E.push(e)}))})),e.features.has("timestamp-query")&&(t=>{const n=e.createCommandEncoder();n.resolveQuerySet(y,0,y.count,x,0),t.push(n.finish());const r=x.size,s=e.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),o=e.createCommandEncoder();o.copyBufferToBuffer(x,0,s,0,r);const a=o.finish();e.queue.submit([a]),s.mapAsync(GPUMapMode.READ).then((()=>s.getMappedRange())).then((e=>{const t=new BigInt64Array(e),n=[];t.forEach((e=>{n.push(Number(e)/1e6)})),n.reduce(((e,t,r)=>(r%2==0&&e.push(n[r+1]-t),e)),[]).forEach(((e,t)=>{const n=i[t].label,r=`flag-${n}`,s=document.getElementById(r)?.checked;n&&s?xs.addSample(n,e):xs.clearEntry(n)}))}))})(E),e.queue.submit(E),ws=requestAnimationFrame(M),v=gs.inverseViewProjectionMatrix,w=gs.viewProjectionMatrix):ws=requestAnimationFrame(M)};S(),window.onresize=S,ws=requestAnimationFrame(M)})(as,await Promise.all(a)),document.getElementById("flags").innerHTML=a.reduce(((e,t)=>{if(!t.label)return e;const n=`flag-${t.label}`;return`${e}<div class="debug-row">\n                    <label for="${n}">\n                        ${t.label}\n                    </label>\n                    <div>\n                        <input id="${n}" type="checkbox" checked>\n                   </div>\n                </div>`}),"")})()})();